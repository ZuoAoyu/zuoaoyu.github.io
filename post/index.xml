<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 侠客</title><link>https://o5o.me/post/</link><description>Recent content in Posts on 侠客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 28 Apr 2023 11:56:00 +0800</lastBuildDate><atom:link href="https://o5o.me/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Python从环境变量中获取数据库信息</title><link>https://o5o.me/post/python_environment_variable_database_info/</link><pubDate>Fri, 28 Apr 2023 11:56:00 +0800</pubDate><guid>https://o5o.me/post/python_environment_variable_database_info/</guid><description>在开发环境中为了数据安全, 数据库信息不要直接写在代码里, 比较好的做法是将相关信息放在环境变量里, 连接数据库时再从环境变量里读取.
将信息写入环境变量 创建文件.SECRET_KEY, 写入类似下面的内容:
SECRET_HOST=&amp;#39;127.0.0.1&amp;#39; SECRET_DBNAME=&amp;#39;dbname&amp;#39; SECRET_DBUSER=&amp;#39;username&amp;#39; SECRET_DBPASSWD=&amp;#39;123456&amp;#39; 用python包dotenv把文件内容写入环境变量, 安装:
1 pip install python-dotenv 使用:
1 2 3 4 5 6 7 8 9 import os from dotenv import load_dotenv def load_environ_key(path): key_file_path = path if os.path.exists(key_file_path): load_dotenv(key_file_path, override=True) load_environ_key(&amp;#39;/www/xxx/.SECRET_KEY&amp;#39;) 从环境变量读取信息 从环境变量里读取信息举例:
1 2 3 4 5 import os import pymysql db = pymysql.connect(host=os.environ[&amp;#34;SECRET_HOST&amp;#34;], user=os.environ[&amp;#34;SECRET_DBUSER&amp;#34;], passwd=os.environ[&amp;#34;SECRET_DBPASSWD&amp;#34;], database=os.environ[&amp;#34;SECRET_DBNAME&amp;#34;], charset=&amp;#39;utf8&amp;#39;) cursor = db.cursor()</description></item><item><title>Python开发环境和生产环境分离</title><link>https://o5o.me/post/python_separation_development_production_environments/</link><pubDate>Fri, 28 Apr 2023 11:41:00 +0800</pubDate><guid>https://o5o.me/post/python_separation_development_production_environments/</guid><description>同一套代码, 既可以在本地开发环境跑, 也可以在服务器生产环境跑, 是多么美的一件事.
我根据&amp;quot;主机名&amp;quot;来判断是生产环境还是开发环境.
1 2 3 4 5 6 7 8 9 import socket ay_dp_value = socket.gethostname().startswith(&amp;#39;DESKTOP&amp;#39;) if not ay_dp_value: # 生产环境相关代码 path = &amp;#34;/www/xxx/produc_environ&amp;#34; else: # 开发环境相关代码 path = r&amp;#34;C:\Users\admin\Desktop\test_environ&amp;#34; 程序运行时如果主机名以DESKTOP开头, 就表明是本地开发环境(我开发用的电脑名字是&amp;quot;DESKTOP_XXX&amp;quot;), 反之则认为是生产环境.</description></item><item><title>Think Python Exercise 6.6</title><link>https://o5o.me/post/think_python_exercise_6.6/</link><pubDate>Sun, 16 Apr 2023 11:30:00 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_6.6/</guid><description>编写一个叫 gcd 的函数，接受两个参数 a 和 b，并返回二者的最大公约数。
致谢：这道习题基于 Abelson 和 Sussman 编写的 《Structure and Interpretation of Computer Programs》 其中的例子。
我的解答 算法是辗转相除法.
1 2 3 4 5 6 7 8 def gcd(a, b): a, b = (b, a) if a &amp;lt; b else (a, b) if b != 0: a, b = gcd(b, a % b) return a, b result, _ = gcd(12,6) print(result) 上面这个解答, 对递归理解得还不够.
1 2 3 4 5 6 def gcd(a, b): a, b = (b, a) if a &amp;lt; b else (a, b) return a if b == 0 else gcd(b, a % b) result = gcd(12,6) print(result) 这样就很好了.</description></item><item><title>vim从Windows粘贴的文本每行末尾都有一个^M</title><link>https://o5o.me/post/vim_paste_line_break_character/</link><pubDate>Tue, 11 Apr 2023 09:36:00 +0800</pubDate><guid>https://o5o.me/post/vim_paste_line_break_character/</guid><description>从Windows粘贴文本到vim后, 发现每行文本的末尾都有一个^M, 这是由于win和linux换行符不同导致的, 解决方案:
保存文件:w 输入:e ++ff=dos 输入:set ff=unix</description></item><item><title>WSL使用系统代理</title><link>https://o5o.me/post/wsl_proxy/</link><pubDate>Tue, 11 Apr 2023 09:03:00 +0800</pubDate><guid>https://o5o.me/post/wsl_proxy/</guid><description>在终端输入cat /etc/resolv.conf, 看到我这里nameserver为172.19.0.1.
而系统代理的端口是7890, 因此在终端输入:
1 export ALL_PROXY=&amp;#34;http://172.19.0.1:7890&amp;#34; 这样就把代理配置好了, 来测试一下:
1 curl http://google.com 有返回值表明代理已生效.</description></item><item><title>SuperMemo编辑卡片界面细节设置</title><link>https://o5o.me/post/supermemo_edit_card_interface_option/</link><pubDate>Sun, 09 Apr 2023 22:31:08 +0800</pubDate><guid>https://o5o.me/post/supermemo_edit_card_interface_option/</guid><description>我之前一直用的是 SuperMemo 的懒人包，有一个让我很不爽的点：点击卡片编辑时，文字总要偏移一些距离。而用官方软件，点击卡片进行编辑时，只是会出现一个蓝色的边框，文字不会偏移。
今天下午发现，是懒人包的软件设置里一个选项没勾选上。至于说偏移好还是不偏移好，这就见仁见智了，我个人不喜欢这种偏移效果。
菜单栏 - Toolkit - Options :- 勾选&amp;quot;Component status borders&amp;quot;</description></item><item><title>新安装的Supermemo界面调教优化</title><link>https://o5o.me/post/supermemo_init/</link><pubDate>Sun, 09 Apr 2023 12:51:08 +0800</pubDate><guid>https://o5o.me/post/supermemo_init/</guid><description>第一次打开 Question of the Day 第一次打开SuperMemo，在主界面前面有一个弹窗“Question of the Day”，里面是一些“使用中的常见问题”，对应的是文件SuperMemo\bin\tips.txt。点击“Close”即可关闭。
激活 如果SM未激活，软件界面上方会有一个大大的红色横幅。点击红色横幅，在弹窗中点“Password”，输入激活码O4W54S31SM即可激活。
Level 默认的Level是“Beginner”，修改为“Professional”会有更多的选项可使用。
菜单栏 :- File - Level :- Professional
Hints 提示 开启Hints(提示)后，将光标放在按钮上，会显示对应的提示，方便了解按钮的作用。
菜单栏 :- Window :- Hints
评分按钮 点击 Learn 开始学习和复习. 如果展示给你的是一道题, 下方会有5个评分按钮. 默认的评分按钮是图标, 但在我这里显示有&amp;quot;锯齿感&amp;quot;, 因此我习惯将它们更改为文字.
菜单栏 - Toolkit - Options :- SuperMemo - 去掉勾选Greade icons - OK
Layout 布局 我在复习卡片的时候比较喜欢在左侧打开“Contents”（目录树）。因此我一般会把布局调整成这个样子：
调整软件界面布局为 Warrior layout：菜单栏 :- Window - Layout :- Warrior layout
关闭左侧的 Statistics。
打开目录树：软件界面最上方菜单栏下面一行按钮里点“Contents”，或快捷键Alt + C。
用鼠标将软件各窗口手动调整成上图的位置。
保存布局：菜单栏 :- Window - Layout :- Save as default，自己给布局起一个名字。</description></item><item><title>爬取网站的favicon.ico</title><link>https://o5o.me/post/crawler_requests_websites_favicon_ico/</link><pubDate>Sun, 05 Mar 2023 11:27:27 +0800</pubDate><guid>https://o5o.me/post/crawler_requests_websites_favicon_ico/</guid><description>这个文件是显示在浏览器网站标题旁边的那个小图标。
网站一般会把它放在网站根目录，也有的是在网页里指定它的路径。
代码1：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 import requests from fake_useragent import UserAgent from lxml import etree import os url = &amp;#34;https://www.w1w.cc&amp;#34; #末尾不要带斜杠 ua = UserAgent() headers = { &amp;#39;UserAgent&amp;#39;: ua.random, } res = requests.get(url, headers=headers) html = res.</description></item><item><title>Python类：意外实参 TypeError: OBJ() takes no arguments</title><link>https://o5o.me/post/python_class_unexpected_arguments/</link><pubDate>Sun, 05 Mar 2023 11:11:57 +0800</pubDate><guid>https://o5o.me/post/python_class_unexpected_arguments/</guid><description>我印象中不是第一次遇到这个报错了，因此就有了价值把它记录下来。
报错的原因在于，我在定义类的时候，把def __init__写成了def __int__。
在PyCharm中，写的时候如果写def in，之后会有代码补全提示，它的第一项是def __int__，如果不仔细看就敲了回车，错误就产生了。
正确的写法是老老实实把def __init__(self):一个字一个字地敲完。</description></item><item><title>如何理解Django路由配置URLConf中的正则表达式</title><link>https://o5o.me/post/django_urlconf_re_path/</link><pubDate>Fri, 24 Feb 2023 13:36:05 +0800</pubDate><guid>https://o5o.me/post/django_urlconf_re_path/</guid><description>在Django中，如果要通过url将参数传递给视图，有两种路由配置方式。如下两种方式等效：
urlpatterns = [ path(&amp;#39;article/&amp;lt;int:id&amp;gt;/&amp;#39;, views.article_detail, name = &amp;#39;article_detail&amp;#39;), re_path(r&amp;#39;^article/(?P&amp;lt;id&amp;gt;\d+)/$&amp;#39;, views.article_detail, name=&amp;#39;article_detail&amp;#39;), ] 都可以匹配：http://.../article/3/。其中的(?P&amp;lt;id&amp;gt;\d+)作何理解？
这是一个命名组，将\d+匹配到的数字记录到名字为id的这个命名组中。
参考：Named Capturing Groups and Backreferences What does P mean in /(?P&amp;lt;topic_id&amp;gt;\d+)$</description></item><item><title>爬取WordPress网站：以爬虫的方式迁移WordPress至Hugo</title><link>https://o5o.me/post/crawler_requests_wordpress_site_convert_to_hugo_markdown/</link><pubDate>Mon, 13 Feb 2023 17:29:36 +0800</pubDate><guid>https://o5o.me/post/crawler_requests_wordpress_site_convert_to_hugo_markdown/</guid><description>写博客很多年了，以前用的都是WordPress，一个传统的PHP+MySQL的CMS。在2022年底开了一个新博客，用Hugo配合Obsidian来写，经过我的配置，在本地写好文章后只需git推送到github，github actions自动部署生成静态页面发送到服务器。很优雅的写作方式，所以从文章数量就能看出来，换用Hugo之后我是相当的高产。
所以我就想将这些年用WordPress写的文章都统一整理出来，集中用Hugo进行管理。很自然地我就想到了，使用python爬虫将所有文章和文章配图都爬取下来，将内容转换为Hugo能识别的Markdown格式。
分析 要爬取的网站：xiake.me（写本文时还是WordPress，未来绑定到Hugo博客） 使用的WP主题：Twenty Fifteen 文章列表URL：https://xiake.me/page/2/，其中2是指第2页。 文章URL：https://xiake.me/2020/08/06/一个傅里叶级数展开式的图象/，日期+文章标题或略缩名slug 文章配图URL：https://xiake.me/wp-content/uploads/2020/08/fuliye.png，日期+文件名 要获取的数据：
文章标题 文章slug（文章略缩名，用于固定链接） 文章URL 文章文字内容 文章配图 文章发布日期 思路：访问文章列表URL，获取文章标题、文章slug、文章URL，访问文章URL获取文章内容、文章发布日期，下载文章配图，并将图片链接替换为本地相对链接。
获取文章标题、URL这些数据使用XPATH，替换图片链接使用正则表达式。
用IPython踩坑 最终我们是要将程序用面向对象的方式来写，也就是把爬虫封装成一个类。但我们可以先用IPython把爬虫的运行过程走一遍，等各个环节都理顺了，把坑都存踩完了，再改造成想要的样子。
在这个环节，我先用Jupyter Lab用面向过程的思路把代码敲一遍。每写好一个代码块（cell）都可以按shift+enter（或ctrl+enter）运行一下，检查错误很方便。
先导入一些必定用到的模块，其他模块用到的时候再导入：
1 2 3 import requests from fake_useragent import UserAgent from lxml import etree 定义URL、请求头、获取响应对象：
1 2 3 4 5 6 url = &amp;#39;https://xiake.me&amp;#39; ua = UserAgent() headers = { &amp;#39;UserAgent&amp;#39;: ua.random, } res = requests.get(url, headers=headers) 将获取到的html内容打印出来看一看是不是成功获取到了：
1 2 html = res.content.decode(&amp;#39;utf-8&amp;#39;) print(html) 用XPATH解析页面，得到xpath对象：
1 2 3 4 5 # 解析html,得到文章元素 xpath_dbs = &amp;#39;/html/body/div/div[2]/div/main/article/header/h2/a&amp;#39; parse_html = etree.</description></item><item><title>Django开发环境和生产环境分离</title><link>https://o5o.me/post/django_separate_dev_and_prod_environment/</link><pubDate>Mon, 13 Feb 2023 11:34:54 +0800</pubDate><guid>https://o5o.me/post/django_separate_dev_and_prod_environment/</guid><description>在项目开发环境和生产环境，配置往往是不同的，例如在前者往往我们要打开DEBUG模式、为方便会使用sqlite数据库、使用Django自带的WSGIServer；但在生产环境，我们会关闭DEBUG模式，使用MySQL、PostgreSQL这样的数据库、使用Gunicorn和Nginx代替默认web服务、采用更为严格的访问限制。
项目往往是要同时运行在开发环境和生产环境中的，那么怎样实现两套配置分开呢？
在将项目部署至Platform.sh时，两环境分离的做法是，在settings.py文件中做一个条件判断，如果config.is_valid_platform()为真，就用生产环境中的配置覆盖默认配置。该做法给了我启发。
如果是将项目部署在普通VPS上的话，我们可以设一个环境变量，如果该环境变量存在或为某个值，就表明是生产环境，应用某些配置。
在服务器上项目的根目录，运行下述命令：
1 2 3 4 5 6 7 8 #写入文件 echo &amp;#34;export SECRET_ENVIRON=&amp;#39;produc&amp;#39;&amp;#34; &amp;gt;&amp;gt; .DJANGO_SECRET cat .DJANGO_SECRET #查看文件内容 source .DJANGO_SECRET # 读取并导入环境变量 env #查看系统环境变量 在项目settings.py文件中，就可以对应这样写：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 根据环境变量判断为生产环境还是开发环境 import os --snip-- try: environ = os.environ[&amp;#34;SECRET_ENVIRON&amp;#34;] except KeyError as e: raise RuntimeError(&amp;#34;Could not find a SECRET_KEY in environment&amp;#34;) from e if environ: # 如果环境变量存在 DEBUG = False DATABASES = {} SECURE_REFERRER_POLICY = &amp;#34;&amp;#34; # 等等 先尝试读取环境变量，如果没有该变量就引发错误，有的话就用新设置项覆盖settings.</description></item><item><title>Ubuntu22.10修改DNS</title><link>https://o5o.me/post/ubuntu22.10_change_dns/</link><pubDate>Sun, 12 Feb 2023 20:31:44 +0800</pubDate><guid>https://o5o.me/post/ubuntu22.10_change_dns/</guid><description>我在访问一些网页的时候，有些域名会跳到同一个网站，即便访问那些尚未被注册的域名，也会跳转到同一个网站，所以我就在想我是不是有必要更换一下DNS。
系统版本：Ubuntu22.10
目的：将电脑DNS改为阿里公共DNS，223.5.5.5、223.6.6.6
编辑文件sudo vim /etc/systemd/resolved.conf，在最后添加这两行：
# /etc/systemd/resolved.conf DNS=223.5.5.5 DNS=223.6.6.6 重启服务：systemctl restart systemd-resolved.service
查看状态：resolvectl status，可以看到DNS已经是修改后的了：
$ resolvectl status Global Protocols: -LLMNR -mDNS -DNSOverTLS DNSSEC=no/unsupported resolv.conf mode: stub Current DNS Server: 223.5.5.5 DNS Servers: 223.5.5.5 223.6.6.6 本文这些命令未来有可能会过时，所以如果按照这里的方法修改DNS不成功的话，这很正常，继续去谷歌、百度即可。事实上本文的这个方法就是我从几个地方找到的资料拼凑出来的。
参考：
Ubuntu 18.04 永久修改DNS的方法 systemd-resolve command not found in Ubuntu 22.04 desktop</description></item><item><title>Shell给文件批量重命名</title><link>https://o5o.me/post/shell_rename_files/</link><pubDate>Sat, 11 Feb 2023 17:39:30 +0800</pubDate><guid>https://o5o.me/post/shell_rename_files/</guid><description>今天我有一个需求是要将某文件夹下所有文件开头的wp_去掉，网上很多答案都过时了，例如：
1 2 3 $ rename &amp;#39;wp_&amp;#39; &amp;#39;&amp;#39; *.md Bareword &amp;#34;wp_&amp;#34; not allowed while &amp;#34;strict subs&amp;#34; in use at line 1, in: wp_ 想要批量重命名可以这样写：
1 2 3 4 $ rename -n &amp;#39;s/^wp_//&amp;#39; * rename(wp_cancel-domain-name-beian.md, cancel-domain-name-beian.md) rename(wp_cloudreve_webdav_obsidian_synchronization.md, cloudreve_webdav_obsidian_synchronization.md) rename(wp_down-epub-oreilly.md, down-epub-oreilly.md) 加上-n只会列出重命名前后的文件名对比，而不会真正重命名，方便你不断调整合适的命令写法。真正重命名时应该把-n去掉：
1 $ rename &amp;#39;s/^wp_//&amp;#39; *</description></item><item><title>Django添加删除文章功能</title><link>https://o5o.me/post/django_add_function_delete_entry/</link><pubDate>Thu, 09 Feb 2023 20:34:03 +0800</pubDate><guid>https://o5o.me/post/django_add_function_delete_entry/</guid><description>在我写的项目里，称类似文章的文本为entry。我想要在entry编辑页面（edit_entry）上添加一个删除按钮，点击后这条entry会被删除。
添加视图 文件~/应用/views.py
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 from django.shortcuts import render, redirect from django.contrib.auth.decorators import login_required from django.http import Http404 from .models import Entry -- snip -- # 删除entry @login_required def delete_entry(request, entry_id): &amp;#34;&amp;#34;&amp;#34;删除既有条目&amp;#34;&amp;#34;&amp;#34; # 根据id获取需要删除的entry entry = Entry.objects.get(id=entry_id) # 只有该entry的拥有者可以将其删除 check_entry_owner(request, entry) # 调用.delete()方法删除文章 entry.delete() # 完成删除后返回entry列表 return redirect(&amp;#39;aoyu_blog_logs:topic&amp;#39;, topic_id=entry.topic.id) 装饰器@login_required确保只有已登录用户才能删除entry。
调用的函数check_entry_owner()确保只有entry拥有者可以将其删除。代码如下：
1 2 3 4 5 6 7 8 from django.</description></item><item><title>Django给模型字段重命名</title><link>https://o5o.me/post/django_rename_field/</link><pubDate>Thu, 09 Feb 2023 12:54:42 +0800</pubDate><guid>https://o5o.me/post/django_rename_field/</guid><description>在Django中，一个模型就是一个类，模型里的字段就是类的属性，因此本文的标题也可以写作：Django重命名类属性。
如果模型刚写好，还没在数据库中创建表，把代码里所有的旧字段名改为新字段名即可。
如果已经修改了数据库，首先在代码里将旧字段名修改为新字段名；然后需要在数据库里对表列进行重命名。在Django里不用直接操作数据库，在终端里运行命令makemigrations，Django会识别出来你是想给data_added重命名，之后再在终端运行命令migrate即可。
1 2 3 4 5 6 7 8 9 10 11 (/home/aoyu/AoyuCondaEnv/AoyuBlog) aoyu@aoyuSurface:~/AoyuPythonProjects/AoyuBlog$ python manage.py makemigrations aoyu_blog_logs Was topic.data_added renamed to topic.date_added (a DateTimeField)? [y/N] y Migrations for &amp;#39;aoyu_blog_logs&amp;#39;: aoyu_blog_logs/migrations/0004_rename_data_added_topic_date_added.py - Rename field data_added on topic to date_added (/home/aoyu/AoyuCondaEnv/AoyuBlog) aoyu@aoyuSurface:~/AoyuPythonProjects/AoyuBlog$ python manage.py migrate Operations to perform: Apply all migrations: admin, aoyu_blog_logs, auth, contenttypes, sessions Running migrations: Applying aoyu_blog_logs.0004_rename_data_added_topic_date_added... OK</description></item><item><title>Think Python Exercise 5.6 科赫曲线</title><link>https://o5o.me/post/think_python_exercise_5.6_koch_curve/</link><pubDate>Mon, 06 Feb 2023 16:52:28 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_5.6_koch_curve/</guid><description>这是一道很有趣的题目。我感觉这一题的代码我写得还不够优雅。
Exercise 5.6. 科赫曲线 (Koch Curve) 是一个看起来类似不规则碎片的几何体 (fractal)。要画一个长度为 x 的科赫曲线，你只需要：
画一个长度为 x/3 的科赫曲线。 左转 60 度。 画一个长度为 x/3 的科赫曲线。 右转 60 度。 画一个长度为 x/3 的科赫曲线。 左转 60 度。 画一个长度为 x/3 的科赫曲线。 例外情况是 x 小于 3 的情形：此时，你只需要画一道长度为 x 的直线。
写一个名为 koch 的函数，接受一个海龟和一个长度作为形参，然后使用海龟画一条给定长度的科赫曲线。 写一个名为 snowflake 的函数，画出三条科赫曲线，构成雪花的轮廓。 科赫曲线能够以多种方式泛化。 点击此处查看例子，并实现你最喜欢的那种方式。 我的答案：
第一小题，
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import turtle def koch(t, l): &amp;#34;&amp;#34;&amp;#34; 画出来一条科赫曲线 :param t: 一个turtle实例 :param l: 曲线长度 :return: None &amp;#34;&amp;#34;&amp;#34; if l &amp;lt; 3: t.</description></item><item><title>SQL分组过滤</title><link>https://o5o.me/post/nowcoder_sql19/</link><pubDate>Sun, 05 Feb 2023 20:50:26 +0800</pubDate><guid>https://o5o.me/post/nowcoder_sql19/</guid><description>题目：SQL19 分组过滤练习题
这一题是将行（用户、record）根据university进行分组，最后返回的不是用户的数据，而是分组（university、大学）的数据。
因此在过滤的时候，不是过滤行，而是过滤分组，所以要用having操作符，而不是where操作符。
返回的结果还应该保留三位小数，所以使用round()函数。
我的解答：
1 2 3 4 SELECT university, ROUND(AVG(question_cnt),3) as avg_question_cnt, ROUND(AVG(answer_cnt),3) as avg_answer_cnt FROM user_profile GROUP BY university HAVING avg_question_cnt &amp;lt;5 or avg_answer_cnt &amp;lt; 20</description></item><item><title>Python练习题NP47牛牛的绩点</title><link>https://o5o.me/post/nowcoder_np47/</link><pubDate>Fri, 03 Feb 2023 19:25:07 +0800</pubDate><guid>https://o5o.me/post/nowcoder_np47/</guid><description>描述 牛牛在门头沟大学学习，一学年过去了，需要根据他的成绩计算他的平均绩点，假如绩点与等级的对应关系如下表所示。请根据输入的等级和学分数，计算牛牛的均绩（每门课学分乘上单门课绩点，求和后对学分求均值）。
A 4.0 B 3.0 C 2.0 D 1.0 F 0 这一题来自牛客网，题目链接：here
输入描述： 连续输入一行等级一行学分，遇到等级为False则结束输入。
输出描述： 均绩保留两位小数。
示例1 输入： A 3 B 4 C 2 False 输出： 3.11 我的解答 最初的解答：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 d={&amp;#39;A&amp;#39;:4.0,&amp;#39;B&amp;#39;:3.0,&amp;#39;C&amp;#39;:2.0,&amp;#39;D&amp;#39;:1.0,&amp;#39;F&amp;#39;:0} b=[] c=[] i=1 while True: a = input() if a != &amp;#34;False&amp;#34; and i%2 == 1: b.</description></item><item><title>Ubuntu自建Anki同步服务</title><link>https://o5o.me/post/anki_self_hosted_sync_server_ubuntu/</link><pubDate>Tue, 31 Jan 2023 22:42:21 +0800</pubDate><guid>https://o5o.me/post/anki_self_hosted_sync_server_ubuntu/</guid><description>Anki更新2.1.57版本后，内置支持自建同步服务。之前都是需要以插件的形式实现，且搭建后往往只适用于旧版本的Anki，选择了自建同步服务就意味着放弃追求新版本和新功能。
只需要几行代码就可以搭建自己的Anki同步服务了：
screen -S anki-aoyu python3 -m venv ~/syncserver ~/syncserver/bin/pip install anki SYNC_USER1=aoyu:123456 ~/syncserver/bin/python -m anki.syncserver 我的系统版本是Ubuntu22.04，安装过程是相当顺畅的。很大概率你需要先运行apt install python3.10-venv，之后才能python3 -m venv ~/syncserver，不过你不需要提前考虑到这一点，报错后会提醒你安装的。
SYNC_USER1后面跟的是账户名和密码，在Anki里用这个账号登录。
你需要在Anki软件设置Self-hosted sync server项里填写http://服务器ip:8080/，之后就可以使用自己的同步服务了。
可以用 Nginx 做一个反代，我能想到的优点有：不让8080端口暴露到网络上；给anki的同步服务绑定一个域名，好记；可以启用https。这里就不写了，懒。
screen命令的使用可参考：SSH远程会话管理工具 - screen使用教程 - VPS侦探 (vpser.net)
安装参考：Sync Server - Anki Manual (ankiweb.net)</description></item><item><title>Leetcode 183 从不订购的客户</title><link>https://o5o.me/post/leetcode_183_customers_who_never_order/</link><pubDate>Tue, 31 Jan 2023 20:59:00 +0800</pubDate><guid>https://o5o.me/post/leetcode_183_customers_who_never_order/</guid><description>题目：183. 从不订购的客户
我的解答 1 2 3 4 5 SELECT Name AS Customers FROM Customers WHERE NOT ID IN ( SELECT CustomerId FROM Orders);</description></item><item><title>Leetcode 182 查找重复的电子邮箱</title><link>https://o5o.me/post/leetcode_182_duplicate_emails/</link><pubDate>Tue, 31 Jan 2023 20:53:00 +0800</pubDate><guid>https://o5o.me/post/leetcode_182_duplicate_emails/</guid><description>题目：182. 查找重复的电子邮箱
我的解答 1 2 3 4 5 6 7 8 # Write your MySQL query statement below SELECT name AS Employee FROM ( SELECT a.name AS name, a.salary AS mySalary, b.salary AS manaSalary FROM Employee a, Employee b WHERE a.managerId = b.id ) as b WHERE mySalary &amp;gt; manaSalary; 更好的答案：
自联结 1 2 3 4 SELECT e1.name AS Employee FROM Employee AS e1, Employee AS e2 WHERE e1.managerID = e2.</description></item><item><title>Leetcode 181 超过经理收入的员工</title><link>https://o5o.me/post/leetcode_181_employees_earning_more_than-their_managers/</link><pubDate>Tue, 31 Jan 2023 20:34:00 +0800</pubDate><guid>https://o5o.me/post/leetcode_181_employees_earning_more_than-their_managers/</guid><description>题目：181. 超过经理收入的员工
我的解答 1 2 3 4 5 6 7 8 # Write your MySQL query statement below SELECT name AS Employee FROM ( SELECT a.name AS name, a.salary AS mySalary, b.salary AS manaSalary FROM Employee a, Employee b WHERE a.managerId = b.id ) as b WHERE mySalary &amp;gt; manaSalary; 更好的答案：
自联结 1 2 3 4 SELECT e1.name AS Employee FROM Employee AS e1, Employee AS e2 WHERE e1.managerID = e2.</description></item><item><title>Leetcode 180 连续出现的数字</title><link>https://o5o.me/post/leetcode_180_consecutive_numbers/</link><pubDate>Tue, 31 Jan 2023 20:12:00 +0800</pubDate><guid>https://o5o.me/post/leetcode_180_consecutive_numbers/</guid><description>题目：180. 连续出现的数字
我的解答 使用变量
1 2 3 4 5 6 7 8 9 SELECT DISTINCT num AS ConsecutiveNums FROM ( SELECT num, (CASE WHEN @prev = num THEN @cur := @cur +1 WHEN @prev := num THEN @cur := 1 END) AS ran FROM Logs, (SELECT @prev := NULL, @cur := 0) AS r ) AS t WHERE t.ran &amp;gt;= 3</description></item><item><title>Leetcode 178 分数排名</title><link>https://o5o.me/post/leetcode_178_rank_scores/</link><pubDate>Tue, 31 Jan 2023 16:20:00 +0800</pubDate><guid>https://o5o.me/post/leetcode_178_rank_scores/</guid><description>题目：178. 分数排名
我的解答 使用了MySQL提供的函数 1 2 3 SELECT score, DENSE_RANK() OVER(ORDER BY score DESC) AS &amp;#39;rank&amp;#39; FROM Scores; 因为别名rank和rank函数冲突了，所以加个引号。
使用变量 SELECT score, CAST((CASE WHEN @prev = score THEN @curRank WHEN @prev := score THEN @curRank := @curRank +1 WHEN score = 0 THEN @curRank := @curRank + 1 END) AS SIGNED) AS &amp;#39;rank&amp;#39; FROM scores, (SELECT @curRank := 0, @prev := NULL) AS r ORDER BY score DESC; 变量prev指向的是先前一行记录里的score，变量curRank是当前这个分数的排名。
这一段的描述可能不够准确：首先查询得到每一条记录的score并按降序排序，而后，从上到下，第一个score是4.00，设为1，第二个score也是4.00，也设为1，第三个是3.85，设为1+1=2，依次类推。根据我所了解的，SQL的执行顺序中，ORDER BY是在SELECT执行之后才执行的。但是，上述过程很明显利用了排序后的结果，所以这一点我就很困惑。如果用主查询和子查询来理解，主查询执行完之后，对于返回的每一行结果再执行子查询，似乎可行，但代码中的子查询是出现在FROM后面的，而条件判断是主查询里面的。这里我依旧很困惑。</description></item><item><title>Leetcode 177 第N高的薪水</title><link>https://o5o.me/post/leetcode_177_nth_highest_salary/</link><pubDate>Sat, 28 Jan 2023 20:51:00 +0800</pubDate><guid>https://o5o.me/post/leetcode_177_nth_highest_salary/</guid><description>题目：177. 第N高的薪水
我的解答 1 2 3 4 5 6 7 8 9 10 11 12 CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N - 1; RETURN ( # Write your MySQL query statement below. SELECT IFNULL( (SELECT DISTINCT salary FROM Employee ORDER BY salary DESC LIMIT 1 OFFSET N),NULL) AS getNthHighestSalary ); END 在 LIMIT 和 OFFSET 内不能进行运算，所以在开头首先让N减1。
注意语句末尾的分号。
注意指定别名语句AS getNthHighestSalary末尾并没有括号。</description></item><item><title>Leetcode 176 第二高的薪水</title><link>https://o5o.me/post/leetcode_176_second_highest_salary/</link><pubDate>Sat, 28 Jan 2023 20:23:00 +0800</pubDate><guid>https://o5o.me/post/leetcode_176_second_highest_salary/</guid><description>题目：176. 第二高的薪水
我的解答 下面这个最初的解答被判定为错，乐扣没显示是哪些测试用例错了，所以也没办法改进。
1 2 3 4 5 6 7 # Write your MySQL query statement below SELECT MAX(salary) AS SecondHignestSalary FROM Employee WHERE salary &amp;lt; ( SELECT MAX(salary) FROM Employee ); 下面这个解答是成功通过的：
1 2 3 4 5 SELECT IFNULL( (SELECT DISTINCT salary FROM Employee ORDER BY salary DESC LIMIT 1 OFFSET 1),NULL) AS SecondHighestSalary; DISTINCT参数用于让查询结果中相同的值只出现一次。
DESC关键字用于让查询结果按降序进行排序。
IFNULL()函数用于判断第一个表达式是否为 NULL，如果为 NULL 则返回第二个参数的值。
LIMIT 和 OFFSET 用于对查询结果进行分页，每次返回查询结果的一部分。</description></item><item><title>Leetcode 175 组合两个表</title><link>https://o5o.me/post/leetcode_175_combine_two_tables/</link><pubDate>Sat, 28 Jan 2023 19:48:52 +0800</pubDate><guid>https://o5o.me/post/leetcode_175_combine_two_tables/</guid><description>题目：175. 组合两个表
我的解答 1 2 3 # Write your MySQL query statement below SELECT FirstName AS firstName, LastName AS lastName, City AS city, State AS state From Person LEFT OUTER JOIN Address ON Person.PersonId = Address.PersonId;</description></item><item><title>Supermemo出现弹窗Which interval do you want to use?</title><link>https://o5o.me/post/supermemo_which_interval_do_you_want_to_use/</link><pubDate>Fri, 27 Jan 2023 21:56:22 +0800</pubDate><guid>https://o5o.me/post/supermemo_which_interval_do_you_want_to_use/</guid><description>我日常用于复习的 SuperMemo 是中文懒人包版本，前几天打算学 AdvEng2018 牌组，担心合并牌组时导致文件损坏，所以就又用了另一个SM软件来单独学AdvEng2018，同时也想是用用英文SM，汉化版软件里有些翻译的中文选项我不理解，可以对照着看。
复习时经常出现一个对话框：Which interval do you want to use?
用SM的懒人包版本复习时则没这个弹窗。
出现这个弹窗的原因是，软件想告诉你，按照默认的算法，下次安排这张卡片的复习要到几十天之后了，这个时间间隔太长了，问你要不要换个时间间隔短一点的算法。
让它不显示的办法：默认是，如果一张卡片的复习间隔超过14天就会显示这个弹窗，我们把这个天数调大一些就好了。
流程：Toolkit - Options -&amp;gt; Learning - Algorithm SM-18 Alerts - Interval [days]，默认是14，改大一点，例如改为3000.
参考：Which interval do you want to use - SuperMemopedia</description></item><item><title>Python报错libGL error: failed to load driver</title><link>https://o5o.me/post/python_libgl_error_driver_iris_swrast/</link><pubDate>Thu, 26 Jan 2023 17:34:57 +0800</pubDate><guid>https://o5o.me/post/python_libgl_error_driver_iris_swrast/</guid><description>运行下述代码后报错：
1 2 import pygame pygame.init() 完整报错：
libGL error: MESA-LOADER: failed to open iris: /usr/lib/dri/iris_dri.so: cannot open shared object file: No such file or directory (search paths /usr/lib/x86_64-linux-gnu/dri:\$${ORIGIN}/dri:/usr/lib/dri, suffix _dri) libGL error: failed to load driver: iris libGL error: MESA-LOADER: failed to open swrast: /usr/lib/dri/swrast_dri.so: cannot open shared object file: No such file or directory (search paths /usr/lib/x86_64-linux-gnu/dri:\$${ORIGIN}/dri:/usr/lib/dri, suffix _dri) libGL error: failed to load driver: swrast X Error of failed request: BadValue (integer parameter out of range for operation) Major opcode of failed request: 149 (GLX) Minor opcode of failed request: 3 (X_GLXCreateContext) Value in failed request: 0x0 Serial number of failed request: 101 Current serial number in output stream: 102 提示在/usr/lib/dri/找不到iris和swrast驱动。而在/usr/lib/x86_64-linux-gnu/dri这个目录下，两个驱动都有。</description></item><item><title>Pycharm内搜狗输入法候选框不跟随光标</title><link>https://o5o.me/post/pycharm_fcitx_sogou_not_follow_cursor/</link><pubDate>Thu, 26 Jan 2023 14:09:58 +0800</pubDate><guid>https://o5o.me/post/pycharm_fcitx_sogou_not_follow_cursor/</guid><description>搜狗输入法基于fcitx。所有的JetBrains的IDE对所有的fcitx输入法都有这个问题。
解决方法，从这里下载文件直接替换PyCharm安装路径里的jbr目录（我的在/opt/pycharm-community-2022.3.1/jbr/）。
经测试有效。不过候选框会出现在光标的上方，而不是光标下方，还行，能用。</description></item><item><title>Supermemo将内容导入到了错误的概念组怎么办</title><link>https://o5o.me/post/supermemo_wrong_branch/</link><pubDate>Tue, 24 Jan 2023 20:35:21 +0800</pubDate><guid>https://o5o.me/post/supermemo_wrong_branch/</guid><description>首先在目录树（Alt+C）中移动卡片分支到正确的概念组下面。
接下来设定Reference信息中的“Concept group”为正确信息：
在卡片分支上点鼠标右键，“处理选中分支”，“设置概念分组”，在弹出的窗口中，在窗口左侧给正确的概念组打对钩，在窗口下方那一排按钮中点击“确定”。
完成。</description></item><item><title>Pycharm和Ubuntu快捷键冲突解决</title><link>https://o5o.me/post/pycharm_ubuntu_shortcut_conflict/</link><pubDate>Tue, 24 Jan 2023 18:56:00 +0800</pubDate><guid>https://o5o.me/post/pycharm_ubuntu_shortcut_conflict/</guid><description>在PyCharm中，快捷键Ctrl+Alt+T的作用是“环绕方式&amp;hellip;，使用一些模板代码环绕所选代码段”。
而在Ubuntu中，快捷键Ctrl+Alt+T的作用是“打开终端”。
解决冲突的方式是修改二者其中之一的快捷键。
修改PyCharm的这一个快捷键：文件-设置-&amp;gt;按键映射-搜索“环绕”-在快捷键那一项上点鼠标右键-移除Ctrl+Alt+T-添加键盘快捷键。
修改Ubuntu（22.10）的这一个快捷键：设置-&amp;gt;键盘-&amp;gt;键盘快捷键-查看及自定义快捷键-&amp;gt;在搜索框中搜索“ctrl+”找到快捷键“Ctrl+Alt+T”-在那一项上面单击鼠标左键-在键盘上输入以设定新快捷键。
我的选择是修改Ubuntu的这一个快捷键，因为我截止目前还没养成用快捷键打开终端的习惯。</description></item><item><title>Supermemo学习某分支下的新卡片</title><link>https://o5o.me/post/supermemo_learn_new_elements_that_belong_to_a_given_branch/</link><pubDate>Tue, 24 Jan 2023 00:03:13 +0800</pubDate><guid>https://o5o.me/post/supermemo_learn_new_elements_that_belong_to_a_given_branch/</guid><description>标题中的“新卡片”指的是在SuperMemo的“目录窗口（Contents Window）”中被标记为“浅蓝色”的卡片。
我想要学习 Advanced English 2018 牌组包里的“Grammar”分支下的卡片，这个牌组包里的“新卡片”非常非常多，有几万张，包含单词、语法、发音、拼写等等，如果按默认复习队列一锅粥地学，很不系统，因此我才想着先学Grammar语法部分。
一番尝试及朋友推荐，得到下面几种实现的方法。方法1就不推荐了，方法2和方法3按需取用。我选择的是方法2。
方法1 一番尝试及在朋友帮助下，目前找到的可行的方法是将“新卡片”（浅蓝色）变为“已记”（问答卡片，深蓝色）。
操作过程：打开“目录窗口”（Alt+C） -&amp;gt; 展开至想要学习的分支 -&amp;gt; 在那个分支标题上点鼠标右键 -&amp;gt; “处理选中分支（Process branch）” -&amp;gt; “已记（）”。在弹出的新窗口中（Which interval should be chosen in scheduling）选~~“One day interval”，那个分支下的卡片就会在一天内出现~~（我这里的理解可能是错误的）。
总结：把未学的卡片设置为已学过的卡片，进入复习队列。
方法2 由于我想要学的AdvEng2018是一个单独的kno文件，我把想要学的部分卡片从里面导出到另一个kno文件（我日常学习用的）里面，那也就实现了本文标题所称的效果。
操作过程：打开“目录窗口”（Alt+C） -&amp;gt; 展开至想要学习的分支 -&amp;gt; 在那个分支标题上点鼠标右键 -&amp;gt; “导出（export）” -&amp;gt; “Transfer elements Shift+Ctrl+T” -&amp;gt; 在弹出的窗口中选想要导入的那个kno文件 -&amp;gt; 问你 Do you want to transfer elements? 选yes -&amp;gt; 问你 Do you want to integrate all files with the target file system? 选yes。这样就导入成功了。
总结：把某一个“牌组”下的部分卡片导入到另一个“牌组”当中。
方法3 思路：SuperMemo的作用是给一张张卡片排序形成“队列”，按排定的顺序将卡片推送给用户进行学习。那么我们只要将某一分支下的卡片的顺序调整到“队列”前面，就达到了学习某一分支下的卡片的目的。</description></item><item><title>在Pycharm的代码编辑区显示一条竖线提醒换行</title><link>https://o5o.me/post/pycharm_pep8_code_editor_vertical_line/</link><pubDate>Sun, 22 Jan 2023 17:52:23 +0800</pubDate><guid>https://o5o.me/post/pycharm_pep8_code_editor_vertical_line/</guid><description>在PyCharm的代码编辑区域显示一条竖线，提醒自己每行的代码尽量不要超过80字符。这是PEP8中有关行长的指南。
文件-设置-&amp;gt;编辑器-代码样式-&amp;gt;常规-“视觉参考线”，设为80, 120，然后保存。在编辑代码时，右侧就会显示两条竖线，一个在第80个字符的位置，一个在第120个字符的位置。
可以勾选“强制换行位置”（默认为120字符）后的“键入时换行”，这样，当行长到达120字符时就会强制换行。</description></item><item><title>Python Crash Course 4</title><link>https://o5o.me/post/python_crash_course_4/</link><pubDate>Sun, 22 Jan 2023 16:32:01 +0800</pubDate><guid>https://o5o.me/post/python_crash_course_4/</guid><description>主要是练习列表解析式。以下练习均使用列表解析式完成。
练习4.3 数到20，使用一个for循环打印数1~20（含）。
1 print([value for value in range(1,21)]) 练习4.4 一百万
创建一个包含数 1～1 000 000 的列表，再使用一个 for 循环将这些数打印出来。（如果输出的时间太长，按 Ctrl + C 停止输出或关闭输出窗口。）
print([value for value in range(1,1_000_001)]) 不要尝试去运行上面的代码，能理解即可。
练习4.5 一百万求和
创建一个包含数 1～1 000 000的列表，再使用 min()和 max() 核实该列表确实是从 1 开始、到 1 000 000 结束的。另外，对这个列表调用函数 sum()， 看看 Python 将一百万个数相加需要多长时间。
1 2 3 4 list1 = [i for i in range(1,1_000_001)] print(min(list1)) print(max(list1)) print(sum(list1)) 练习4.6 奇数
通过给函数 range() 指定第三个参数来创建一个列表，其中包含 1～20 的奇数，再使用一个 for 循环将这些数打印出来。</description></item><item><title>本地运行hugo server时页面空白</title><link>https://o5o.me/post/hugo_server_localhost_page_empty/</link><pubDate>Wed, 18 Jan 2023 20:16:57 +0800</pubDate><guid>https://o5o.me/post/hugo_server_localhost_page_empty/</guid><description>我今天新装了ubuntu，把hugo博客仓库clone到本地，运行hugo server后，终端里显示貌似一切正常，但打开http://localhost:1313却是一片空白。
原因是我只把博客内容克隆了下来，但子模块却忘记了克隆。
补救措施：在仓库里运行git submodule update --init即可。
由于我本地的public目录还是空的，所以我需要运行hugo server --disableFastRender，然后就一切正常了。
参考：Git 工具 - 子模块</description></item><item><title>PyCharm创建conda项目时提示CondaError: Unable to create prefix directory</title><link>https://o5o.me/post/pycharm_condaerror_anaconda/</link><pubDate>Wed, 18 Jan 2023 20:00:35 +0800</pubDate><guid>https://o5o.me/post/pycharm_condaerror_anaconda/</guid><description>原因是我没有把anaconda安装在默认位置（/home目录里），而是装在了/opt目录里，我以普通用户的身份运行PyCharm，没有权限访问/opt目录，所以有了这个错误提示。
解决办法：在/home/用户目录里我建了一个文件夹来放conda环境。</description></item><item><title>AttributeError: object has no attribute</title><link>https://o5o.me/post/python_attributeerror_object_has_no_attribute/</link><pubDate>Tue, 17 Jan 2023 13:50:22 +0800</pubDate><guid>https://o5o.me/post/python_attributeerror_object_has_no_attribute/</guid><description>今天写的程序运行时提示：AttributeError: 'BaiduImageSpider' object has no attribute 'url'，让我百思不得其解。
最后发现是我把__init__写成了__int__，DeBug也没发现这个错误。</description></item><item><title>Chrome网页源代码自动换行</title><link>https://o5o.me/post/chrome_view_source/</link><pubDate>Fri, 13 Jan 2023 22:09:41 +0800</pubDate><guid>https://o5o.me/post/chrome_view_source/</guid><description>我觉得我遇到了 Baader-Meinhof 现象1。
今天在写爬虫的时候，突然想到，如果Chrome的网页源代码页面的代码能自动换行就好了。我就去网上搜有没有方法能让源代码自动换行显示。
一番搜寻没有结果，然后我就打算放弃，然后我不经意往一个已经打开的网页源代码页面一瞟，赫然有一个“自动换行”复选框静静显示在那里。
天地良心，我以前真的是没有注意到过那里还有那么一个按钮，而现在它却那么显眼。
Frequency illusion - Wikipedia&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>爬虫运行报错：UnicodeEncodeError: 'latin-1' codec can't encode characters</title><link>https://o5o.me/post/spider_unicodeencodeerror_latin-1/</link><pubDate>Fri, 13 Jan 2023 13:58:29 +0800</pubDate><guid>https://o5o.me/post/spider_unicodeencodeerror_latin-1/</guid><description>写了一个简单的爬虫程序，从百度图片下载图片，但运行时报错：UnicodeEncodeError: 'latin-1' codec can't encode characters in position 41-44: ordinal not in range(256)
程序反反复复检查了好几遍，最终确定是cookie的问题。
我是从自己的 Chrome 浏览器里直接拷贝的cookie值粘贴到程序里的，没注意从Chrome直接复制的cookie会先解码再给你。就是说，程序里需要的cookie是不带中文的（中文先进行编码，比如把古力娜扎编码为%E5%8F%A4%E5%8A%9B%E5%A8%9C%E6%89%8E），但从Chrome复制出来的cookie带中文。
Chrome这是好心办坏事吗。</description></item><item><title>Think Python Exercise 3.3</title><link>https://o5o.me/post/think_python_exercise_3.3/</link><pubDate>Tue, 10 Jan 2023 21:42:59 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_3.3/</guid><description>注意:请使用我们目前学过的语句和特性来完成本题。
编写一个能画出如下网格 (grid) 的函数: + - - - - + - - - - + | | | | | | | | | | | | + - - - - + - - - - + | | | | | | | | | | | | + - - - - + - - - - + 提示:你可以使用一个用逗号分隔的值序列,在一行中打印出多个值:
print(&amp;#39;+&amp;#39;, &amp;#39;−&amp;#39;) print 函数默认会自动换行,但是你可以阻止这个行为,只需要像下面这样将行结尾变成一个空格:
print(&amp;#39;+&amp;#39;, end=&amp;#39; &amp;#39;) print(&amp;#39;−&amp;#39;) 这两个语句的输出结果是+ −。</description></item><item><title>Think Python Exercise 3.2</title><link>https://o5o.me/post/think_python_exercise_3.2/</link><pubDate>Tue, 10 Jan 2023 21:30:47 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_3.2/</guid><description>函数对象是一个可以赋值给变量的值, 也可以作为实参传递。 例如, do_twice 函数接受函数对象作为实参,并调用这个函数对象两次:
def do_twice(f): f() f() 下面这个示例使用 do_twice 来调用名为 print_spam 的函数两次。
def print_spam (): print(&amp;#39;spam &amp;#39;) do_twice(print_spam) 将这个示例写入脚本,并测试。 修改do_twice,使其接受两个实参,一个是函数对象,另一个是值。然后调用这一函数对象两次,将那个值传递给函数对象作为实参。 从本章前面一些的示例中, 将 print_twice 函数的定义复制到脚本中。 使用修改过的 do_twice ,调用print_twice 两次,将 spam 传递给它作为实参。 定义一个名为 do_four 的新函数,其接受一个函数对象和一个值作为实参。调用这个函数对象四次,将那个值作为形参传递给它。函数体中应该只有两条语句,而不是四条。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def do_twice(f, argus): f(argus) f(argus) def print_twice(bruce): print(bruce) print(bruce) def do_four(f, argus): do_twice(f, argus) do_twice(f, argus) do_twice(print_twice, &amp;#39;spam&amp;#39;) #do_four(print_twice, &amp;#34;spam&amp;#34;)</description></item><item><title>Think Python Exercise 3.1</title><link>https://o5o.me/post/think_python_exercise_3.1/</link><pubDate>Tue, 10 Jan 2023 21:23:43 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_3.1/</guid><description>编写一个名为 right_justify 的函数, 函数接受一个名为 s 的字符串作为形参, 并在打印足够多的前导空格 (leading space) 之后打印这个字符串,使得字符串的最后一个字母位于显示屏的第 70 列。
提示: 使用字符串拼接 (string concatenation) 和重复。 另外, Python 提供了一个名叫len 的内建函数,可以返回一个字符串的长度,因此len(&amp;lsquo;allen&amp;rsquo;) 的值是 5。
1 2 3 4 5 6 7 def right_justify(s): print(&amp;#39; &amp;#39;*(70-len(s)),s) s1 = &amp;#34;good morning&amp;#34; s2 = &amp;#34;nice to meet you&amp;#34; right_justify(s1) right_justify(s2)</description></item><item><title>Think Python Exercise 17.2</title><link>https://o5o.me/post/think_python_exercise_17.2/</link><pubDate>Tue, 10 Jan 2023 16:15:37 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_17.2/</guid><description>这道习题中包含了 Python 中最常见、最难找出来的错误。编写一个叫 Kangaroo 的类,包含以下方法:
一个__init__ 方法,初始化一个叫 pounch_contents 的属性为空列表。 一个叫put_in_pounch 的方法,将一个任意类型的对象加入pounch_contents。 一个__str__ 方法,返回 Kangaroo 对象的字符串表示和 pounch 中的内容。 创建两个 Kangaroo 对象, 将它们命名为 kanga 和 roo , 然后将 roo 加入 kanga 的 pounch 列表, 以此测试你写的代码。
这是我在不完全理解题目时写的代码（请不要参考）：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Kangaroo: def __init__(self): self.pounch_contents = [] def put_in_pounch(self, ayobj): self.pounch_contents.append(ayobj) def __str__(self): return str(self.pounch_contents) kanga = Kangaroo() roo = Kangaroo() kanga.put_in_pounch(roo) print(kanga) 其实这是一个找bug的练习。作者想让我们使用pylint这个工具找出他的代码里的bug。</description></item><item><title>Think Python Exercise 17.0</title><link>https://o5o.me/post/think_python_exercise_17.0/</link><pubDate>Tue, 10 Jan 2023 12:51:08 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_17.0/</guid><description>我们做个练习, 将 time_to_int (见 16.4 节) 重写为方法。你或许也想将 int_to_time 改写为方法,但是那样做并没有什么意义,因为没有调用它的对象。
原 int_to_time 函数见练习16.0。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Time: &amp;#34;&amp;#34;&amp;#34;Represents the time of day.&amp;#34;&amp;#34;&amp;#34; def print_time(self): print(&amp;#34;%.2d:%.2d:%.2d&amp;#34; % (self.hour, self.minute, self.second)) def time_to_int(self): minutes = self.hour * 60 + self.minute seconds = minutes * 60 + self.second return seconds start = Time() start.hour = 9 start.minute = 45 start.second = 20 start.</description></item><item><title>Think Python Exercise 17.1</title><link>https://o5o.me/post/think_python_exercise_17.1/</link><pubDate>Tue, 10 Jan 2023 12:44:03 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_17.1/</guid><description>修改 Time 类的属性, 使用一个整数代表自午夜零点开始的秒数。然后修改类的方法 (和int_to_time 函数),使其适用于新的实现。你不用修改 main 函数中的测试代码。完成之后, 程序的输出应该和之前保持一致。
分析：作者的意思是，Time 类的属性，修改后只有“秒”这一个（小时、分钟都没了），同时，修改后Time类接收的参数和返回的值都保持不变。
作者提供的用于修改的代码：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 &amp;#34;&amp;#34;&amp;#34;This module contains a code example related to Think Python, 2nd Edition by Allen Downey http://thinkpython2.</description></item><item><title>Think Python Exercise 16.2</title><link>https://o5o.me/post/think_python_exercise_16.2/</link><pubDate>Tue, 10 Jan 2023 10:23:15 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_16.2/</guid><description>datetime 模块提供的 time 对象,和本章的 Time 对象类似, 但前者提供了更丰富的方法和操作符。
使用 datetime 模块来编写一个程序,获取当前日期并打印当天是周几。 编写一个程序,接受一个生日作为输入,并打印用户的年龄以及距离下个生日所需要的天数、小时数、分钟数和秒数。 对于两个不在同一天出生的人来说,总有一天,一个人的出生天数是另一个人的两倍。我们把这一天称为 ‘‘双倍日’’。编写一个程序,接受两个不同的出生日期, 并计算他们的 ‘‘双倍日’’。 再增加点挑战,编写一个更通用的版本,用于计算一个人出生天数是另一个人 n 倍的日子。 题1
1 2 3 4 5 6 7 from datetime import date today = date.today() #print(dir(today)) #打印属性、方法列表 print(&amp;#34;今天是星期%d.&amp;#34; % (today.weekday()+1)) # weekday返回的值是从0开始的，所以+1 题2
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 from datetime import datetime def days_until_birthday(birthday): &amp;#34;&amp;#34;&amp;#34;距离下一次生日还有多长时间&amp;#34;&amp;#34;&amp;#34; today = datetime.</description></item><item><title>Think Python Exercise 16.1</title><link>https://o5o.me/post/think_python_exercise_16.1/</link><pubDate>Tue, 10 Jan 2023 10:10:48 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_16.1/</guid><description>写一个叫做 mul_time 的函数,接收一个 Time 对象和一个数,并返回一个新的 Time 对象,包含原始时间和数的乘积。
然后使用 mul_time 编写一个函数,接受一个表示比赛完赛时间的 Time 对象以及一个表示距离的数字,并返回一个用于表示平均配速 (每英里所需时间) 的 Time 对象。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class Time: &amp;#34;&amp;#34;&amp;#34;用于记录时间 属性：hour, minute, second &amp;#34;&amp;#34;&amp;#34; def print_time(ti): print(&amp;#34;%.2d:%.2d:%.2d&amp;#34; % (ti.hour,ti.minute,ti.second)) #记得加括号 def time_to_int(time): minutes = time.hour * 60 + time.minute seconds = minutes * 60 + time.</description></item><item><title>Think Python Exercise 16.1</title><link>https://o5o.me/post/think_python_exercise_16.0/</link><pubDate>Mon, 09 Jan 2023 16:59:37 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_16.0/</guid><description>编写一个叫做 print_time 的函数,接收一个 Time 对象并用 时:分:秒 的格式打印它。提示: 格式化序列 %.2d 可以至少两位数的形式打印一个整数,如果不足则在前面补 0。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Time: &amp;#34;&amp;#34;&amp;#34;用于记录时间 属性：hour, minute, second &amp;#34;&amp;#34;&amp;#34; def print_time(ti): print(&amp;#34;%.2d:%.2d:%.2d&amp;#34; % (ti.hour,ti.minute,ti.second)) #记得加括号 time1 = Time() time1.hour = 11 time1.minute = 59 time1.second = 30 print_time(time1) 编写一个叫做 is_after 的布尔函数,接收两个 Time 对象,t1 和 t2 ,若 t1 的时间在 t2 之后,则返回 True ,否则返回 False。挑战:不要使用 if 语句。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class Time: &amp;#34;&amp;#34;&amp;#34;用于记录时间 属性：hour, minute, second &amp;#34;&amp;#34;&amp;#34; def print_time(ti): print(&amp;#34;%.</description></item><item><title>Think Python Exercise 15.2</title><link>https://o5o.me/post/think_python_exercise_15.2/</link><pubDate>Mon, 09 Jan 2023 16:11:59 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_15.2/</guid><description>编写一个名为 draw_rect 的函数,该函数接受一个 Turtle 对象和一个 Rectangle 对象,使用Turtle 画出该矩形。参考第 四 章中使用 Turtle 的示例。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 import turtle class Point: &amp;#34;&amp;#34;&amp;#34;表示一个二维的点 &amp;#34;&amp;#34;&amp;#34; class Rectangle: &amp;#34;&amp;#34;&amp;#34;Represents a rectangle. attributes: width, height, corner.&amp;#34;&amp;#34;&amp;#34; def draw_rect(t,rect): t.pu() #在移动到矩形左下角的过程中，不画出痕迹（提笔，put up） t.goto(rect.corner.x, rect.corner.y) t.pd() #落笔（put down） for i in range(2): t.</description></item><item><title>Think Python Exercise 15.1</title><link>https://o5o.me/post/think_python_exercise_15.1/</link><pubDate>Wed, 04 Jan 2023 21:30:00 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_15.1/</guid><description>15.1.1 定义一个叫做Circle类, 类的属性是圆心 (center) 和半径 (radius), 其中, 圆心 (center) 是一个 Point 类,而半径 (radius) 是一个数字。
实例化一个圆心 (center) 为 (150, 100) ,半径 (radius) 为 75 的Circle 对象。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Circle: &amp;#34;&amp;#34;&amp;#34;属性：圆心center、半径radius 圆心是一个Point类 半径是一个数字 &amp;#34;&amp;#34;&amp;#34; class Point: &amp;#34;&amp;#34;&amp;#34;表示一个二维的点 &amp;#34;&amp;#34;&amp;#34; bob = Circle() bob.center = Point() bob.center.x = 150 bob.center.y = 100 bob.radius = 75 15.1.2 编写一个名称为point_in_circle的函数,该函数可以接受一个圆类 (Circle) 对象和点类 (Point) 对象, 然后判断该点是否在圆内。在圆内则返回True 。</description></item><item><title>Think Python Exercise 15.0</title><link>https://o5o.me/post/think_python_exercise_15.0/</link><pubDate>Wed, 04 Jan 2023 12:25:00 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_15.0/</guid><description>编写一个叫做distance_between_points的函数，它接受两个Point作为参数，然后返回这两个点之间的距离。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import math class Point: &amp;#34;&amp;#34;&amp;#34;表示一个二维的点 &amp;#34;&amp;#34;&amp;#34; def distance_between_points(p1,p2): return math.sqrt((p1.x - p2.x)**2+(p1.y - p2.y)**2) Po1 = Point() Po2 = Point() Po1.x = 5 Po1.y = 3 Po2.x = 6 Po2.y = 2 distance_between_points(Po1,Po2) 编写一个叫做move_rectangle的函数，接受一个Rectangle以及两个数字dx和dy。它把corner的x坐标加上dx，把corner的y坐标加上dy，从而改变矩形的位置。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 def print_point(p): print(&amp;#39;(%g, %g)&amp;#39; % (p.</description></item><item><title>Think Python Exercise 11.3 阿克曼函数</title><link>https://o5o.me/post/think_python_exercise_11.3_ackermann/</link><pubDate>Tue, 03 Jan 2023 22:39:00 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_11.3_ackermann/</guid><description>将 习题6.2 中的 Ackermann 函数备忘录化(memoize), 看看备忘录化(memoization)是否可以支持解决更大的参数。没有提示!
储存之前计算过的值以便今后使用，这个操作就称为备忘录化。
做这道题首先要理解书上关于斐波那契数列的例子。
计算斐波那契数列的代码：
1 2 3 4 5 6 7 def fibonacci(n): if n == 0: return 0 elif n == 1: return 1 else: return fibonacci(n-1) + fibonacci(n-2) 备忘录化后的代码：
1 2 3 4 5 6 7 8 9 known = {0:0, 1:1} def fibonacci(n): if n in known: return known[n] res = fibonacci(n-1) + fibonacci(n-2) known[n] = res return res 按照同样的思路，我们可以把计算的ack函数的值储存到字典里，后面再计算时先看之前是不是曾计算过，如果计算过，直接调用已有结果即可。
原ack函数代码：
1 2 3 4 5 6 7 8 def ackermann(m,n): #来自6.</description></item><item><title>Think Python Exercise 6.2 阿克曼函数</title><link>https://o5o.me/post/think_python_exercise_6.2_ackermann/</link><pubDate>Tue, 03 Jan 2023 21:25:57 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_6.2_ackermann/</guid><description>Ackermann 函数 $A(m, n)$ 的定义如下:
$$ A(m, n)=\left{\begin{array}{ll} n+1 &amp;amp; \text { if } m=0 \ A(m-1,1) &amp;amp; \text { if } m&amp;gt;0 \text { and } n=0 \ A(m-1, A(m, n-1)) &amp;amp; \text { if } m&amp;gt;0 \text { and } n&amp;gt;0 \end{array}\right. $$
查看维基百科的定义, 编写一个叫作ack的函数来计算 Ackermann 函数。使用你的函 数计算ack(3,4), 其结果应该为 125 。如果 $m$ 和 $n$ 的值较大时, 会发生什么?
拙见：
1 2 3 4 5 6 7 8 9 def ack(m,n): if m == 0: return n+1 elif m &amp;gt; 0 and n == 0: return ack(m-1,1) elif m &amp;gt; 0 and n &amp;gt; 0: return ack(m-1,ack(m,n-1)) ack(3,4) 似乎看上去平平无奇，把它的计算过程展示出来：</description></item><item><title>Think Python Exercise 6.1</title><link>https://o5o.me/post/think_python_exercise_6.1/</link><pubDate>Tue, 03 Jan 2023 21:05:57 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_6.1/</guid><description>画出下面程序的堆栈图。这个程序的最终输出是什么?
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def b(z): prod = a(z, z) print(z, prod) return prod def a(x, y): x = x + 1 return x * y def c(x, y, z): total = x + y + z square = b(total)**2 return square x = 1 y = x + 1 print(c(x, y+3, x+y)) 程序的最终输出：8100
应该没有特别的意义吧？</description></item><item><title>Think Python Exercise 11.2 字典方法setdefault</title><link>https://o5o.me/post/think_python_exercise_11.2/</link><pubDate>Tue, 03 Jan 2023 18:28:00 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_11.2/</guid><description>查看字典方法setdefault的文档, 并使用该方法写一个更简洁的invert_dict。
原来的函数的定义：
1 2 3 4 5 6 7 8 9 10 11 def invert_dict(d): &amp;#34;&amp;#34;&amp;#34;倒转一个字典，将原字典的值作为键，原字典的键作为值。 &amp;#34;&amp;#34;&amp;#34; inverse = dict() for key in d: val = d[key] if val not in inverse: inverse[val] = [key] #反转后，一个键可能对应多个值，所以把值放到列表里 else: inverse[val].append(key) #相当于给列表追加一个值。键val的值是一个列表。 return inverse 文档链接：这里
setdefault(key[, default]), 如果字典存在键 key ，返回它的值。如果不存在，插入值为 default 的键 key ，并返回 default 。 default 默认为 None。
1 2 3 4 5 6 7 8 9 10 def invert_dict(d): &amp;#34;&amp;#34;&amp;#34;倒转一个字典，将原字典的值作为键，原字典的键作为值。 &amp;#34;&amp;#34;&amp;#34; inverse = dict() for key in d: inverse[d[key]]=inverse.</description></item><item><title>Think Python Exercise 11.1</title><link>https://o5o.me/post/think_python_exercise_11.1/</link><pubDate>Tue, 03 Jan 2023 18:12:23 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_11.1/</guid><description>编写一函数,读取words.txt中的单词并存储为字典中的键。值是什么无所谓。然后,你可以使用in操作符检查一个字符串是否在字典中。
如果你做过练习 10.10 ,可以比较一下in操作符和二分查找的速度。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 def make_word_list(): word_list = [] fin = open(&amp;#39;words.txt&amp;#39;) for line in fin: word = line.strip() word_list.append(word) return word_list def dictword(w_li): word_dict = dict() for word in w_li: word_dict[word] = &amp;#39;ok&amp;#39; #题目说值是什么无所谓 return word_dict word_list = make_word_list() word_dict = dictword(word_list) &amp;#39;aha&amp;#39; in word_dict 我就不比较in操作符和二分查找的速度了。</description></item><item><title>Think Python Exercise 10.11</title><link>https://o5o.me/post/think_python_exercise_10.11/</link><pubDate>Mon, 02 Jan 2023 23:14:23 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_10.11/</guid><description>两个单词中如果一个是另一个的反转, 则二者被称为是 ‘‘反转词对’’。 编写一个函数,找出单词表中所有的反转词对。
解答：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 def read_word1(file_in): #来自10.9 word_list = [] for line in file_in: word = line.strip() word_list.append(word) return word_list def in_bisect(t,a): #来自10.10 &amp;#34;&amp;#34;&amp;#34;列表t，单词a，看单词是否在列表内，在的话返回单词的位置。 列表里的单词，必须是已经按字母顺序排好序的。 &amp;#34;&amp;#34;&amp;#34; s1 = int((len(t))/2) s = s1 #如果a在t内，s保存a的序数 while s1 &amp;gt; 0: if a == t[s1]: return s elif a &amp;gt; t[s1]: t = t[s1:] s1 = int(len(t)/2) #在循环过程中，确保s和s1所指的是同一个元素。 #print(a,&amp;#34;的位置大于&amp;#34;,s) s += s1 else: t = t[:s1] s1 = int(len(t)/2) #print(a,&amp;#34;的位置小于等于&amp;#34;,s) s -= s1 return None def findpairs(word_li): i = 0 for word in word_li: drow = word[::-1] #将单词里的字母按照相反的顺序排列 k = in_bisect(word_li[i:],drow) #写word_list[i:]目的是不让程序往前去找所谓的“反转词” if k: print(word,&amp;#39;和&amp;#39;,word_li[k+i]) i += 1 fin = open(&amp;#39;words.</description></item><item><title>Think Python Exercise 10.10 二分法</title><link>https://o5o.me/post/think_python_exercise_10.10/</link><pubDate>Mon, 02 Jan 2023 21:29:30 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_10.10/</guid><description>使用in运算符可以检查一个单词是否在单词表中, 但这很慢, 因为它是按顺序查找单词。
由于单词是按照字母顺序排序的,我们可以使用两分法 (也称二叉树搜索) 来加快速度, 类似于在字典中查找单词的方法。你从中间开始,如果你要找的单词在中间的单词之前,你查找前半部分,否则你查找后半部分。
不管怎样, 你都会将搜索范围减小一半。 如果单词表有 113,809 个单词, 你只需要 17 步就可以找到这个单词,或着得出单词不存在的结论。
编写一个叫做in_bisect的函数,接受一个已排序的列表和一个目标值作为参数,返回该值在列表中的位置,如果不存在则返回None。
或者你可以阅读bisect模块的文档并使用它!
解答：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 def in_bisect(t,a): &amp;#34;&amp;#34;&amp;#34;列表t，单词a，看单词是否在列表内，在的话返回单词的位置。 列表里的单词，必须是已经按字母顺序排好序的。 &amp;#34;&amp;#34;&amp;#34; s1 = int((len(t))/2) s = s1 #如果a在列表内，s保存a的下标 while s1 &amp;gt; 0: if a == t[s1]: return s elif a &amp;gt; t[s1]: t = t[s1:] s1 = int(len(t)/2) #在循环过程中，确保s和s1所指的是同一个元素。 #print(a,&amp;#34;的位置大于&amp;#34;,s) s += s1 else: t = t[:s1] s1 = int(len(t)/2) #print(a,&amp;#34;的位置小于等于&amp;#34;,s) s -= s1 return None t1 = [&amp;#39;a&amp;#39;,&amp;#39;b&amp;#39;,&amp;#39;c&amp;#39;,&amp;#39;d&amp;#39;,&amp;#39;e&amp;#39;,&amp;#39;f&amp;#39;,&amp;#39;g&amp;#39;,&amp;#39;h&amp;#39;,&amp;#39;i&amp;#39;,&amp;#39;j&amp;#39;,&amp;#39;k&amp;#39;,&amp;#39;l&amp;#39;,&amp;#39;m&amp;#39;,&amp;#39;n&amp;#39;,&amp;#39;o&amp;#39;,&amp;#39;p&amp;#39;,&amp;#39;q&amp;#39;] in_bisect(t1,&amp;#39;c&amp;#39;) s和s1这两个变量，保存的是列表元素的下标。在循环过程中，确保s和s1所指的是同一个元素，即：s保存的是元素在完整列表里的下标，s1保存的是元素在切片后的列表里的下标，在两个列表里，第s个元素和第s1个元素（都从0开始）是同一个元素。</description></item><item><title>Think Python Exercise 10.3</title><link>https://o5o.me/post/think_python_exercise_10.3/</link><pubDate>Mon, 02 Jan 2023 21:22:48 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_10.3/</guid><description>编写一个叫做middle的函数,接受一个列表作为参数,并返回一个除了第一个和最后一个元素的列表。例如:
&amp;gt;&amp;gt;&amp;gt; t = [1, 2, 3, 4] &amp;gt;&amp;gt;&amp;gt; middle(t) [2, 3] 解答：
1 2 3 4 5 def middle(t): return t[1:-1] t1 = [1,2,3,4] middle(t1)</description></item><item><title>Think Python Exercise 10.7</title><link>https://o5o.me/post/think_python_exercise_10.7/</link><pubDate>Mon, 02 Jan 2023 20:31:00 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_10.7/</guid><description>编写一个叫做 has_duplicates 的函数，接受一个列表作为参数，如果一个元素在列表中出现了不止一次，则返回 True 。这个函数不能改变原列表。
解答：
1 2 3 4 5 6 7 8 9 10 11 12 def has_duplicates(t): p = [] for i in t: if i not in p: p.append(i) else: return True return False t1 = [1,2,3] has_duplicates(t1)</description></item><item><title>Roam Research和Anki联用：动作配置</title><link>https://o5o.me/post/rr_km_anki_configuration_tutorial/</link><pubDate>Mon, 02 Jan 2023 01:07:10 +0800</pubDate><guid>https://o5o.me/post/rr_km_anki_configuration_tutorial/</guid><description>Roam Research是一个笔记软件，Anki是一个间隔重复软件。我在RR里写的笔记有复习需求，在Anki里的卡片有编辑、整理需求，所以以前的我就用Keyboard Maestro这个工具写了一个动作（Macro）来帮我将二者联系起来。
RR的笔记可以导出为Anki卡片（卡片仅用于复习、展示，所有的编辑都在笔记上完成），笔记更新，卡片能同步更新，笔记和卡片能相互跳转。
可以按下面的顺序进行配置（所需文件在文章最后），手把手教学请看视频：
【详细配置】Keyboard Maestro动作实现Roam Research笔记和Anki卡片的双向链接、跳转和同步更新，配置指南
Anki模板导入、修改 要改的地方就一处：修改模板里的RR graph名称。不改的话就没办法从Anki跳转回RR了。
KM动作导入、修改 要改的地方也就只有一处：把你的Anki牌组的名字填进去。
Anki插件安装 anki connect，插件代码：2055492159
禁用App Nap 从Mac OS X Mavericks开始，操作系统中引入了名为App Nap的功能。此功能导致某些打开（但不可见）的应用程序处于挂起状态。由于此行为会导致Anki Connect在前台有另一个窗口时停止工作，因此应禁用Anki的App Nap1。
在终端运行下面的命令即可。
1 2 3 defaults write net.ankiweb.dtop NSAppSleepDisabled -bool true defaults write net.ichi2.anki NSAppSleepDisabled -bool true defaults write org.qt-project.Qt.QtWebEngineCore NSAppSleepDisabled -bool true 最后 这就配置完成了，是不是很简单？quicker版的动作配置更简单，除了下载插件，啥都不用配置，自动配置。想想以前真的傻，我给quicker版的这个动作加了批量导入、多种挖空标记、多种方式排列的笔记导入、自动从Anki获取牌组列表、自动添加Anki模板等等功能，这些功能在我现在看来用途很小很小，但当时却花了大量时间去改动作、修bug，浪费了很多时间在完全没必要的事情上。
模板、动作下载链接: 百度网盘，提取码: 3tvu
希望能给看到这里的你带来一些帮助。
Notes for MacOS Users&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Think Python Exercise 4.1</title><link>https://o5o.me/post/think_python_exercise_4.1/</link><pubDate>Sun, 01 Jan 2023 18:23:34 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_4.1/</guid><description>画一个执行 circle(bob,radius) 时的堆栈图（stack diagram），说明程序的各个状态。你可以手动进行计算，也可以在代码中加入打印语句。 “重构”一节中给出的 arc 函数版本并不太精确，因为圆形的线性近似（linear approximation）永远处在真正的圆形之外。因此，Turtle 总是和正确的终点相差几个像素。我的答案中展示了降低这个错误影响的一种方法。阅读其中的代码，看看你是否能够理解。如果你画一个堆栈图的话，你可能会更容易明白背后的原理。 先放上代码，得到代码过程可以看Think Python Exercise 4.0。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import turtle import math def polyline(t,length,n,angle): for i in range(n): t.fd(length) t.lt(angle) def arc(t,r,angle): &amp;#34;&amp;#34;&amp;#34;angle取值范围是1~360，度数。 画出圆的一部分。 &amp;#34;&amp;#34;&amp;#34; arc_length = 2 * math.pi * r * angle / 360 n = int(arc_length / 3) + 1 step_length = arc_length / n step_angle = angle / n polyline(t,step_length,n,step_angle) def circle(t,r): arc(t,r,360) #circle是arc函数在角度angle取360时的特例 bob = turtle.</description></item><item><title>Think Python Exercise 4.0</title><link>https://o5o.me/post/think_python_exercise_4.0/</link><pubDate>Sun, 01 Jan 2023 16:04:43 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_4.0/</guid><description>写一个名为 square 的函数，接受一个名为 t 的形参，t 是一个海龟。这个函数应用这只海龟画一个正方形。 写一个函数调用，将 bob 作为实参传给 square ，然后再重新运行程序。
1 2 3 4 5 6 7 8 9 10 11 12 import turtle def square(t): for i in range(4): t.fd(100) t.lt(90) bob = turtle.Turtle() square(bob) turtle.mainloop() 给 square 增加另一个名为 length 的形参。修改函数体，使得正方形边的长度是 length ，然后修改函数调用，提供第二个实参。 重新运行程序。用一系列 length 值测试你的程序。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import turtle def square(t,length): for i in range(4): t.</description></item><item><title>Think Python Exercise 5.4</title><link>https://o5o.me/post/think_python_exercise_5.4/</link><pubDate>Sun, 01 Jan 2023 13:04:59 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_5.4/</guid><description>下面程序的输出是什么？画出展示程序每次打印输出时的堆栈图。
1 2 3 4 5 6 7 def recurse(n, s): if n == 0: print(s) else: recurse(n-1, n+s) recurse(3, 0) 如果你这样调用函数： recurse(-1,0) ，会有什么结果？ 请写一个文档字符串，解释调用该函数时需要了解的全部信息（仅此而已）。 解答：
我用obsidian的Excalidraw插件画了一个。
如果这样调用函数： recurse(-1,0)，Python会抛出一个递归错误：超过最大递归深度。
&amp;gt;&amp;gt;&amp;gt; recurse(-1,0) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 5, in recurse File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 5, in recurse File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 5, in recurse [Previous line repeated 996 more times] RecursionError: maximum recursion depth exceeded 写一个文档字符串，解释调用该函数时需要了解的全部信息</description></item><item><title>正则表达式匹配HTML标签</title><link>https://o5o.me/post/regexps_match_html_tags/</link><pubDate>Sat, 31 Dec 2022 22:25:25 +0800</pubDate><guid>https://o5o.me/post/regexps_match_html_tags/</guid><description>最近在用SuperMemo渐进阅读旋元佑的《英语魔法师之语法俱乐部》这本语法书。我的阅读前流程是这样的：（括号内的是所用工具）
将epub电子书按章节分割（calibre-EpubSplit） 将需要阅读的章节导入SuperMemo（Quicker、pandoc、AutoHotkey） 在SuperMemo内将该章节分割成更小的卡片（鼠标右键-阅读-分割-分割文章） 统一将所得的所有卡片设为新材料（根卡片鼠标右键-处理选中分支-学习-忘记） 菜单栏-学习-阶段-新学材料（也可等当天复习完后根据提示进入） 问题在于，我所拥有的这本epub电子书，html标签很乱，导致我在导入SM后无法正确根据html标签分割文章，因此在导入SM前需要先整理epub文件的html标签。这也就是这篇文章的由来。
截取这本书的一个片段：
1 &amp;lt;p class=&amp;#34;calibre_16&amp;#34;&amp;gt;以上谈的是修饰动词专用的“方法、状态副词”，以及它在句中位置的变化原则。接下来看看其他种类的副词。&amp;lt;/p&amp;gt;&amp;lt;blockquote class=&amp;#34;calibre_5&amp;#34;&amp;gt;&amp;lt;blockquote class=&amp;#34;calibre2&amp;#34;&amp;gt;&amp;lt;blockquote class=&amp;#34;calibre2&amp;#34;&amp;gt;&amp;lt;blockquote class=&amp;#34;calibre2&amp;#34;&amp;gt;&amp;lt;blockquote class=&amp;#34;calibre_21&amp;#34;&amp;gt;&amp;lt;span class=&amp;#34;calibre1&amp;#34;&amp;gt;&amp;lt;span class=&amp;#34;bold&amp;#34;&amp;gt;&amp;lt;span class=&amp;#34;calibre_12&amp;#34;&amp;gt;强调语气的副词（Intensifiers)&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;a id=&amp;#34;filepos295095&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;p class=&amp;#34;calibre_24&amp;#34;&amp;gt;这一类副词有一个特色：它在使用上很有弹性，&amp;lt;span class=&amp;#34;bold&amp;#34;&amp;gt;四种主要词类，包括名词、动词、形容词与副词都可以用它来修饰。&amp;lt;/span&amp;gt;认识这一点，才算真正弄清楚形容词与副词间的分工。这一类的副词又可以细分为以下三种：&amp;lt;/p&amp;gt; 所要做的是把下面这一段变为：&amp;lt;h2&amp;gt;强调语气的副词（Intensifiers)&amp;lt;/h2&amp;gt;，这样我就可以在SM里很方便地按h2标签分割内容。
1 &amp;lt;blockquote class=&amp;#34;calibre2&amp;#34;&amp;gt;&amp;lt;blockquote class=&amp;#34;calibre2&amp;#34;&amp;gt;&amp;lt;blockquote class=&amp;#34;calibre2&amp;#34;&amp;gt;&amp;lt;blockquote class=&amp;#34;calibre_21&amp;#34;&amp;gt;&amp;lt;span class=&amp;#34;calibre1&amp;#34;&amp;gt;&amp;lt;span class=&amp;#34;bold&amp;#34;&amp;gt;&amp;lt;span class=&amp;#34;calibre_12&amp;#34;&amp;gt;强调语气的副词（Intensifiers)&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;/blockquote&amp;gt; 可以看到，一共是4个blockquote标签，3个span标签，那么我们可以先设法用正则匹配出一个起始blockquote标签，然后重复4次，匹配出一个起始span标签，然后重复3词，就能匹配出所有的起始标签了。
(&amp;lt;blockquote\s[^&amp;gt;]*&amp;#34;&amp;gt;){4}(&amp;lt;span\s[^&amp;gt;]*&amp;#34;&amp;gt;){3} 同样的道理，匹配所有的闭合标签。
(&amp;lt;\/span&amp;gt;){3}(&amp;lt;/blockquote&amp;gt;){4} 最后，标题可以用(.*?)匹配，把它们组合在一起，就成功匹配出了这段html代码。
(&amp;lt;blockquote\s[^&amp;gt;]*&amp;#34;&amp;gt;){4}(&amp;lt;span\s[^&amp;gt;]*&amp;#34;&amp;gt;){3}(.*?)(&amp;lt;\/span&amp;gt;){3}(&amp;lt;/blockquote&amp;gt;){4} 将其用下面的内容替换，内容就整理好了。
\n&amp;lt;h2&amp;gt;$3&amp;lt;/h2&amp;gt;\n 上面的正则，经过我的实践，是比较经济实惠的。以后如果有更好的方案，本文会继续更新。</description></item><item><title>Think Python Exercise 10.6</title><link>https://o5o.me/post/think_python_exercise_10.6/</link><pubDate>Sat, 31 Dec 2022 18:28:02 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_10.6/</guid><description>如果可以通过重排一个单词中字母的顺序，得到另外一个单词，那么称这两个单词是变位词。编写一个叫做 is_anagram 的函数，接受两个字符串作为参数， 如果它们是变位词则返回 True 。
解答：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def is_anagram(s1,s2): t1 = list(s1) t2 = list(s2) #先把字符串转换成列表 if len(t1) == len(t2): #如果两个字符串长度都不一样，那么肯定不是变位词了 t1.sort() t2.sort() #按照同样的方式重新排序后，如果二者元素对应相等，那么它们就是变位词了 for i in range(len(t1)): if t1[i] == t2[i]: pass else: return False return True else: return False is_anagram(&amp;#39;abc&amp;#39;,&amp;#39;bac&amp;#39;)</description></item><item><title>Think Python Exercise 10.5</title><link>https://o5o.me/post/think_python_exercise_10.5/</link><pubDate>Sat, 31 Dec 2022 17:50:04 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_10.5/</guid><description>编写一个叫做is_sorted的函数，接受一个列表作为参数，如果列表是递增排列的则返回 True ，否则返回False。 例如：
&amp;gt;&amp;gt;&amp;gt; is_sorted([1, 2, 2]) True &amp;gt;&amp;gt;&amp;gt; is_sorted([&amp;#39;b&amp;#39;, &amp;#39;a&amp;#39;]) False 分析：
可以先对列表用.sort()方法进行递增排列，如果递增排列后的列表和原列表的元素都对应相同，说明原列表本身就是递增排列的。
一个错误的写法：
1 2 3 4 5 6 7 8 9 def is_sorted(t): t_copy = t[:] print(t_copy) if t_copy == t.sort(): return True else: return False is_sorted([1, 2, 2]) 程序没有报错，但它仍是错的，因为，我们要比较的是两个列表里的元素对应相同，而不是看这两个变量是不是指向同一个列表。t_copy和t.sort()肯定不指向同一个列表，但它们的元素对应相同。因此我们不能用t_copy == t.sort()这样的方法来比较。可以这样做：
1 2 3 4 5 6 7 8 9 10 11 def is_sorted(t): t_copy = t[:] for i in range(len(t)): if t_copy[i] == t[i]: #如果递增排列后的列表和原列表的元素都对应相同，说明原列表本身就是递增排列的 pass else: return False return True is_sorted([1, 2, 2]) 还可以用另一种方法实现：从第二个元素开始，依次和前面一个元素比较大小。</description></item><item><title>Think Python Exercise 10.4</title><link>https://o5o.me/post/think_python_exercise_10.4/</link><pubDate>Sat, 31 Dec 2022 17:29:11 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_10.4/</guid><description>编写一个叫做 chop 的函数，接受一个列表作为参数，移除第一个和最后一个元素，并返回None。例如：
&amp;gt;&amp;gt;&amp;gt; t = [1, 2, 3, 4] &amp;gt;&amp;gt;&amp;gt; chop(t) &amp;gt;&amp;gt;&amp;gt; t [2, 3] 分析：
一顿操作猛如虎：（错的）
1 2 3 4 5 6 7 8 def chop(t): t = t[1:-1] t1 = [1, 2, 3, 4] chop(t1) t1 为什么t1没变化？是我列表切片用错了吗，再试试：（还是错的）
1 2 3 4 5 6 7 8 def chop(t): t = t[1:len(t)-2] t1 = [1, 2, 3, 4] chop(t1) t1 可以看到，t1还是没变化，为什么？为什么这样是错的？
不要被迷惑了，当一个列表t1传递给一个函数时，t1和形参t共同指向同一个列表，但当函数内部t重新赋值后，t指向了一个新的列表，而t1依然指向原来的列表，那么当函数运行结束后，t1的值当然还是原来的啦。
由于题目要求函数不能有返回值，可以使用下面的做法：
1 2 3 4 5 6 7 8 9 def chop(t): del t[0] del t[-1] t1 = [1, 2, 3, 4] chop(t1) t1 如果函数可以有返回值，可以这样写：</description></item><item><title>Think Python Exercise 10.9</title><link>https://o5o.me/post/think_python_exercise_10.9/</link><pubDate>Sat, 31 Dec 2022 16:59:00 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_10.9/</guid><description>编写一个函数，读取文件 words.txt ，建立一个列表,其中每个单词为一个元素。
编写两个版本，一个使用 append 方法，另一个使用 t = t + [x] 。那个版本运行得慢？为什么？
解答：
在 jupyter 中的一个代码单元（cell）中，代码第一行写上%%time或%%timeit，即可计算代码的运行时间。
版本1：
1 2 3 4 5 6 7 8 9 10 11 12 %%time def read_word1(file_in): word_list = [] for line in file_in: word = line.strip() word_list.append(word) return word_list fin = open(&amp;#39;words.txt&amp;#39;) a = read_word1(fin) 运行结果：
CPU times: user 85.3 ms, sys: 0 ns, total: 85.3 ms Wall time: 88.4 ms
版本2：
1 2 3 4 5 6 7 8 9 10 11 12 %%time def read_word2(file_in): word_list = [] for line in file_in: word = line.</description></item><item><title>Think Python Exercise 10.2</title><link>https://o5o.me/post/think_python_exercise_10.2/</link><pubDate>Sat, 31 Dec 2022 16:42:52 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_10.2/</guid><description>编写一个叫做 cumsum 的函数，接受一个由数值组成的列表，并返回累加和；即一个新列表，其中第i个元素是原列表中前i+1个元素的和（注意i是从0开始的）。 例如：
&amp;gt;&amp;gt;&amp;gt; t = [1, 2, 3] &amp;gt;&amp;gt;&amp;gt; cumsum(t) [1, 3, 6] 解答：
1 2 3 4 5 6 7 8 9 10 11 12 def cumsum(t): numsum = [] for i in range(len(t)): numsum.append(sum(t[:i+1])) #对t的前i+1个元素求和（注意i是从0开始，所以第i个元素是第i+1个元素），然后追加到新列表里 return numsum t = [1, 2, 3] print(cumsum(t)) t = [3,3,6,9,10] print(cumsum(t))</description></item><item><title>Think Python Exercise 10.1</title><link>https://o5o.me/post/think_python_exercise_10.1/</link><pubDate>Sat, 31 Dec 2022 16:22:37 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_10.1/</guid><description>编写一个叫做 nested_sum 的函数，接受一个由一些整数列表构成的列表作为参数，并将所有嵌套列表中的元素相加。例如：
&amp;gt;&amp;gt;&amp;gt; t = [[1, 2], [3], [4, 5, 6]] &amp;gt;&amp;gt;&amp;gt; nested_sum(t) 21 解答：
可以分别对每个子列表求和，再对得到的各个和求和。也可以先把各个子列表合并起来，然后对得到的列表求和。
1 2 3 4 5 6 7 8 9 def nested_sum(t): c = [] for i in t: c = c + i #把t列表里的各个列表合并成一个列表 return sum(c) t = [[1, 2], [3], [4, 5, 6]] nested_sum(t)</description></item><item><title>游戏手柄用于SuperMemo复习</title><link>https://o5o.me/post/supermemo-gamepad/</link><pubDate>Fri, 30 Dec 2022 12:23:10 +0800</pubDate><guid>https://o5o.me/post/supermemo-gamepad/</guid><description>在用SuperMemo复习时，一边要移动鼠标，浏览卡片内容，一边要用键盘评分、修改卡片内容，容易手忙脚乱。把评分常用的按键和其他一些按键映射到游戏手柄上可以稍微方便一点。
游戏手柄：八位堂Zero2小手柄。 软件：AntiMicroX
手柄连接计算机 看说明书即可。
在AntiMicroX中设定快捷键 打开软件后，点手柄上的按键，可以看到有的按键映射是错的，点软件窗口左下角的“游戏控制器映射”，先矫正一遍。
然后在软件主窗口中找到你想设定快捷键的按键（可以通过按手柄上的对应按键确定它的位置），鼠标点击，设定快捷键即可。
在我的SuperMemo中，目前是有很多的摘录卡片，以及很少的填空题卡片。我习惯于一边复习一边编辑卡片内容，比如把一段紧凑的话分成一行一行的句子，修改一些措辞。
在SM中，当我的鼠标点击了卡片，可以看作我进入了“编辑模式”，如果这张卡片看完了，想进入下一张卡片，我需要先退出“编辑模式”（按ESC），再按回车键。可以把这两个键简化为一个键，在游戏手柄上按一次，无论你是不是在“编辑模式”，都可以跳转到下一张卡片。
在AntiMicroX窗口中鼠标点击按键，在弹出的窗口中点击“高级选项”，又弹出一个窗口，在“分配”栏里点击“小方块”（里面出现&amp;quot;&amp;hellip;&amp;quot;），这时候在键盘上输入想设定的按键。设定两个按键，那么点击游戏手柄上的按键时，这两个按键会依次执行。
我的按键设定 设定原则是，使用越多的按键放在越容易按的位置。
使用手柄时我习惯竖着拿。除了十字方向键（我不用），最不方便按的是左肩键，其次是右肩键，然后是开始键和选择键。
因此，我的设定是：
左肩键，评分5。一是用的少，二来对一张卡片评分5时需要调整手的握姿，这样就会很慎重、很有仪式感。如果这种情况下还非要把一张卡片评分为5，说明真的掌握的很好了。
右肩键，评分2。答错时按的。
A，评分3/ENTER。最容易按的键。因为在评分时，按Enter键的效果和按3是一样的，所以设定为Enter，这样在复习时就不用频繁移动手指了。
X，评分1。
B，评分4。
Y，ESC+Enter，切换到下一张卡片。
为什么A设定了Enter，这里还要再设定一个ESC+Enter呢？或者能不能都用ESC+Enter呢？你复习的时候亲手去操作一下就明白了。评分时按ESC+Enter没效果；阅读并编辑卡片时，按Enter不会跳转到下一张卡片，而是在卡片里添加一个空行。
这是一件很主观的事情，怎么舒服怎么来。
全文完。</description></item><item><title>Think Python Exercise 9.6</title><link>https://o5o.me/post/think_python_exercise_9.6/</link><pubDate>Thu, 29 Dec 2022 17:45:12 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_9.6/</guid><description>编写一个名为is_abecedarian 的函数, 如果单词中的字符以字符表的顺序出现 (允许重复字符),则返回True。有多少个具备这种特征的单词?
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 def word_abcde(word): alphabets = &amp;#34;abcdefghijklmnopqrstuvwxyz&amp;#34; i = 0 front = 0 #前一个字母的序数 mine = 0 #当前字母的序数 while i &amp;lt; len(word): index = 0 while index &amp;lt; len(alphabets): # print(i,word[i],index,alphabets[index]) if word[i] == alphabets[index]: mine = index if mine &amp;lt; front: return False else: front = mine break index += 1 i += 1 return True def is_abecedarian(file_in): count = 0 for line in file_in: word = line.</description></item><item><title>Think Python Exercise 9.5</title><link>https://o5o.me/post/think_python_exercise_9.5/</link><pubDate>Thu, 29 Dec 2022 16:05:12 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_9.5/</guid><description>编写一个名为uses_all的函数,接受一个单词和一个必须使用的字符组成的字符串。如果该单词包括此字符串中的全部字符至少一次,则返回True。你能统计出多少单词包含了所有的元音字符aeiou吗?如果换成aeiouy 呢?
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 def uses_all(word, muststr): for i in muststr: count = 0 index = 0 while index &amp;lt; len(word): if i == word[index]: break index += 1 if index == len(word): return False return True def count_word(file_in, als): count = 0 for line in file_in: word = line.</description></item><item><title>Think Python Exercise 9.4</title><link>https://o5o.me/post/think_python_exercise_9.4/</link><pubDate>Thu, 29 Dec 2022 15:30:12 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_9.4/</guid><description>编写一个名为 avoids 的函数，接受一个单词和一个指定禁止使用字符的字符串，如果单词中不包含任意被禁止的字符，则返回True 。
修改你的程序，提示用户输入一个禁止使用的字符，然后打印不包含这些字符的单词的数量。你能找到一个5个禁止使用字符的组合，使得其排除的单词数目最少么？
你能找到一个&amp;quot;5个禁止使用字符&amp;quot;的组合，使得其排除的单词数目最少么？ 分析：从26个字母中挑选5个字母构成一个组合，打印不包含这些字母的单词的数量，看哪个组合下被排除出去的单词数目最少。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 def avoids(word,ause): #ause，avoid use for i in ause: for letter in word: if letter == i: return False return True def has_no_string(file_in, nals): #nals指的是no alphabets，字母 count_nals = 0 #不含用户指定的各个字符的单词的个数 for line in file_in: word = line.strip() if avoids(word,nals): count_nals += 1 print(&amp;#34;不含&amp;#34;,nals,&amp;#34;的单词有&amp;#34;,count_nals,&amp;#34;个&amp;#34;) text = input(&amp;#34;请输入一个禁止使用的字符串，字符串里的字母都不会出现在单词中\n&amp;#34;) fin = open(&amp;#39;words.</description></item><item><title>Think Python Exercise 9.3</title><link>https://o5o.me/post/think_python_exercise_9.3/</link><pubDate>Thu, 29 Dec 2022 15:28:12 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_9.3/</guid><description>编写一个名为 avoids 的函数，接受一个单词和一个指定禁止使用字符的字符串，如果单词中不包含任意被禁止的字符，则返回True 。
修改你的程序，提示用户输入一个禁止使用的字符，然后打印不包含这些字符的单词的数量。你能找到一个5个禁止使用字符的组合，使得其排除的单词数目最少么？
你能找到一个&amp;quot;5个禁止使用字符&amp;quot;的组合，使得其排除的单词数目最少么？ 分析：从26个字母中挑选5个字母构成一个组合，打印不包含这些字母的单词的数量，看哪个组合下被排除出去的单词数目最少。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 def avoids(word,ause): #ause，avoid use for i in ause: for letter in word: if letter == i: return False return True def has_no_string(file_in, nals): #nals指的是no alphabets，字母 count_nals = 0 #不含用户指定的各个字符的单词的个数 for line in file_in: word = line.strip() if avoids(word,nals): count_nals += 1 print(&amp;#34;不含&amp;#34;,nals,&amp;#34;的单词有&amp;#34;,count_nals,&amp;#34;个&amp;#34;) text = input(&amp;#34;请输入一个禁止使用的字符串，字符串里的字母都不会出现在单词中\n&amp;#34;) fin = open(&amp;#39;words.</description></item><item><title>Think Python Exercise 9.2</title><link>https://o5o.me/post/think_python_exercise_9.2/</link><pubDate>Thu, 29 Dec 2022 15:27:12 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_9.2/</guid><description>1939年，Ernest Vincent Wright出版了一本名为 《Gadsby》 的小说，该小说里完全没有使用字符“e”。由于“e”是最常用的英文字符，因此这并不容易做到。
事实上，不使用这个最常用的符号(字符e)来构建一个孤立的想法是很难的。开始进展缓慢，但是经过有意识的、长时间的训练，你可以逐渐地熟练。
好啦，不再说题外话了（让我们开始编程练习）。
写一个叫做has_no_e的函数，如果给定的单词中不包含字符“e”，其返回 True 。
修改上一节中的程序，只打印不包含“e”的单词，并且计算列表中不含“e”单词的比例。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 fin = open(&amp;#39;words.txt&amp;#39;) def has_no_e(file_in): count_ne = 0 #不含e的单词的个数 count = 0 #总单词个数 for line in file_in: word = line.strip() index = 0 while index &amp;lt; len(word): if word[index] == &amp;#39;e&amp;#39;: break else: index = index + 1 if index == len(word): # print(word) #因为单词比较多，不一个个列出来了 count_ne = count_ne + 1 count = count + 1 print(&amp;#34;不含e的单词有&amp;#34;,count_ne,&amp;#34;个&amp;#34;,&amp;#34;单词一共有&amp;#34;,count,&amp;#34;个&amp;#34;,&amp;#34;不含“e”单词的比例为&amp;#34;,count_ne/count*100,&amp;#34;%&amp;#34;) has_no_e(fin) 上面是一个字母一个字母判断单词是不是包含‘e’的，下面是在 if 中使用 in 操作符简化后的方案：</description></item><item><title>Think Python Exercise 9.1</title><link>https://o5o.me/post/think_python_exercise_9.1/</link><pubDate>Wed, 28 Dec 2022 21:48:12 +0800</pubDate><guid>https://o5o.me/post/think_python_exercise_9.1/</guid><description>编程写一个程序，使得它可以读取 words.txt　，然后只打印出那些长度超过20个字符的单词(不包括空格)。
1 2 3 4 5 6 fin = open(&amp;#39;words.txt&amp;#39;) for line in fin: word = line.strip() if len(word) &amp;gt; 20: print(word)</description></item><item><title>导出、保存微信语音聊天记录为MP3文件</title><link>https://o5o.me/post/wp/wechat-voice-chat-record-export-to-mp3/</link><pubDate>Wed, 02 Nov 2022 00:48:24 +0800</pubDate><guid>https://o5o.me/post/wp/wechat-voice-chat-record-export-to-mp3/</guid><description>和女朋友聊天的时候，她发来的有趣的话我都会收藏起来，我想将这些内容永久保存下来。文字复制粘贴即可，那么语音怎样导出保存呢？ 先声明：免费，真的不收费。 目的：将微信语音聊天记录导出为mp3格式。 思路：将语音转存为笔记，微信会将语音以.silk格式文件的形式插入笔记，解码这个文件为MP3格式即可。 在手机上，从聊天框中收藏想要导出的语音，在微信“我”-“收藏”页面中，点开语音，再点集右上角“…”，在屏幕底部弹窗中选择“转存为笔记”； 在电脑上登录微信，点开“收藏”页面，点开刚才的那条笔记，按快捷键“Ctrl+A”全选笔记的内容，再任意打开一个聊天窗口（我一般用“文件传输助手“那个窗口”），按“Ctrl+V”粘贴内容，点击发送，可以看到有一个名称很长、后缀为“.silk”的文件被发送了出去，在这个文件上点击鼠标右键，点击“另存为”，将文件保存到电脑上。 从Github下载项目silk2mp3，如果是win系统，运行目录“silk2mp3-master\windows”内的silk2mp3.exe程序，“导入待转换文件”——“更改输出目录”——“开始转换”即可，不用更改其他设置。这样你就得到了一条mp3格式的聊天语音。 最后想说 非常感谢silk2mp3这个小工具的作者，虽然发布于七年前，但今天仍然可以使用。但是我在网上看到竟然有人拿着这样一个免费的小工具牟利，这是非常可耻的。 网上有很多很多的收费的软件用于导出微信语音聊天记录，别人自己写的软件，我不好说什么，但我总感觉这些软件有点“趁人之危”。 这篇文章，献给所有需要的人。能为大家节省一些时间，我已深感满足。</description></item><item><title>修改黑苹果系统文件</title><link>https://o5o.me/post/wp/hackintosh_modify_system_files/</link><pubDate>Tue, 25 Oct 2022 22:55:15 +0800</pubDate><guid>https://o5o.me/post/wp/hackintosh_modify_system_files/</guid><description>目的：修改/System/Library/CoreServices/SystemVersion.plist这个文件。
关闭SIP 我是用OC引导的，并且版本比较久了，我也不知道自己用的是啥版本。 首先，用Hackintool查看自己电脑的OC版本，我的是0.6.9。我现在是能用就行，不追求最新。 然后去官网下载对应版本的OpenCore Configurator。这个官网看起来不太正规的样子🤦‍♂️。 打开OpenCore Configurator，挂载EFI分区，修改config.plist，像图中这样修改这个值。这个值的由来，可以看文章最下方的参考资料链接。修改后保存，重启电脑就行了。 挂载分区 在磁盘工具里查看分区的名字，就是“设备”后跟的那一串，我这里是disk1s5，记住它。 在桌面上新建一个文件夹，命名为test。即这个文件夹的路径是：/Users/aoyu/Desktop/test/ ，其中aoyu是我的用户名。 在终端中运行这句命令：
sudo mount -o nobrowse -t apfs /dev/disk1s5 /Users/aoyu/Desktop/test 那么要修改的路径“/System/Library/CoreServices”就被映射为了“/Users/aoyu/Desktop/test/System/Library/CoreServices”。
动手修改 思路：先把要修改的SystemVersion.plist文件复制一份出来，修改后再放回去。 我先把这个文件拷贝到桌面上：
cp /System/Library/CoreServices/SystemVersion.plist /Users/aoyu/Desktop/ 修改后再放回去：
sudo rm -f /Users/aoyu/Desktop/test/System/Library/CoreServices/SystemVersion.plist sudo cp /Users/aoyu/Desktop/SystemVersion.plist /Users/aoyu/Desktop/test/System/Library/CoreServices/ 上面第一句是把原来的文件删掉，第二句是把修改后的文件拷贝过去。 这个时候，系统文件还没被真正修改，需要运行下面这两条命令，生成快照并重启系统。
sudo bless --folder /Users/aoyu/Desktop/test/System/Library/CoreServices/ --bootefi --create-snapshot sudo reboot 然后就OK了。
参考资料 我为解决这个问题所参考的所有有效的内容的链接都列在下面了，我所做的只是将它们的内容整合到了一起，希望给有同样困扰的你带去一些帮助。
OpenCore如何查看自己使用的OC引导版本号是多少 Download OpenCore Configurator 如何正确关闭macOS 11和12的SIP以及authenticated-root macOS Big Sur 解决系统文件不可修改 Hackintool的下载地址</description></item><item><title>记一次普通话考试</title><link>https://o5o.me/post/wp/putonghua_shuiping_ceshi/</link><pubDate>Mon, 18 Jul 2022 22:45:34 +0800</pubDate><guid>https://o5o.me/post/wp/putonghua_shuiping_ceshi/</guid><description>普通话考试分数出来了，二甲，分数是90.8，记录一下考完才知道的一些东西。
普通话查分网址：http://www.cltt.org/#/scoreQuery 我考试时是找机构报的名，报名费是120，官网报名费是50。我起初比较排斥机构，但为什么我还是通过机构报了名呢？我想报名的时候，官网统一报名一直没有开放，因此，如果想考普通话，就只能通过机构，机构直接联系测试站，报名后直接到测试站考试。通过机构报名也比较省事儿，如果是官方统一报名，虽说便宜了，但考试前需要线下去交费、确认（目前是这样），也就是需要多跑一趟，比较麻烦。 准考证上的考试报道时间是8:00，实际上我7点半就已经到考场了，已经在候考了。考试时不到半个小时就考完了。 考试时是有一个个单独的小隔间，还是蛮隔音的。 进小隔间前，候考时会发纸质试题让你看，纸上的题就是一会儿的考试题，遇到不会读的字词可以用手机查。 咨询机构的老师，说是成绩要3周才出来。我是7月3号考试，分数在7月15号出来的，也就是不到两周分数就出来了。 Block Ref</description></item><item><title>Cloudreve开启CORS实现用WebDAV在不同设备间同步Obsidian数据</title><link>https://o5o.me/post/wp/cloudreve_webdav_obsidian_synchronization/</link><pubDate>Sun, 26 Dec 2021 15:09:04 +0800</pubDate><guid>https://o5o.me/post/wp/cloudreve_webdav_obsidian_synchronization/</guid><description>我之前是用Git在不同设备之间同步Obsidian的数据的，很麻烦。昨天了解到新出了一个Obsidian插件叫Remotely Save，可以实现用WebDAV在不同设备间同步数据。 如果用 WebDAV同步数据，必须要先开启CORS。经测试，坚果云是不行的。好在我之前自己用Cloudreve搭建了一个网盘，支持WebDAV，开启CORS就可以了。 在Cloudreve的配置文件conf.ini中加入下面一段配置：
; 跨域配置 [CORS] AllowOrigins = * AllowMethods = * AllowHeaders = * AllowCredentials = true 之后更新配置（systemctl daemon-reload）即可。
参考资料： 配置文件 – Cloudreve</description></item><item><title>配置Anki同步服务Ankisyncd，并使用Apache2反代实现https加密同步</title><link>https://o5o.me/post/wp/ankisyncd_apache_https_ssl/</link><pubDate>Sun, 24 Jan 2021 14:10:31 +0800</pubDate><guid>https://o5o.me/post/wp/ankisyncd_apache_https_ssl/</guid><description>使用Ankiweb同步卡片在我这里确实是有些慢，所以我自己尝试搭建了自己的Anki同步服务Ankisyncd，搭建好后又发现安卓版的Ankidroid只支持https同步，所以我又用Apache2对同步地址进行了反向代理。
文章前半部分其实还是老生常谈，最精华的，我觉得是反向代理那部分内容。这篇文章全文无图片，只有文字，可以看作是整个实现过程的思路和要点整理，我省去了很多前置步骤，例如许多命令我都是直接拿来用的，而它们在你自己的服务器中可能需要提前安装。 在文章最后会附上我所参考的资料，那里一般有完整、详细的说明，如果想自己搭建类似服务，遇到问题后建议先去浏览这些内容。 文章分成三部分，先介绍在服务器端怎样搭建Ankisyncd，之后介绍电脑版Anki和安卓版Ankidroid怎样配置，在Ankidroid同步失败后又介绍了在服务器端怎样用Apache2实现反向代理。我的服务器是阿里云的学生轻量应用服务器，系统版本是Ubuntu18.04。
服务器端 在服务器安装Ankisyncd[1] 大致过程如下[2]：
git clone https://github.com/tsudoko/anki-sync-server.git /usr/local/anki-sync-server git submodule update --init cd anki-bundled pip3 install -r requirements.txt # 可预先从requirements.txt中删去“pyaudio”，这个不是必装的。 pip3 install webob 修改/usr/local/anki-sync-server下的ankisyncctl.py文件，把开头的#!/usr/bin/env python改为#!/usr/bin/env python3 按教程，这样就算安装好了，但我第二步但那条命令git submodule update --init运行之后一直卡在Cloning into '/usr/local/anki-sync-server/anki-bundled'...这里，原因是github访问速度太慢。我一开始想的办法是把github的仓库文件克隆到gitee（码云），修改 /usr/local/anki-sync-server下的.gitmodules文件，把url改成码云的链接。我也在git里add和commit了，但还是卡在这里。后来我用了一个粗暴的办法，从github下载库文件后，直接上传到vps上，解压缩到anki-bundled文件夹里面。 安装完成。
启动Ankisyncd[3] cd /usr/local/anki-sync-server screen -S anki python3 -m ankisyncd 之后在浏览器里访问“http://你的ip:27701”，浏览器页面上会显示一句“Anki Sync Server”。注意，如果访问不了，可能是需要在阿里云后台开放端口27701。 按Ctrl+A,D，退出会话，Ankisyncd会继续在后台运行。
管理用户 创建用户：
cd /usr/local/anki-sync-server ./ankisyncctl.py adduser 回车后会提示输入密码。 其他操作：
Commands: adduser - add a new user deluser - delete a user lsuser - list users passwd - change password of a user 电脑端Anki配置 从Releases · tsudoko/anki-sync-server · GitHub了解到，Ankisyncd最新版本是2.</description></item><item><title>黑苹果Apple Music提示“无法转移此设备 此设备必须与您的Apple ID关联”无法使用iTunes Match且无法离线下载播放</title><link>https://o5o.me/post/wp/hackintosh_apple_music_errors/</link><pubDate>Sun, 09 Aug 2020 11:52:17 +0800</pubDate><guid>https://o5o.me/post/wp/hackintosh_apple_music_errors/</guid><description>Apple Music（iTunes）是我一直在用的软件，充分满足了我对音乐管理的需求，深得我心。但我在黑苹果系统下，一直受本文标题所述问题的困扰，不能正常使用。 苦此问题久矣。一直没找到解决方案，直到昨天晚上。
之前写过一篇在Surface Pro4安装黑苹果的文章，其实我对折腾这些东西并没有太多兴趣，也不追求最新的功能，只想好好用。现在我还在用10.15.2的系统，一直都没更新。 这个问题很具有迷惑性。因为如果我注册一个新的账号登录Apple Music，并选择免费试用或者单独付费，上述问题是不存在的，初次登录时会有“转移”按钮提示转移资料库（记忆中是这样的提示），可以正常使用。而一旦我加入家庭组，问题就出现了：无法转移此设备，此设备必须与您的Apple ID关联……，因此我一直以为出现这个问题的原因是我的黑苹果没有成功“洗白”。 昨天晚上看到一篇文章[1]，说Apple Music通过MAC地址来区分不同设备，修改即可。虽然我已经很困了很想睡觉，但我隐隐感觉他说的是正确的，一番尝试后真的成功了。 思路：随机生成一个MAC地址；挂载EFI分区；编辑路径EFI/CLOVER/ACPI/patched/下的SSDT-rmne.aml文件；用随机生成的MAC地址替换原MAC地址（黑苹果一般都是11-22-33-44-55-66）；保存后卸载EFI分区；重启。 下面详述。 1.随机生成MAC地址 可以用在线工具，我用的那个广告挺多，就不放链接了。直接搜“MAC地址生成”可以找到。 2.挂载EFI分区 使用软件Clover Configurator，这个软件是必备的，相信装了黑苹果的各位都有。不再多说。 3.编辑SSDT-rmne.aml文件 需要用到软件MaciASL，下载地址：https://github.com/acidanthera/MaciASL/releases 4.替换原MAC地址 用MaciASL打开SSDT-rmne.aml文件，像普通的文本编辑那样修改即可，如图。 5.卸载EFI分区、重启 到软件Clover Configurator里卸载EFI分区。我曾经是不卸载直接重启的，但我发现这样子重启后进入Clover界面会很困难，所以我养成了先卸载EFI分区再重启的习惯。玄学。 7.测试 打开Apple Music，应该会提示需要授权，登录账号后就能正常使用了。
在最后 我开始折腾黑苹果是在去年11月份，而我参考的知乎的那篇解决问题的文章是去年7月份写的，也就是说在我遇到这个问题之前已经有人解决了，而我直到今年8月份才搜索到这个解决方法。虽然知乎那篇文章是中文的、发表在国内的平台上的，但我却是用Google找到的。最近我遇到的几个棘手问题都是用Google找到解决方案的。这不能不让我反思我的信息获取能力以及信息获取途径。
参考资料 [1] 解决黑苹果Apple Music资料库不能转移的问题 https://zhuanlan.zhihu.com/p/74910556
[2] “You cannot associate this computer with another Apple ID for 72 days” https://www.tonymacx86.com/threads/you-cannot-associate-this-computer-with-another-apple-id-for-72-days.200078/
[3] Apple Music not downloading song on my disk https://github.com/daliansky/XiaoMi-Pro-Hackintosh/issues/193</description></item><item><title>一个傅里叶级数展开式的图象</title><link>https://o5o.me/post/wp/fourier_series_expansion_graphic/</link><pubDate>Thu, 06 Aug 2020 19:30:07 +0800</pubDate><guid>https://o5o.me/post/wp/fourier_series_expansion_graphic/</guid><description>7月29日晚上画的。 图象： 怎么样，是不是很像。 Matlab代码：
clear clc x=-pi:0.01:pi; f=0; n=7; fx=zeros(n,length(x)); for i=1:n for j=1:length(x) f=(1/(2*i-1))*(sin((2*i-1)*x(j))); fx(i,j)=f; end end j=1; for i=[1,2,7] %plot(x,sum(fx(1:i,:),1),&amp;#39;DisplayName&amp;#39;,[&amp;#39;n=&amp;#39;,num2str(i)]); p(j)=plot(x,sum(fx(1:i,:),1)); hold on; j=j+1; end %legend(&amp;#39;n=1&amp;#39;,&amp;#39;n=2&amp;#39;,&amp;#39;n=3&amp;#39;,&amp;#39;n=4&amp;#39;,&amp;#39;n=5&amp;#39;,&amp;#39;n=6&amp;#39;,&amp;#39;n=7&amp;#39;) %legend(&amp;#39;n=1&amp;#39;,&amp;#39;n=2&amp;#39;,&amp;#39;n=7&amp;#39;) axis equal axis([-pi*1.2 pi*1.2 -pi*0.8 pi*0.8]) plot([-pi,0],[-pi/4,-pi/4],&amp;#39;m-o&amp;#39;,[0,pi],[pi/4,pi/4],&amp;#39;m-o&amp;#39;); plot([-pi 0 pi],[0 0 0],&amp;#39;ro&amp;#39;,&amp;#39;MarkerFaceColor&amp;#39;,&amp;#39;m&amp;#39;);%绘制实心圆点 plot([-pi,-pi],[0,-pi/4],&amp;#39;b--&amp;#39;,[pi,pi],[0,pi/4],&amp;#39;b--&amp;#39;); set(gca,&amp;#39;xaxislocation&amp;#39;,&amp;#39;origin&amp;#39;,&amp;#39;yaxislocation&amp;#39;,&amp;#39;origin&amp;#39;) %xy坐标轴在原点处相交 set(gca,&amp;#39;XTick&amp;#39;,[-pi pi],&amp;#39;XTickLabel&amp;#39;,{&amp;#39;-PI &amp;#39;,&amp;#39;PI&amp;#39;})%添加坐标注释 %set(gca,&amp;#39;YTick&amp;#39;,[-pi/4 pi/4],&amp;#39;YTickLabel&amp;#39;,{&amp;#39;-PI/4&amp;#39;,&amp;#39;PI/4&amp;#39;})%添加坐标注释 set(gca,&amp;#39;YTick&amp;#39;,pi/4,&amp;#39;YTickLabel&amp;#39;,{&amp;#39;PI/4&amp;#39;}) text(0,-pi/4,&amp;#39; -PI/4&amp;#39;)%添加坐标注释 text(pi/30+0.15,pi/4+0.2,&amp;#39;\leftarrow n=7&amp;#39;)%添加坐标注释 text(pi/30+0.75,pi/4+0.2,&amp;#39;\leftarrow n=2&amp;#39;)%添加坐标注释 text(pi/30+0.3,pi/8,&amp;#39;\leftarrow n=1&amp;#39;)%添加坐标注释 hold off; legend(p(:),{&amp;#39;n=1&amp;#39;,&amp;#39;n=2&amp;#39;,&amp;#39;n=7&amp;#39;})</description></item><item><title>综合除法原理及应用</title><link>https://o5o.me/post/wp/principle_and_application_of_integrated_division/</link><pubDate>Fri, 31 Jul 2020 16:36:34 +0800</pubDate><guid>https://o5o.me/post/wp/principle_and_application_of_integrated_division/</guid><description>今天看了看综合除法。
现在有这样一个问题： f(x)=2x^5-5x^3-8x， g(x)=x+3 问g(x)除f(x)的商式q(x)和余式r(x)是多少。 要怎么来算呢？你可能会按下面的格式来做除法： 这样一步步算下来，于是你知道了，哦，商式q(x)=2x^4-6x^3+13x^2-39x+109，余式r(x)=-327. 那我接下来又有一个问题要问你，我要让你把f(x)表成g(x)=x+3的方幂和，即表成： c_0+c_1(x+3)+c_2(x+3)^2+\cdots 的形式。 这时你要怎么办呢？还是按上面的方法一步步算吗，那可要算很久喽。 有没有什么简便的算法呢？我们先来观察f(x),g(x),q(x),r(x)这几个式子。 f(x),g(x),q(x),r(x)的次数分别是5、1、4、0，于是我们可以大胆猜测，对于所有这样的求一个1次多项式除一个n次多项式的商式和余式的问题，商式q(x)的次数总是比被除式f(x)的次数少1，而余式r(x)总是一个常数。（这里不再证明，到具体例子的时候验证。） 那这样一来，求“商式、余式”的问题就转化成了求“商式、余式的多项式系数”的问题，因为n次多项式是有标准形式的，我们知道了多项式的系数，就等于知道了这个多项式。比如，如果我们知道了上面q(x)的系数是2,-6,13,-39,109，那么就可以把q(x)写出来：q(x)=2x^4-6x^3+13x^2-39x+109。
接下来，为了方便寻找规律，我们看看这个求商式、余式的问题的一般形式： 设 f(x)=a_nx^n+a_{n_1}x^{n-1}+\cdots+a_1x+a_0, g(x)=x-c，c是一个常数。 g(x)除f(x)的商式设为 q(x)=b_{n-1}x^{n-1}+b_{n_2}x^{n-2}+\cdots+b_1x+b_0 余式或者说余数记为r。 之后我们对这个问题做除法： 我没有写完，但写到这儿就可以发现一些规律浮现了出来。 q(x)=a_nx^{n-1}+\left(a_{n-1}+ca_n\right)x^{n-2}+\left[a_{n-2}+c\left(a_{n-1}+ca_n\right)\right]x^{n-3}+\cdots, q(x)=b_{n-1}x^{n-1}+b_{n_2}x^{n-2}+\cdots+b_1x+b_0 对比之后可以得到： b_{n-1}=a_n, b_{n-2}=a_{n-1}+ca_n=a_{n-1}+cb_{n-1}, b_{n-3}=a_{n-2}+cb_{n-2}. 我们不妨按照这个规律继续写下去： b_{n-4}=a_{n-3}+cb_{n-3}, \cdots, b_1=a_2+cb_2, b_0=a_1+cb_1, r=a_0+cb_0. 即，商式的每一项的系数等于它的前一项的系数的c倍加上被除式中对应项的前一项的系数；余式等于商式最后一项的系数的c倍加上被除式最后一项的系数。 如果这种规律成立（确实成立，后面会验证），那么商式和余式的系数就可以经由被除式和除式的多项式系数计算得到，进而我们就可以得到商式和余式的表达式。
如何简便地应用这个规律呢？ 我们还是以最开始的那个问题为例， f(x)=2x^5-5x^3-8x， g(x)=x+3 问g(x)除f(x)的商式q(x)和余式r(x)是多少。 可以按照下面这种格式来做除法。 第一步 搭框架 因为我们把求商式和余式的问题转化为了多项式系数的加法和乘法问题，所以，我们不再需要写出完整的多项式，而只把各项系数写出来即可。 把f(x)写成标准形式：f(x)=2x^5+0x^4-5x^3+0x^2-8x+0 f(x)的首项系数a_n为2，其余各项系数为0, -5, 0, -8, 0. 另外，为了统一形式，我们把x+3写成x-(-3)。 第二步 计算商式首项系数b_{n-1} 由上面的规律，显然b_{n-1}=a_n，我们填上去。 第三步 计算商式第二项系数b_{n-2} 由b_{n-2}=a_{n-1}+ca_n=a_{n-1}+cb_{n-1}计算得到， cb_{n-1}=-3\times 2=-6, b_{n-2}=a_{n-1}+ca_n=a_{n-1}+cb_{n-1}=0+(-6)=-6 我们也填上去。 第四步 计算所有剩余的系数 照例，先算cb_{i-1}，填到横线上面的空白处，再上下两项相加得到b_i，填到横线下面的空白处，我们计算所有剩余的系数。 即商式各项系数分别为2, -6, 13, -39, 109.</description></item><item><title>折腾安卓功能机中国移动K1 4G M550</title><link>https://o5o.me/post/wp/android_phone_china_mobile_k1-4g_m550/</link><pubDate>Sat, 18 Jul 2020 16:36:42 +0800</pubDate><guid>https://o5o.me/post/wp/android_phone_china_mobile_k1-4g_m550/</guid><description>买它的原因无非是想降低手机对学习的干扰。 我是昨天收到的。收到之后感觉还行，除了打电话、发信息之外几乎什么都做不了（暂时），甚至连一个游戏都没有。
我学习时有开番茄钟的习惯，那肯定要在手机里装一个这样的APP。
安装APP K1只能在自带的应用商店里安装app，所以我们手动把app拷贝进去安装是不行的。 其实也挺简单，如果有个视频之类的理解起来会快很多，用文字来描述的话我感觉挺苍白的。我试一下： 总的思路：用你想安装的app的apk文件，替换你在应用商店里下载的app的apk文件。注意：替换操作一定要在你进入app安装界面后再进行（这句话是不是一头雾水、似懂非懂）。详述： 在手机自带应用商店里下载一个app，下载完成、进入安装界面后，按“挂机键”返回主页；在手机自带文件管理器里找到刚才在应用商店里下载的app对应的apk文件存放路径（Android——data——com….ppstore——cache——apk），记住它；在电脑上打开这个路径，进去后把这个apk文件拷贝出来；之后，在电脑上下载好你想安装的app的apk文件，把这个apk文件的文件名改成刚才拷贝出来的那个apk文件的文件名（之所以拷贝出来就是为了方便复制文件名）；把改好名的apk文件拷贝到手机上（比如放到Download文件夹里）；打开手机文件管理器，进入Download文件夹（或者你刚才放到的那个文件夹），找到你拷贝进去的apk文件，点“选项”——“选择多个”——上下选择，之后点“确定”选中这个apk文件——点“选项”——“复制”，这时窗口刷新，之后一步步进入那个在应用商店里下载的apk文件的存放路径，在那个apk文件上点“选项”——“粘贴”——弹出窗口问是“替换”还是“均保留”，选“替换”（默认）——点“确定”。之后还是点“挂机键”返回主页，点击手机应用商店的图标，这时你会发现，app安装界面上显示，即将安装的app就变成了你想安装的那个app。正常安装即可。成功。 经过多番比较，我最终还是选择了“番茄ToDo”。
丑陋的主界面 虽然app安装好了，但打开很麻烦，因为手机主界面是固定只显示那几个app，其他的app均被收到了一个叫“应用文件夹”的二级界面里，而且手机也没有后台（其实是有的，只是被隐藏了，但打开后也不能操作，因为没有适配按键），不能直接打开正在运行的app。 那能不能安装第三方桌面呢？我听网上说不可以，其实可以，但很不好用，比如那个“极简桌面”，没有适配按键，只能用“鼠标手”操作，连翻页都做不到。 那怎么办呢，总得想个办法吧。我反正忍不了。 这时我看中了“通知栏”，如果能把常用的应用放在这里，那就方便很多了。 由此引发了第一次危机（其实就这一次）。
手机“变砖”自救 我安装了一个叫“快启动”的app。这个app其实并没有满足我上面的设想，而是可以在点击通知栏中的图标后打开一个悬浮窗。这个悬浮窗是可以扩展到整个窗口的，甚至，可以把这个app当成桌面来用。 这个app我摸索了好一阵，还把它设为了桌面。感觉如果把它当成桌面来用比原来的桌面要好太多了。但美中不足的是它还是要用“鼠标手”来操作。 我想，如果能直接用按键就好了，要不要试一下？我这样想，但也没多想，就当做实验了。然后我就到手机“鼠标手”设置里把这个app前的勾给去掉了?。 我返回桌面，突然意识到要坏事儿。按键用不了（肯定的）、手机屏幕不能触控，那不就是说我现在丧失了对手机的控制权?。手机变成了一块“板砖”?。 陷入了一个死循环。我想用按键操作手机，那么我就要先用按键操作手机去设置里把这个app的“鼠标手”加回来，或者把这个app卸载掉（即便能进到设置里我也卸载不掉，因为这时卸载按钮是灰的）。 只能请外援了，用adb工具吧。 其实也是经历了一些波折。我用adb工具要怎样救呢，一开始我想的也是直接把这个app卸载掉，发现卸载不掉；停用试试？应用确实被停止运行了，但因为我把它设为了桌面，停止运行后它又会重新运行；后来，我才想到要去设置里把鼠标手给它加回来。那我要怎样打开“设置”呢？“设置”对应的包名是什么呢？这又是一个故事了。不多讲，下面直接写正确答案。
C:\Users\Aoyu&amp;gt;cd &amp;#34;C:\Users\Aoyu\Desktop\ADB&amp;#34; C:\Users\Aoyu\Desktop\ADB&amp;gt;adb devices List of devices attached * daemon not running; starting now at tcp:5037 * daemon started successfully DLF100K1XXX829O02222 device C:\Users\Aoyu\Desktop\ADB&amp;gt;adb shell am start com.android.settings/com.android.settings.Settings Starting: Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] cmp=com.android.settings/.Settings } 成功打开了“设置”页面，之后到“鼠标手控制”里面给这个app打上勾，返回“主页”，用“鼠标手”选中手机自带的桌面的app图标，打开原来的桌面。算是把这块“假板砖”给救回来了。
通知栏启动app 继续我的设想：想办法把常用app固定到通知栏上。 我在尝试了一些app后，想到可以用Tasker来做。一番尝试，太难了，放弃。 我接着又尝试了很多app，但无一例外，虽然确实实现了把app的图标固定到通知栏上，但我用按键选中后点击没反应、打不开。原因我也有一些猜测，但我在这方面实在是小白，就不说了。 以前我对某些app霸占通知栏的行为感到深恶痛绝，但现在我反倒渴望这样的app再流氓一点?。 最后，我找到了一个至少可以追溯到2011年的app——BarControl，虽然有点丑，但成功完成了我的设想（怎么有点像《万万没想到》里的王大锤?）。 现在我的这部移动k1手机的通知栏是这样的： 真的是太丑了。但好在能用。 我现在如果想开启app，只需要长按MENU键，然后从通知栏里选就可以了，十分方便。至少比以前方便多了。
让应用开机自启 我又一次颠覆了我的认知。没想到我也有巴不得应用开机自启的时候。 我上面最后找到的那个app虽然满足要求，但它不能开机自启，每次我重启手机，都要手动开启一次，这样在通知栏里才会显示那些我添加的app。 怎么让它开机自启呢？手机设置里没有修改应用权限的地方；我安装了一个管理开机启动项的app也是毫无卵用；我用adb工具给这个app添加开机自启的权限，也失败了。所以截至现在我没能让这个app开机自启。 好在影响不大，我不能把时间接着花在这上面了。</description></item><item><title>R语言实现将电子书转换为Anki卡片——以《十天搞定考研词汇》为例</title><link>https://o5o.me/post/wp/r_lang_make_anki_cards_with_ebook/</link><pubDate>Fri, 10 Jul 2020 16:54:28 +0800</pubDate><guid>https://o5o.me/post/wp/r_lang_make_anki_cards_with_ebook/</guid><description>昨天是我背《十天搞定考研词汇》这本书的第十天。过去的十天里我每天都花大量的时间在单词上，虽然并没有像书名所说的“搞定”考研词汇，但也确实收获颇丰。十天过去了，往后我要怎么复习单词呢？我想到了Anki。
以前我也尝试过Anki许多次，但说真的Anki并没有给我带来任何帮助。我认为原因有以下几个：1.制作卡片太浪费时间；2.用别人的卡片不合心意；3.背卡片总感觉不踏实，看不到希望、没有成就感。 这一次应该会好很多。
为什么用R语言 前几天我才开始学R语言[1]，因为写双学位毕业论文可能要用它来处理数据。我其实更倾向于用Matlab，因为帮助文档很完善、例子也很多，用着也顺手，但用R可能会显得更“专业”一点?。我想正好这个问题用R也能处理，那就用R语言吧。但毕竟我对R语言的特性还不很了解，如果代码有可改进之处，欢迎友好指出。
关于epub/azw3电子书 这两种格式的电子书文件，不专业地说，你可以把它们看成zip、rar之类的压缩包（把.epub后缀改成.zip可以直接打开），压缩包里面是一些html格式的网页，书的内容就在这些网页文件里面。既然是网页，那如果你想获取里面的内容的话，是不是可以用“网络爬虫”来抓取呢？
大致思路 因此，通过epub/azw3格式的电子书制作卡片可以大致分成如下几个步骤：1.把电子书文件解压开，获取里面的html文件；2.用爬虫爬取里面需要的信息，并将信息整理汇总成一个“表格”（csv文件）；3.将csv文件导入Anki；4.修理bug、调整细节、美化卡片。
开始 下面以《十天搞定考研词汇》这本书为例。这是一个完整的例子，我写这篇文章的时候也已经制作完成了，因此我想这篇文章对R语言初学者、有相同需求的人来说都是很有借鉴意义的。 接下来将《十天搞定考研词汇》简称为《十天》。
观察这本书 可以看到，这本书一共有20个单词列表，从list1到list20，背单词的任务分成了10天，每天背两个列表，因此，具体到这本书，我们的任务是：1.将电子书文件中的所有单词都导入到anki中；2.在anki中创建一个总记忆库、再创建20个子记忆库，每个子记忆库保存一个列表的单词；3.单词卡片正面是单词，背面是单词的音标、释义和扩展；4.需要把书中高亮的单词也给标注出来。
步骤1：获取html网页文件、观察结构 凭空变出《十天》的epub或azw3格式的电子书文件。我这里用的是azw3格式的。导入Calibre中，在这本书上点鼠标右键选“Edit book”，在打开的页面中可观察到，每一个列表的单词被单独存放在一个html文件中，选择需要的html文件导出。 观察导出的html文件。这里选取一部分：
### List 1 intellect [ˈɪntəlekt] n. 智力；理解力；[总称] 知识分子 派intellectual [ˌɪntəˈlektʃuəl] adj. 智力的；理智的；聪明的 考点搭配intellectual enquiry 知识探索，知识探求 intellectual achievement 知识成就，智力成果 intellectualize [ˌɪntəˈlektʃuəlaɪz] vt. 使…理智化；对…做理性探讨 contempt [kənˈtempt] n. 轻视，轻蔑 派 contemptible [kənˈtemptəbl] adj. 可鄙的；可轻视的 contemptuous [kənˈtemptʃuəs] adj. 轻视的，蔑视的 ultimate [ˈʌltɪmət] adj. 最后的，最终的 yield [jiːld] n. 产量，收获量；收益 v. 出产；屈服 contend [kənˈtend] vi. 竞争，争夺 vt. 坚决主张，声称 如上所示，每一个词条均被包括在一个p标签中，“主单词”的p标签的class属性值为bodytext，“单词扩展”的class属性为content-yinyong。至于p标签内部，可以看到需要修改css样式的部分都被包括在不同的span标签中，也都有不同的class属性，据此我们可以对它们应用css样式，这放到后面anki卡片样式美化那里再说。 因此我们需要做的有： 1.</description></item><item><title>安装用友U8软件</title><link>https://o5o.me/post/wp/install_yongyou_u8_software/</link><pubDate>Fri, 06 Mar 2020 23:24:52 +0800</pubDate><guid>https://o5o.me/post/wp/install_yongyou_u8_software/</guid><description>我辅修的财务管理专业这学期开了“会计信息系统实务”课，需要用到“用友U8”软件。因为疫情，学校推迟开学，不能在学校机房上机练习，因此有必要在自己电脑上安装一个这个软件。
用友U8要想成功安装/运行需要以很多其他支撑软件为前提，真的很多，而且我感觉用友U8这个软件的兼容性不太好。所以为了避免把我的电脑弄乱、出现未知错误，我是在虚拟机里安装的。同时，因为我只是为了学习软件的使用，而不是将其作为生产力工具，所以我的安装原则是：不追求稳定，能用就行，怎么方便怎么来。 老师提供了用友的安装包和其他各种软件、补丁的安装包，让我节省了很多时间。
安装过程 1.安装虚拟机VMware Workstation。没什么好说的。 2.安装Win7。我安装的是Win7 SP1旗舰版，从msdn itell you下载的。没激活。 3.将安装包拷贝到虚拟机中。没什么好说的。 4.安装基础环境组件。打开用友U8安装程序，看缺少哪些软件，都安装上。 老师给的软件挺全，但是没有IIS和数据库软件安装包。一番搜索之后我才知道，IIS要到系统功能中启用。本着能用就行的原则，数据库软件我选择了适用于用友U8的“microsoft sql server 2008 r2”一键安装包。 5.进行完上面的操作后，不出意外软件就能安装成功了。放两张我安装时的图片。 安装之后 说实话，我是上个周六安装的，后面我做了什么差不多都忘了?。还好浏览器书签里有当时添加的链接。 我先写几条建议：
1.一定要看安装包里的说明文档（如果有的话）。因为我没用过微软的数据库，加上我用的数据库软件可能是精简过的，当时很疑惑要到哪里新建数据库，后来才发现安装包给的说明里已经写好了默认的数据库名称和密码。
2.出现问题，不妨重启电脑试试。我好像是遇到了数据库断开连接的问题（具体错误记不清了），我忘了重启之后好没好，反正过了一会儿等我理顺用友U8的使用逻辑之后这个问题就再没出现过了。 我遇到的问题中，印象最深的有两个： 1.用admin账号登录，提示我“系统管理员不能进行业务处理”。这时，新建一个“普通用户”，再用普通用户登录就好了。 2.提示“请选择数据源”。这时是要新建一个“数据源”，也就是把用友软件和数据库连接起来。具体操作看文章最后我给的参考资料链接吧。
文章最后 就是这样了，我单纯地只是想把整个过程记录下来而已，毕竟这整个过程那天我花了3个小时的时间。 参考资料：
[1] 登录用友U8时提示请选择数据源？ https://www.ufidawhy.com/jcufida/773.html</description></item><item><title>取消报考3月期货从业资格考试</title><link>https://o5o.me/post/wp/march_cfa_china_examination_cancel/</link><pubDate>Sat, 29 Feb 2020 11:05:41 +0800</pubDate><guid>https://o5o.me/post/wp/march_cfa_china_examination_cancel/</guid><description>昨天晚上躺在床上，经过一天的学习疲惫不堪，朦胧间，感觉自己活得好累。这时突然有了一个大胆的想法——要不，期货从业资格考试先不考了？
本打算去年暑假的时候报名的，但是因为数学建模竞赛的缘故，实在没有精力。这样一拖，就拖到了寒假，又要开始准备考研了。 我也没有什么现实的需求必须要去通过期货资格，更多的可能只是个人的一种执念。我之前已经通过了证券和基金从业资格，没怎么备考，就那样稀里糊涂地通过了，感觉我对于金融市场的整个的了解依然是处于一种很模糊的状态。去评价政府的一些经济政策的时候，总感觉不能很好地表达自己的想法，这让我怀疑我以前花掉的考试报名费是不是浪费。所以我也是想通过期货考试重拾信心。另外，也是想集齐证券、基金和期货这三个从业资格。 谁没做过“出任CEO、迎娶白富美，走向人生巅峰”的梦呢。真的很好奇，要怎样才能通过衍生品的组合，无论价格上涨还是下跌，都能“锁定利润”、实现“稳赚不赔”。 如果现在去考的话，我想我是能通过的。《期货及衍生品基础》那本书写的很好，我看了不止一遍。不过，确实没必要继续把精力花在这上面了。由于这次疫情，考试很可能被推迟到4月。还是要把更多的时间用在考研科目上。 应该说，我想要从期货从业考试中得到的东西差不多都得到了，除了最后的成绩合格证书。我想，对我来说，更大的意义在于，我看到了真正聪明的人应该是什么样子。第一个开展远期交易的人是怎样出现这样的天才想法的呢？江畔何人初见月？江月何年初照人？</description></item><item><title>如何理解期货合约持仓量的变化</title><link>https://o5o.me/post/wp/the_change_of_the_holdings_for_futures_contracts/</link><pubDate>Wed, 26 Feb 2020 12:39:54 +0800</pubDate><guid>https://o5o.me/post/wp/the_change_of_the_holdings_for_futures_contracts/</guid><description>在备考期货从业资格考试。期货交易成交后的持仓量是怎样的，我不太熟悉，有必要捋一捋。
持仓量是指期货交易者所持有的未平仓合约的累计数量。国内三家商品期货交易所（上期、郑商、大商）的成交量和持仓量数据按双边计算，中国金融期货交易所的成交量和持仓量数据按单边计算。 期货交易的每次成交，都必定有两方参与，一方是卖方、另一方是买方，两者成交的合约数量必定是相同的（比如卖方卖出10手白糖，买方必定是买入10手白糖）。 对于一次期货交易的买方来说，他参与此次交易的目的不外乎：1.他现在没有持有这个品种的合约，他要买入开仓（多头开仓）；2.他是这个品种合约的空头（他之前卖出过这个品种的合约），他要平仓（空头平仓）；3.他要增加持仓多头头寸；4.他要减少持仓空头头寸。 对于一次期货交易的卖方来说，他参与此次交易的目的不外乎：1.他现在没有持有这个品种的合约，他要卖出开仓（空头开仓）；2.他是这个品种合约的多头（他之前买入过这个品种的合约），他要平仓（多头平仓）；3.他要增加持仓空头头寸；4.他要减少持仓多头头寸。 只考虑买方和卖方开仓和平仓的情形，其他情形与这两种情形类似。也就是说，对于买方和卖方来说，他们参与期货交易的行为均有2种，组合起来，一次期货交易可能的情况有四种：1.买方多头开仓，卖方空头开仓；2.买方多头开仓，卖方多头平仓；3.买方空头平仓，卖方空头开仓；4.买方空头平仓，卖方多头平仓。
假如现在白糖某一月份合约（设为A）的总持仓量为200手（双边计算），即多头头寸100手、空头头寸100手。
情形1 有一个人觉得A要涨，于是买入1手A开仓（买方，多头开仓）；他这1手A是从哪儿买的呢？是从另一个人手里买的，另外这一个人觉得A要跌，于是他卖出1手A开仓（卖方，空头开仓）。交易成交，A的多头头寸增加1手（101手）、空头头寸增加1手（101手），总的持仓量增加2手，变为202手。因此： 双开仓，持仓量增加。
情形2 有一个人觉得A要涨，于是买入1手A开仓（买方，多头开仓）；他这1手A是从哪儿买的呢？是从另一个人手里买的，另外这一个人觉得现在A的价格已经足够高了，所以他决定把手里持有的仅有的1手A的多头头寸平仓（卖方，多头平仓）。交易成交，A的多头头寸同时增加1手和减少1手（100+1-1=100），所以A的多头头寸不变（100手），总的持仓量也不变。因此： 买方多头开仓，卖方多头平仓，持仓量不变。 这种情形也被称为“多头换手”，即多头头寸从一个人的手里转移到了另一个人的手里，只是换了换主人，数量没有改变。
情形3 有一个人觉得A已经跌到底了（此前A一直在跌），所以他决定把手里持有的仅有的1手A的空头头寸平仓（买方，空头平仓），要平仓的话，需要买入1手A合约，那么从哪儿买呢？是从另一个人手里买的，另外这个人觉得A未来肯定要跌（不管之前是跌还是涨），所以他决定卖出1手A开仓（卖方，卖出开仓）。交易成交，A的空头头寸同时减少1手和增加1手（100+1-1=100），所以A的空头头寸不变（100手），总的持仓量也不变。因此： 买方空头平仓，卖方空头开仓，持仓量不变。 这种情形也被称为“空头换手”，即空头头寸从一个人的手里转移到了另一个人的手里，只是换了换主人，数量没有改变。
情形4 有一个人觉得A已经跌到底了（此前A一直在跌），所以他决定把手里持有的仅有的1手A的空头头寸平仓（买方，空头平仓），要平仓的话，需要买入1手A合约，那么从哪儿买呢？是从另一个人手里买的，另外这个人觉得A未来还要继续跌，所以他决定把手里持有的仅有的1手A的多头头寸平仓（卖方，多头平仓）。交易成交，A的空头头寸减少1手（100-1=99），多头头寸减少1手（100-1=99），总的持仓量减少2手，为198手。因此： 双平仓，持仓量减少。
综上，引用教材中的话：
交易行为与持仓量
第一，只有当新的买入者和卖出者同时入市时，持仓量增加。
第二，当买卖双方有一方做平仓交易时（即换手），持仓量不变。
第三，当买卖双方均为原交易者，双方均为平仓时，持仓量减少。
如果买卖（多空）双方均建立了新头寸，则持仓量增加。如果双方均是平仓了结原有头寸，则持仓量增加。如果一方开立新的交易头寸，而另一方平仓了结原有交易头寸，也就是换手，则持仓量不变，这包括多头换手和空头换手两种情况。
买方 卖方 持仓量的变化 1 多头开仓 空头开仓 增加（双开仓） 2 多头开仓 多头平仓 不变（多头换手） 3 空头平仓 空头开仓 不变（空头换手） 4 空头平仓 多头平仓 减少（双平仓） 参考资料：期货及衍生品基础（第二版） 在最后必须要说的是，我没有参与过期货交易（包括模拟交易），一些术语用得可能不准确。到现在我感觉对于“多头、空头、头寸”这几个名词，我还是处于一种模糊的状态，知道背后的含义，但你要具体让我说它们是什么，很模糊。</description></item><item><title>新年第一个证明，舒服。</title><link>https://o5o.me/post/wp/new-year-2020/</link><pubDate>Wed, 01 Jan 2020 17:41:17 +0800</pubDate><guid>https://o5o.me/post/wp/new-year-2020/</guid><description>受不了“可见”这俩字。逻辑通顺的感觉，舒服。 高等代数 p13</description></item><item><title>导出EPUB格式的O’Reilly图书及解决导出章节不完整问题</title><link>https://o5o.me/post/wp/down-epub-oreilly/</link><pubDate>Thu, 26 Dec 2019 18:29:05 +0800</pubDate><guid>https://o5o.me/post/wp/down-epub-oreilly/</guid><description>买了一个ACM会员，可以访问O’Reilly的在线图书资源。我比较喜欢看head first系列的书。由于国内访问速度不佳，体验不是很好。再加上个人的占有欲，我打算把O’Reilly的书下载到本地看。
Github有一个库safaribooks，恰好满足我的需求。但是我用ACM账号登录时的登录方式为单点登录(SingleSignOn，SSO)，不是直接用的oreilly的账号，所以为了让程序能正常运行，需要首先获取oreilly网站的cookie。下面我完整叙述整个流程。 安装safaribooks
$ git clone https://github.com/lorenzodifuccia/safaribooks.git $ cd safaribooks/ $ pip3 install -r requirements.txt 获取cookie 在浏览器中正常登录oreilly learning，按F12，打开控制台（console），输入如下代码获取cookies：
javascript:(function(){var output = {};document.cookie.split(/\s*;\s*/).forEach(function(pair) {pair = pair.split(/\s*=\s*/);output[pair[0]]=pair.splice(1).join(&amp;#39;=&amp;#39;);});console.log(JSON.stringify(output));})(); 把屏幕上输出的内容复制到文件中，文件名设为cookies.json，将文件放置到safaribooks.py所在文件夹中（即safaribooks/）。 按理说这时直接在终端输入以下命令就能把对应图书导出来了（后面那串数字是图书对应id，可以在浏览器中打开图书页面，从url链接中看到）：
python3 safaribooks.py 9781491919521 但是我却收到了一个错误。
[#] Authentication issue: unable to access profile page. [!] Aborting... 我在该项目的Issues中寻找到的解决方案如下：
# 修改safaribooks.py文件， # 修改这句代码：PROFILE_URL = SAFARI_BASE_URL + &amp;#34;/profile/&amp;#34; # 修改为： PROFILE_URL = SAFARI_BASE_URL + &amp;#34;/home/?next=%2Fprofile%2F&amp;#34; 再次运行命令，然后我就成功导出了格式为epub的图书文件。终端显示的内容如下：
aoyu@Guanghaos-MacBook-Pro safaribooks % python3 safaribooks.py 9781491919521 ____ ___ _ / __/__ _/ _/__ _____(_) _\ \/ _ `/ _/ _ `/ __/ / /___/\_,_/_/ \_,_/_/ /_/ / _ )___ ___ / /__ ___ / _ / _ \/ _ \/ &amp;#39;_/(_-&amp;lt; /____/\___/\___/_/\_\/___/ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [-] Successfully authenticated.</description></item><item><title>工信部备案域名注销</title><link>https://o5o.me/post/wp/cancel-domain-name-beian/</link><pubDate>Sat, 30 Nov 2019 19:36:50 +0800</pubDate><guid>https://o5o.me/post/wp/cancel-domain-name-beian/</guid><description>昨天注销了我的一个.cn域名的备案号。经常看到域名备案相关的文章，备案域名注销的文章倒是不常见。 域名备案要好多天，而注销备案号则只用了半个小时不到的时间。
我的域名是在阿里云备案的，点一下备案系统页面上的“注销网站”按钮，输入备案密码和手机短信验证码，不一会儿就发来短信提醒我网站已被注销，备案号已被收回。
【工信部备案系统】工业和信息化部网站备案系统-短信通知：尊敬的用户***，您备案信息中的网站数学本已被注销，该网站的备案号豫ICP备17049473号-2已被收回，特此通知！</description></item><item><title>Surface Pro 4 安装黑苹果macOS Catalina 10.15.1</title><link>https://o5o.me/post/wp/surface-pro-4-install-hackintosh-macos-catalina-10-15-1/</link><pubDate>Sun, 10 Nov 2019 16:53:35 +0800</pubDate><guid>https://o5o.me/post/wp/surface-pro-4-install-hackintosh-macos-catalina-10-15-1/</guid><description>因为各种原因吧，给我的Surface Pro4 装了一个黑苹果。蛮简单的，一次成功。我尤其喜欢这种“前人栽树，后人乘凉”的事情。
我之前没装过macOS，连虚拟机里也没装过，这是第一次。从我打算安装macOS那天，我看了很多帖子和文章，心里有底之后才下手的。很多文章虽然写的很详细，但要点没写清楚，仅仅是过程的罗列，不具有普适性。 安装黑苹果，大致上就是以下几步（用别人做好的包）：
下载带Clover的镜像，校验MD5码 将镜像写入U盘，根据需要，替换U盘EFI分区clover 硬盘分区（确保BitLocker是关闭的） 关闭安全启动SecureBoot（Surface开机会出现红色锁） 让电脑从U盘启动（设置启动项顺序） 安装macOS 安装成功，将clover添加到硬盘EFI分区 添加clover到启动项 重建缓存 这个过程只要谨慎，就没什么难的。难点在于解决安装macOS过程中的错误。而众多网友已经帮我把这个难点解决了。 我刚开始迷迷糊糊的，下载了一个原版镜像。我去网上找将镜像写入U盘的教程，教程告诉我要在macOS系统下制作U盘镜像（问号脸，我有了mac还装黑苹果？）。当然这是有原因的，因为别人制作好的“懒人包”用起来毕竟没自己做的放心。我想，如果我真的这样来做，那么我肯定是要在虚拟机里安装macOS，我还是要另外下载一个别人做好的包，还不如直接就用别人做好的包来装。 CLOVER是什么呢？启动器，可以简单理解为，你装好系统后，选择进入win系统还是macos系统的那个界面，并且呢，可以通过它来加载系统驱动。 我下载的是黑果小兵制作的镜像。用etcher将镜像写入U盘，成功后，U盘被分为两个区，其中一个是U盘的EFI分区。因为我下载的镜像是带clover的，所以此时U盘EFI分区里是有一个clover文件夹的，但因为这个clover不适合我的电脑，所以要把它替换掉，换上适合我的电脑的clover（有别人做好的）。替换CLOVER文件夹我用的软件是DiskGenius。 我看到有一篇文章，讲的是Surface Pro6安装macos，文章中有一部分是直接用u盘的EFI分区直接替换硬盘的EFI分区，这就是我前面讲的“教程不具有普适性”，虽然跟他电脑型号相同、所用镜像相同的人这样做能成功安装，但其他人呢，很可能就进不去系统了。 我的Surface Pro4的硬盘是256G的，比较小，只有一个C盘。为了安装黑苹果，需要从c盘中分出一部分硬盘空间。我的硬盘快满了，所以在安装之前整理了一下自己的文件，把比较占空间的文件打包上传到了onedrive。整理的差不多之后，我用win自带的“磁盘管理”程序在c盘分区上“压缩卷”，但可压缩的空间很少。原因是：硬盘中储存的文件不连续，虽然我删掉了一部分文件把空间空了出来，但这些空闲空间不是连续的，不能“连成一片”，所以就压缩不了那么大了。 后来，我转移或者删除了好多文件，但还是不能压缩出来我想要的空间大小。此时，电脑里也没剩什么了，我干脆将电脑恢复了出厂状态。最终，我从c盘分出80G用来黑苹果。 而后便正式进入了安装过程。关掉安全启动、从u盘启动（将u盘放在启动顺序的第一位），这两个操作在surface上很简单明了，按着“音量+”再点一下电源键，电源键点一下之后就松开，继续按着“音量+”直到进入新界面。这两项很容易做。 上面两步完成后退出，电脑重启就会进入clover的界面了。在安装macos时，我所用的这个clover，需要用的配置文件是“config sp4-install.plist”，其他人可能会不同。 一步步安装macOS的过程我就不写了，这篇文章的目的不是这个。我在安装过程中一个错误也没遇到，非常非常顺利。 安装完成之后呢，macOS系统已经在硬盘上了，这时我们在硬盘的EFI分区添加clover，并把clover放在启动项的第一位，这样一来，开机后首先进入的就是clover的界面，这时我们便可选择进入win系统还是macos系统。这里我用到的软件是DiskGenius和EasyUEFI，我是在win下操作的。 之后呢，我依然选择加载“config sp4-install.plist”配置文件，进入macOS，用Kext Utility重建缓存。这个软件是我另外单独下载的。 重启电脑，进入macOS系统（默认加载“config.plist”配置文件），我遇到的问题是，进度条走到一多半电脑就重启了。原因是，我所用的clover是适配macos 10.15的，而我安装的是10.15.1，需要在mac下修改“config.plist”文件中“matchos”的值，将10.15改为10.15.1，这样我便成功进入系统了，且屏幕分辨率正常（用config sp4-install.plist进入系统，字体特别小）。作者可能是觉得这不算什么问题所以就没有修改。如果在win下修改文件，可能是因为编码原因，我重启电脑后进不去clover界面（解决方法是按音量+和电源键进入恢复界面，把win的启动项放在第一位，即可进入win）。 成功进入macos系统后，因为网卡问题没解决，不能上网。这个问题是已知的，我已经提前买好了有线网卡。但因为没装驱动的原因，不能上网。我想，先临时用手机共享网络给电脑上网体验一下吧，但发现也不能上网，不清楚原因。而后，我下载了网卡驱动，才成功连上了网。 之后呢，我登陆我的账号，发现不能用iTunes Match和iCloud这些服务。而后我才了解到还有一个过程是“洗白”，也就是让apple认为这台黑苹果是一个mac，我没看到好的教程，尝试着做了一下之后，跟前面一样也进不去clover界面了，所以就暂时没做。 如果是像之前的我一样的小白，单纯只看这篇文章是肯定不能装macos的，这篇文章的目的只是理顺我的一些思路、简单记录过程，以后可能会不断修改。 一开始我是打算在淘宝上找人装的，但价格超过了我的心理价位。用请人装macOS的钱，再另外加一部分，我得到的是： 一块32G的USB3.1的U盘 一根15米长的六类网线 一个千兆有线网卡+usb接口一分三分线器 一个pcbeta论坛共享账号 参考资料：
github仓库 https://github.com/bigsadan/surface-pro-4-hackintosh 文章 Surface Pro 6超详细教程之安装windows10和黑苹果macOS 10.14双系统 http://www.macoshome.com/hackintosh/hcourse/1334.html 文章 黑苹果 Clover 四叶草 u盘安装后如何改为硬盘EFI引导 https://imac.hk/clover-usb-install-add-boot-menu.html 帖子 surface Pro 4 更新10.15.1 全网最完美SP4黑苹果 (surface book 1适用) http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;amp;tid=1806282&amp;amp;highlight=surface 帖子 黑苹果系列教程之——CLOVER 配置教程 https://bbs.</description></item><item><title>趣事一则 stellio音乐播放器</title><link>https://o5o.me/post/wp/something-stellio-google-play/</link><pubDate>Tue, 05 Nov 2019 21:43:48 +0800</pubDate><guid>https://o5o.me/post/wp/something-stellio-google-play/</guid><description>曾经英语老师讲过这样一个笑话：“一个学生写英语作文，作文内容是和外国朋友打电话。他在开头这样写：’I have a good friend. He likes to speak Chinese with me.’然后作文后面的内容全程用中文来写。”我最近也做了一件类似的事?。
我曾经在Play商店买过一个音乐APP，名字是Stellio，当时也是一时冲动，买后才发现并不喜欢。那时是2016年，我这几年完全忘了这回事。不久前，想找一个合适的音乐播放器听歌，隐约想到我曾经买过一个漂亮的播放器，但我并没有在我的Play商店购买记录中找到。我很确信我买了这么一件东西，但我忘了我是通过何种方式买的。我翻了我的Paypal、支付宝，都没找到相关购买记录。 我去这个APP的网站上看帮助文档，发现开发者之前在谷歌商店的账号被封了。我购买的时候，这个APP是通过额外安装一个名为Stellio Unlocker的APP激活的，现在改成了输入激活码激活。开发者给出的解决方案是，安装他们网站上提供的Stellio Unlocker试一试，如果不行，和他们邮件联系。 我最终在邮箱中找到了曾经的购买记录邮件。我原来用的是网易企业邮箱，现在改成了阿里邮箱。物是人非。 我这样写： Hi, I met some problems, please help me. My English is poor. I ues Chinese to describe my problem. 你好，我在2016年7月29日在Google Play购买了Stellio Unloker，但是这几年我忘记了这件事情，直到今天，我发现我无法通过安装Unlocker的方式激活Stellio，请帮助我解决这个问题。 然后我附上了当时的订单号和邮件截图。 今天对方给我回信并送上了激活码。 我试了试，发现还是不喜欢。</description></item><item><title>迁移WordPress</title><link>https://o5o.me/post/cotart/migrate_wordpress/</link><pubDate>Sat, 31 Aug 2019 15:53:43 +0800</pubDate><guid>https://o5o.me/post/cotart/migrate_wordpress/</guid><description>侠客是放在阿里云的轻量应用服务器上的，我直接用的LAMP镜像。这几天感觉博客访问越来越慢，并且WP的后台提示我该升级PHP版本了。侠客的PHP版本还是5.x，确实要升级一下。升级php不知道又会遇到什么问题，还是换台服务器比较好。 这台服务器是在阿里云的北京机房，系统是ubuntu18.04。 首先更新系统。
apt-get update apt-get upgrade apt-get dist-upgrade 安装php
apt-get install php php -v（查看版本） 安装php自动把apache也安装了，很奇怪。 安装Mysql
apt-get install mysql-server （中间会让输入root密码） apt-get install mysql-client #查看是否安装成功 mysql -u root -p #回车，输入密码，也可能不需要输密码 select version(); exit; #退出mysql环境 打印phpinfo，查看php信息，如php.ini路径
#新建php文件并写入下述语句，通过浏览器访问文件 php echo phpinfo(); ? 浏览器访问服务器ip，可看到apache默认页面内容，页面上会显示出网页文件的根目录、配置文件路径等内容。
# It works! This is the default welcome page used to test the correct operation of the Apache2 server after installation on Ubuntu systems. It is based on the equivalent page on Debian, from which the Ubuntu Apache packaging is derived.</description></item><item><title>WordPress内容登录后查看</title><link>https://o5o.me/post/cotart/wordpress_view_content_after_login/</link><pubDate>Wed, 07 Aug 2019 00:05:58 +0800</pubDate><guid>https://o5o.me/post/cotart/wordpress_view_content_after_login/</guid><description>在当前主题的function.php文件中添加：
function liveme_if_login() { if(!is_user_logged_in()){ auth_redirect(); } } 在主题的header.php文件顶部添加：
php liveme_if_login();? 这样，访问WordPress网站时，如果未登录会自动跳转到登录页，登录后可正常浏览。</description></item><item><title>LNMP网站环境搭建</title><link>https://o5o.me/post/cotart/ubuntu_nginx_php_fastcgi_mysql_phpmyadmin_struct_website/</link><pubDate>Mon, 29 Jul 2019 14:58:11 +0800</pubDate><guid>https://o5o.me/post/cotart/ubuntu_nginx_php_fastcgi_mysql_phpmyadmin_struct_website/</guid><description>几天前收到阿里云发来的短信和邮件，提醒我shuxueben.cn网站未指向阿里云服务器，如果3天内不修正就要删除我的网站备案接入信息。 我又去阿里云买了一个“轻量应用服务器”，环境选择了Ubuntu。
所有的命令我都是以root身份执行的。 首先更新系统[1]
apt-get update apt-get upgrade apt-get dist-upgrade 安装Nginx
apt-get install nginx 查看是否安装成功
nginx -v 这时候，访问服务器ip地址或指向该ip地址的域名，就可以看到一个Nginx的欢迎信息。 安装Mysql
apt-get install mysql-server （中间会让输入root密码） apt-get install mysql-client 查看是否安装成功
mysql -u root -p 回车，输入密码 select version(); exit; #退出mysql环境 安装php
apt-get install php php -v（查看版本） 安装FastCgi
apt-get install spawn-fcgi 修改Nginx站点配置文件
cd /etc/nginx/sites-available/ cp default default.backup vim default 添加index.php
# Add index.php to the list if you are using PHP index index.html index.htm index.nginx-debian.html index.</description></item><item><title>迷宫自动寻路问题求解</title><link>https://o5o.me/post/wp/maze-automatic-path-finding/</link><pubDate>Sun, 28 Jul 2019 13:27:24 +0800</pubDate><guid>https://o5o.me/post/wp/maze-automatic-path-finding/</guid><description>迷宫寻路是一个很有趣的问题，这篇文章是对我思考过程的重述。完整流程图和代码请直接翻到文章最后。我的算法比较简单，在我的印象中，“算法”都是那种很“高大上”的东西，不敢相信我写出来的东西也能被叫做算法。所以我在标题里用了“问题”两个字?。有时间了真得系统地学学算法。
问题：已知一迷宫图，B,E两点分别为起始点及终止点，图中红色线为不可穿越路径，蓝色线为可穿越路径。某人从B点出发，当到达某一位置时，其周围的路径通行情况才被探索，未到达的位置，其周围路径该人无法得到。 求：从B点到E点的一条路径 Matlab Ctrl+R 多行注释；Ctrl+T 取消多行注释。 axis on/off 坐标区线条和背景的可见性，指定为 on 或 off。 maze是最常见的一个表示“迷宫”的词。labyrinth是专指古希腊Crete（克里特）岛上的迷宫，由Crete国王，Zeus与Europe之子，Minos建造，里面关着Minos之妻与Poseidon的牛的后代——Minotaur，一个半牛半人的怪物，凶残而暴虐。
分三步进行
迷宫的数字化及迷宫的MATLAB绘制 为了绘制迷宫框线，我们可以这样考虑：我们把二维迷宫想象为铺在一个X-Y坐标系上；迷宫由一条条长度为1的短线拼接而成。 我们分别绘制横向的迷宫框线和纵向的迷宫框线。对于横向短线，它的颜色由左端点的值决定；对于纵向短线，它的颜色由下端点处的值决定。 我们也可以说，坐标系中的某迷宫结点，向上延伸出一条竖向的短线、向右延伸出一条横向的短线。例如，对于点(2,1)来讲，它向上延伸出一条蓝色的线，向右延伸出一条红色的线。 我们约定，如果某点延伸出的线的颜色为红色，则该点处的值为“0”，否则为“1”（蓝色）。 例如，我们想绘制横向的线，则点(1,1)处的值为0，点(1,2)处的值为1，……，(2,1)=0, (3,1)=0, (4,1)=0, (5,1)=0, (1,2)=1, (2,2)=1, …… 那么，我们可以得到一个0-1矩阵如下：
hori=[ 0 1 1 1 0 0; 0 1 1 1 1 0; 0 1 1 1 1 0; 0 1 0 1 0 0; 0 0 0 1 1 0; ]; 同理，对于纵向的线，则有(1,1)=0, (2,1)=1, (3,1)=0, (4,1)=1, (5,1)=1, (6,1)=0, (1,2)=0, …… 那么我们也可以再得到一个0-1矩阵如下：
vert=[ 0 0 0 0 0; 1 0 0 0 1; 0 1 0 0 0; 1 0 1 0 0; 1 1 1 0 1; 0 0 0 0 0; ]; 这样我们便把一个二维迷宫数字化为了两个0-1矩阵。 接下来我们使用Matlab的plot函数绘制迷宫框线。plot函数的实质其实就是“描点连线”，所以，如果我们想绘制横框线，我们只需要把两个点用带颜色的线连结起来就可以了。 如点(1,1)处横向框线是红色的，那么我们只需要用plot在点(1,1)和点(2,1)间绘制一条红色的线，用代码来表示就是：</description></item><item><title>兰花指的由来</title><link>https://o5o.me/post/cotart/the_origin_of_the_orchid_finger/</link><pubDate>Sat, 27 Jul 2019 23:20:39 +0800</pubDate><guid>https://o5o.me/post/cotart/the_origin_of_the_orchid_finger/</guid><description>昨天左手手指擦在空调外机冷凝器上，受了伤。 为避免伤口沾水，我在手接触水的时候不由自主的把左手食指翘起来。 也许这就是兰花指的由来？古代女性做针线活的时候不小心把食指刺伤，为避免触碰到伤口，所以翘起手指。</description></item><item><title>读Vim自带教程</title><link>https://o5o.me/post/justaoyu/book-vimtutor/</link><pubDate>Thu, 04 Jul 2019 20:19:41 +0800</pubDate><guid>https://o5o.me/post/justaoyu/book-vimtutor/</guid><description>从哆嗒数学网微信公众号看到一个LaTeX教程, 感觉还行, 视频作者将LaTeX和emacs结合使用, 貌似效率很高. 期末考试完后我也试了试emacs编辑器. 没想到安装包那么大. 看完了软件自带教程, 感觉实在是用不来, 按键太反人类了. 这时我想到了和emacs齐名的vim. 许久都没用过vim了, 我甚至忘了我是怎么学的vim. 哦…我想想, 我之前看过一本linux教程, 里面有一部分是关于vim的. 对了, 还有, vim自带的有一本教程. emacs和vim自带的教程写的都很不错. 两个软件比较, 相对来讲我还是更喜欢vim一些. 我又把vim自带的教程读了一遍. 我之前肯定是读过的, 但不知为何文章后面那部分感觉很陌生.</description></item><item><title>使用QuickLaTeX生成适于在微信公众号中使用的高清LaTeX数学公式图片</title><link>https://o5o.me/post/wp/quicklatex-latex-wechat-png/</link><pubDate>Sat, 08 Jun 2019 12:55:30 +0800</pubDate><guid>https://o5o.me/post/wp/quicklatex-latex-wechat-png/</guid><description>很早以前开了一个微信公众号订阅号，打算用来记录自己的数学学习历程，没想到一直荒废到现在。昨天做数学建模作业，想到不如发到公众号里。但想要在公众号文章中插入数学公式的话，只能采用图片的形式，那我该怎么将LaTeX公式转为图片呢？这可犯了难。
方案1（失败） 我首先想到的是Typora，这是一个Markdown编辑器，非常漂亮，所见即所得，支持插入数学公式。Typora可以把文档导出为多种格式，基础的支持PDF、html和图片，其他格式需要借助Pandoc来完成。我把文档导出为html格式，发现公式被转为了svg格式。但微信公众号不能使用svg格式的图片。
方案2（失败） 我接着就想，想办法把svg格式图片转换成png格式吧，因为Typora的排版真的太好看了，不想放弃。找了一圈，最让我心动的是mathjax-node的拓展mathjax-node-svg2png和它所依赖的svg2png。不过我没时间去鼓捣它了，放弃。
方案3（失败） WordPress官方的 JetPack 插件附带的 Beautiful Math with LaTeX 模块也是以图片显示公式的，公式也很清晰，但只支持行内公式。官方的说法是，\begin{}\end{}这样的环境不支持。只能放弃了。
方案4（成功） 那么，只能用QuickLaTeX插件了，虽然它的公式很模糊（别急）。这是一个WP插件，也可以在WP站点上显示图片格式的LaTeX公式。我想，既然没有更好的办法，那就先凑合吧。 我用了一下，发现效果确实很糟糕。这是我这种稍微有一些DIY能力的人所不能容忍的。 我想，怎么提高图片清晰度呢。
方案4-1（失败） 我首先想到的是，插件代码里有没有控制生成的图片清晰度的选项？我去看了看插件代码，发现公式是在远程服务器上生成图片后又缓存到本地的。失败。
方案4-2（成功） 我又想，先用着吧。但就在这个时候，我注意到了一个惊人的事实：插件的后台选项里是可以调整字体大小的，数值越大，那么生成的图片越大。也就是说，虽然图片100%大小显示时很模糊 ，但我只要让它显示为50%的大小，那看起来不就更清晰了吗？！！ 来试一下。我在浏览器里把用来测试的公式的图片的img标签的width属性调小，把height属性删除（删掉后，只要width调整，height会跟着等比例变化，所以这个属性是多余的），可行。
修改插件 那开始着手修改插件代码吧。 先把插件停用，然后打开Plugin Editor，我发现，我们要修改的代码都在 wp-quicklatex/wp-quicklatex.php 里面。 width属性的属性值是由$image_width变量来控制的，height的属性值是由$image_height变量来控制的。不过后者就不用在意了，直接删掉就是了。这几句模板代码大概在1580行左右，有好几句，因为公式有好几种，图片有不同的img标签。修改后就像这样：
$out_str .= &amp;#34;![](\&amp;#34;$image_url\&amp;#34;&amp;#34;.&amp;#34;)&amp;#34;; 我顺便把title属性和alt属性也给删了，因为会显示烦人的“公式由quicklatex生成”（原话是英语，我记不清了，因为没备份）。 接下来我们要修改的是 $image_width 变量的赋值。我发现，赋值是有两种方式。如果缓存的有图片属性值，那就用缓存里面的；如果图片还没缓存，那就从远程服务器获取图片和图片信息，得到图片的宽度。控制这两者的代码一个是在1440行左右，一个是在1500行左右。前者我们不需要修改，我们把后者修改为：
$image_width = $regs[4]; 改为： $image_width = $regs[4]/2; 来看看是否有效果。保存代码，启用插件。成功。 但是生成的公式有一点错位，我看了看代码，发现图片的行高line-height属性是与$image_height值有关的；图片的垂直偏移量vertical-align是和$image_align值有关的。那也很简单，把这几个变量值都同比例缩小就好了。另外，我觉得在保证清晰度的同时（我的LaTeX字体大小为50px），1/2还是有些大，调成1/3更合适。代码如下：
$status = $regs[1]; $image_url = $regs[2]; $image_align = $regs[3]/3; $image_width = $regs[4]/3; $image_height = $regs[5]/3; $error_msg = $regs[6]; 保存代码；启用插件。完美！！效果： 复制，然后粘贴到微信公众号编辑器。完美。
我想说 很早以前，我就在想办法解决公众号里插入数学公式的问题。发现一个叫“数海拾贝”的公众号的公式很清晰（现在已经停止更新了）。还见到一个老哥，也有和我同样的需求，非常锲而不舍?，先是在一篇文章里提问，而后又到知乎提问。不知道现在解决没有。如果还没，我想，这篇文章应该能帮到他吧。?? 像我这样的代码水平，也只能做一些这样小修小补的工作了。不知道未来的什么时候，我会由“追求完美”完全转变为“能用就行”。我还是继续钻研数学更好一些。 我的微信公众号：我是小白那些年（greenhandme），想看公式效果可以去瞧一瞧。我觉得还是在WordPress写文章更舒服。</description></item><item><title>使用层次分析法选择旅游地</title><link>https://o5o.me/post/wp/mm-ahp-travel/</link><pubDate>Fri, 07 Jun 2019 20:58:57 +0800</pubDate><guid>https://o5o.me/post/wp/mm-ahp-travel/</guid><description>这是我的数学模型作业。数学模型（第五版）7.2节的复习题第2题(p246)。端午节假期计划的是学《常微分方程》和《概率论》，但今天我的大脑特别排斥《常微分方程》，索性做数学建模作业吧，反正不能闲着，反正早晚都得做。
题目 以选择旅游地为目标的层次结构图如右图，景色、费用等5个准则构成准则层，P_1,P_2,P_33个旅游地构成方案层[1]. 旅游地选择层次结构图 已知准则对目标的成对比较阵 A=\begin{bmatrix} 1 &amp;amp; 1/2 &amp;amp; 4 &amp;amp; 3 &amp;amp; 3\ 2 &amp;amp; 1 &amp;amp; 7 &amp;amp; 5 &amp;amp; 5\ 1/4 &amp;amp; 1/7 &amp;amp; 1 &amp;amp; 1/2 &amp;amp; 1/3\ 1/3 &amp;amp; 1/5 &amp;amp; 2 &amp;amp; 1 &amp;amp; 1\ 1/3 &amp;amp; 1/5 &amp;amp; 3 &amp;amp; 1 &amp;amp; 1 \end{bmatrix} 及方案对5个准则的成对比较阵 B_1=\begin{bmatrix} 1 &amp;amp; 2 &amp;amp; 5\ 1/2 &amp;amp; 1 &amp;amp; 2\ 1/5 &amp;amp; 1/2 &amp;amp;1 \end{bmatrix}, B_2=\begin{bmatrix} 1 &amp;amp; 1/3 &amp;amp; 1/8\ 3 &amp;amp; 1 &amp;amp; 1/3\ 8 &amp;amp; 3 &amp;amp; 1 \end{bmatrix}, B_3=\begin{bmatrix} 1 &amp;amp; 1 &amp;amp; 3\ 1 &amp;amp; 1 &amp;amp; 3\ 1/3 &amp;amp; 1/3 &amp;amp;1 \end{bmatrix}, B_4=\begin{bmatrix} 1 &amp;amp; 3 &amp;amp; 4\ 1/3 &amp;amp; 1 &amp;amp; 1\ 1/4 &amp;amp; 1 &amp;amp; 1 \end{bmatrix}, B_5=\begin{bmatrix} 1 &amp;amp; 1 &amp;amp; 1/4\ 1 &amp;amp; 1 &amp;amp; 1/4\ 4 &amp;amp; 4 &amp;amp; 1 \end{bmatrix} (1)计算各个成对比较阵的特征向量, 作一致性检验, 确定权向量.</description></item><item><title>Lumia830 美版 AT&amp;T 申请解锁码解网络锁</title><link>https://o5o.me/post/justaoyu/lumia830-att/</link><pubDate>Tue, 04 Jun 2019 20:03:16 +0800</pubDate><guid>https://o5o.me/post/justaoyu/lumia830-att/</guid><description>2018年6月7日，微信公众号：我是小白那些年。 第一次开公众号，不知道写什么，正巧今天解锁了买来收藏的美版Lumia830，运营商是 AT&amp;amp;T，就谈一谈我申请解锁码的过程吧。这个公众号的初心是记录自己由小白的成长历程，“竹心空，空以体道，君子见其心，则思应用虚受者”，期望我能永远对未知世界充满兴趣。 解锁的过程很简单，容我细细讲来。 打开网页 https://www.att.com/deviceunlock/ ，选择 Unlock a device； 在弹出的新页面中会出现一个选项”Are you an AT&amp;amp;T wireless customer?”，实事求是，选择”No”就行，接着输入你的手机的 IMEI，如果你不知道自己手机的 IMEI，在手机拨号盘中输入“*#06#”就可以看到了； 在你输完 IMEI 后，页面会显示出你的手机的品牌和型号，如果确认无误，在通过机器人验证后，再选中页面下方的单选框后就可以单击”Next”进行下一步了(注意，如果在国内，因为网络问题，机器人验证选项可能不会显示出来)； 接下来会让你填写一些信息，如姓名、手机号、邮件地址，照常填写就可以了，填写完毕后单击”Submit”提交。注意，邮件地址一定要检查无误；美国手机号是10位，如果自己没有可以填写朋友的。 过不了多久，你的邮箱就会收到一封邮件，告诉你”We’re working on unlocking your device.”，你要在24小时内访问邮件中的一个链接以确认你的请求，否则你的申请会被取消。你收到邮件后单击”Confirm”访问一下那个链接就可以了。 确认后，客服会在48小时内处理你的请求，如果成功了，你就会再收到一封邮件，提醒你”We approved your unlock request”，这封邮件里附带有解锁码和解锁指导，照做就可以了。 解锁的过程如下： 1. 把手机关机，然后把 AT&amp;amp;T 的手机卡从手机里拔出来(如果有的话)； 2. 将其他运营商的手机卡放进去； 3. 开机，将会弹出一个解锁页面，输入你收到的解锁码，就解锁成功了。 解锁成功后就可以自由使用其他运行商的手机卡套餐了，好棒。</description></item><item><title>蜘蛛侠·平行宇宙观后感</title><link>https://o5o.me/post/justaoyu/spider-man-into-the-spider-verse/</link><pubDate>Sun, 02 Jun 2019 23:26:33 +0800</pubDate><guid>https://o5o.me/post/justaoyu/spider-man-into-the-spider-verse/</guid><description>很好看。很有创意。 之前我很难去描述这样一种感受：在做一件事之前，虽然我还没有做，但我就已经知道我可以把它做好。现在我知道，并不是只有我有这种感觉了：a leap of faith.</description></item><item><title>怎样下载Abook上的视频等文件</title><link>https://o5o.me/post/wp/hep-abook-down/</link><pubDate>Mon, 29 Apr 2019 17:56:16 +0800</pubDate><guid>https://o5o.me/post/wp/hep-abook-down/</guid><description>这学期都过去一半了，为什么现在才想起来去看Abook呢？还不是因为它太难用了。也许高等教育出版社开发这款产品的初衷是好的，但是，用“粗制滥造”来形容它不为过吧？！
官方介绍是这样的：
欢迎大家访问abook.hep.com.cn，访问相关教材配套的数字课程！
ABook是高等教育出版社为广大高校教师和学生开发的适应教育发展和出版发展要求的“新形态”的高校教材。
ABook新形态教材在教材的编写理念、内容形式、出版机制等各方面都突破了传统高校教材的模式，充分融合教师课内课外教学、学生线上线下学习的数字网络化时代教与学的需求，使学生在学习精品纸质教材的同时，方便的通过计算机网络、手机、iPad等电子终端设备，获取名师微视频、拓展阅读材料、重点难点解析、习题练习讲解等精心筛选和紧密配套的数字化资源。学生还可以在网上进行自测、答疑等互动互助式的学习。
我发现注册账号的网页有bug，图片滑动拼图验证时图片加载不出来或只加载一次，滑块滑不动，不能正常注册。我最后是在app里注册的。 视频不提供下载情有可原，但PDF文档都不能下载我就不能理解了。 下载出来的文件的文件名乱码。其实这是我的浏览器问题，Edge
Chromium内核 dev版乱码，IE正常，Chrome 正常。
我要下载的配套文件属于《数学模型（第五版）》这本书。 我所用的浏览器是 Edge Chromium内核版。我在网页上观看视频时，在视频框的右下角有一个 Download 按钮，能点开但不能下载，会提示“ Couldn’t download – No permissions
”，没有权限。直接访问视频连接，显示403 Forbidden. 但是，代码文件和excel文件是可以下载的，能够下载的文件的图标上，会显示一个箭头，点击箭头就能下载了。 文件的下载链接是这样的：
http://abook.hep.com.cn/downLoadResouce.action?resourceInfoId=5000252368&amp;amp;resourceUrl=5000002867/resourses/2018/3/16/544dee21-42e4-4fe7-9bfd-bfcca464eb06.xlsx 如果我把链接后半部分的文件路径替换为视频的文件路径，能不能下载视频呢（我们在上面已经获取了视频的文件路径，只不过403无法访问）？来试一试：
http://abook.hep.com.cn/downLoadResouce.action?resourceInfoId=5000252368&amp;amp;resourceUrl=5000002867/resourses/2018/3/22/1521701992053829766210263416081.mp4 下载的依然是那个xlsx文件。说明下载链接后半部分的字符是没有用的，删除掉试一试：
http://abook.hep.com.cn/downLoadResouce.action?resourceInfoId=5000252368 依然能够成功下载到那个xlsx格式文件。说明起作用的只是那个resourceInfoId。那么，如果我们把这串ID替换为视频对应的ID，是不是就能下载视频了呢？我们该如何获取呢？ 我这时先想到的是这个问题：这串数字是不是连续的？我尝试把最后一位的8改为7，链接是能够正常访问的，下载得到一个PDF文件。说明这串数字是有规律的。 然后我发现，在我把鼠标指针放到文件上的时候，浏览器窗口的左下角会显示这串字符（其实就是一个链接）：
javascript:showResource(5000252368,0); 括号里的正是我们寻求的resourceInfoId。 我惊奇的发现，把鼠标指针放到视频图标上的时候，也会显示同样的字符串，正是视频的resourceInfoId，视频的下载地址就这样暴露了哈哈。来试试看：
http://abook.hep.com.cn/downLoadResouce.action?resourceInfoId=5000261344 我成功地得到了想要的视频。
怎样批量下载文件呢？ 如果是我的话，因为我只需要下载这么一本书的配套文件，没必要花时间去分析 resourceInfoId 的规律/摊手。真香。我会一个个把链接复制下来（javascript开头的那个），然后批量替换成可下载的链接，必要的时候可以用一点正则表达式。因为得到的链接是必须要登录账号才能下载的，不能用迅雷等软件，我只好一个个点开链接把文件下载下来。 是不是觉得不够优雅？我也这样觉得，用爬虫做这件事是很自然、优雅的，如果我以后也有同样的下载文件的需求，一劳永逸。但写爬虫也得花时间啊，我的知识储备也暂时不允许我流畅地完成一个爬虫。
我全程都没有用到什么高深的知识，让那些点进来的，想看高深算法、解密骚操作的朋友们失望了/笑哭/笑哭。???</description></item><item><title>续·JavaScript实现文章隔字挖空及与Anki结合使用</title><link>https://o5o.me/post/wp/javascript-anki-blank-space-sequel/</link><pubDate>Sun, 07 Apr 2019 10:26:12 +0800</pubDate><guid>https://o5o.me/post/wp/javascript-anki-blank-space-sequel/</guid><description>在2018年暑假的时候，写了一个程序，使得在使用Anki卡片记忆英文短文的时候，卡片上每隔一个单词隐藏一个单词（显示一个空白方格），通过对被隐去的单词的联想，记忆文章。
我把我制作好的 Anki 卡片导出上传到了知乎、在博客里写了一篇记录我的思考过程的文章。很多人在知乎或我的博客里评论或私信我说他们自己制作的卡片不能工作。因为我已经没在用 Anki 了，所以我并没有去验证，并且认为是他们不会用才导致的。 在清明节的前一天，收到知乎发来的短信，有人向我付费咨询问题。我把知乎App安装到手机上，打开来看，那位网友也遇到了上述问题。我依然觉得是他不会用的原因，不过既然他付费咨询了，那就明明白白地向他证明，是他不会用，而不是我的代码有问题。我决定给他截张图，并委婉地“嘲讽”他一下。 我从我在知乎提供的下载链接把卡片下载下来、把Anki安装到电脑上，并把卡片导入到Anki中。我点开卡片，我用来做例子的新概念英语课文 A Puma at Large 显示依然是正常的。然后我就开始编辑给那位网友的回复：
我现在已经没在用Anki了，看到你所说的问题后，我测试了一下，
写到这里我想起，要制作一张新的卡片才有说服力。我随便写了一些句子，然后发现，确实不能正常挖空/笑哭。我本来想写“一切正常”的，硬生生的改成了“确实不能正常挖空”：
我现在已经没在用Anki了，看到你所说的问题后，我测试了一下， 确实不能正常挖空/笑哭。
我开始思考原因。 我把卡片导出为文本，发现了端倪。 我原本以为 Anki 是这样组织内容的：
Nice to meet you. Nice to meet you. Nice to meet you. Nice to meet you. Nice to meet you. Nice to meet you. 或者是这样的：
Nice to meet you. Nice to meet you. Nice to meet you. Nice to meet you. Nice to meet you. Nice to meet you.</description></item><item><title>读Python网络数据采集</title><link>https://o5o.me/post/justaoyu/book-web-scraping-with-python/</link><pubDate>Wed, 20 Mar 2019 16:23:00 +0800</pubDate><guid>https://o5o.me/post/justaoyu/book-web-scraping-with-python/</guid><description>这本书买了好久了。 想读些书，但小说完全读不下去，感觉是在浪费时间，没读一会儿就感觉很焦虑。 我是用 Acrobat 读的这本书，读的时候，我一边读，一边写Comment（应该翻译成“评论”？“笔记”？我用的 Acrobat 是英文版），读完也不至于空有感慨，什么重点都说不上来。 很早之前我就想，把 SafariBooksOnline 上面的书抓下来打包成 epub 文档。我可以手动完成，因为提供有现成的API，但怎么把这个过程自动化，我做不到啊。。。直到 SafariBooksOnline 改名字，我还是做不到。 读完这本书，我尝试了一下，还是没做到。理论和现实是有差距的。 我应该也成功登录了上去，但访问 api 的时候依然提示：
{&amp;#34;detail&amp;#34;:&amp;#34;Authentication credentials were not provided.&amp;#34;} 不知道是怎么着被发现了。 读这本书的收获还是蛮大的，数据采集的方方面面都写到了，虽然不深入，但让我有了方向。 下面是书里一些很有趣的句子的摘录：
BeautifulSoup 库的名字取自刘易斯·卡罗尔在《爱丽丝梦游仙境》里的同名诗歌。
当米开朗基罗被问及如何完成《大卫》这样匠心独具的雕刻作品时，他有一段著名的回答：“很简单，你只要用锤子把石头上不像大卫的地方敲掉就行了。”
计算机科学里曾经有个笑话：“如果你有一个问题打算用正则表达式（regular expression）来解决，那么就是两个问题了。”
我们即将用来做数据归纳的文字样本源自美国第九任总统威廉·亨利·哈里森的就职演说。哈里森的总统生涯创下美国总统任职历史的两个记录：一个是最长的就职演说，另一个是最短的任职时间—32天。
正如一句谚语所说：“如果你喜欢某个东西，就放开手。”
在使用自动化技术采集互联网数据时，其实很少遇到完全无法解决的问题。记住一点就行：互联网其实就是一个用户界面不太友好的超API。</description></item><item><title>读 疯狂科学</title><link>https://o5o.me/post/justaoyu/book-mad-science/</link><pubDate>Sun, 17 Mar 2019 17:14:12 +0800</pubDate><guid>https://o5o.me/post/justaoyu/book-mad-science/</guid><description>今天下午在图书馆转悠，想读些书。 我先是找了找有关python爬虫的，图书馆没有，但我还是去三楼西转了转，没发现什么能让我提起兴趣的好看的书；我接着去了三楼东，想找本小说看看，突然想到阿加莎克里斯蒂的悬疑小说，太厚了，找到、拿起又放下了，又想起三体，发现书架上没有，不得不吐槽图书馆的微信公众号里的图书检索，做的很差劲；然后我想还是去六楼东吧，里面的书应该不会让我感觉不耐烦，一眼相中这本《疯狂科学》。 这是一本很有想象力的书，我在回家的时候一定得给我弟弟买一本。 读到《用饼干发射火箭》那一节，我想起了在小学四五年级时小伙伴们用烟盒里的锡纸、乒乓球碎屑、爆竹里的火药制作的火箭，我在现场观摩了整个发射过程。记忆最深的是火箭发射后的浓烟和气味，很难闻、记忆犹新。火箭还是很成功的，成功飞了出去，大概有几米吧。如果不是读到这里，这段记忆不知还要被埋藏多久。 我之前也很好奇铅笔是怎么制作的，这本书里有这个实验。 这本书的第4章标题为“玩火”，我想起了小时候大人警告小孩子的话：玩火光尿床。小时候的某段时间我是深信不疑的。大人到底欺骗过我们多少次。 这本书里有很多很大幅的插图，读起来很过瘾。 这本书的味道有些重，读到后面我已经适应、闻不到了。 我是翻完的，不是读完的。</description></item><item><title>Shell脚本和正则表达式实现由给定字母生成指定字数单词</title><link>https://o5o.me/post/wp/shell-and-regex-generate-special-words/</link><pubDate>Tue, 12 Feb 2019 16:50:34 +0800</pubDate><guid>https://o5o.me/post/wp/shell-and-regex-generate-special-words/</guid><description>前天早上，我安装了这样一个游戏，“Words Story”，游戏规则是，从所给的字母中选出一些字母，组合成正确的单词，获得金币，帮助监狱里的火柴人逃出监狱。游戏背景好像就是电影《肖申克的救赎》。
游戏做的很棒，但要将零散的字母组合成单词真的是难为胖虎我了。就在我下载这个游戏的前一天的晚上，我刚刚读完《The Linux Command Line(中英对照)》，恰巧里面“正则表达式”那一章有提到 Linux 系统都自带有一个词库，可以通过正则表达式匹配单词，便产生了写一个能让我更舒服的玩游戏的程序的想法。 我的思考过程是这样的： 我的设想(最初的)是，写一个 Shell 脚本，由给定字母生成所有可能的指定字数的字母组合，然后与词典对照，输出所有正确的单词。程序可以像这样运行：
[root@hostname ~]# genwords 3 e t s q l g o b 其中，3 是最终要生成的单词包含的字母数，后面的是给定的字母。 那便开始吧。 要想直接使用脚本文件名运行程序，需要把脚本所在文件夹添加到 PATH 变量中。这里我把脚本放在 ~/bin 文件夹中，这个文件夹路径已经在 PATH 变量中了。如果家目录里没有 bin 文件夹，可以自己新建一个。可以这样将一个路径追加到 PATH 变量值末尾(例如~/bin)：
PATH=$PATH:~/bin 我接着新建一个空白文件，并给它赋予可执行权限：
&amp;gt; genwords; chmod 755 genwords; ls -l nice 注意这串命令前的大于号，这里是重定向符，将标准输出重定向到文件 genwords 中，但标准输入为空，所以没有内容可写入到文件中，所以文件为空，这样我们便生成了一个空文件。 Shell 脚本的第一句都是：
#!/bin/bash 可以在后面加上 -x 选项，来追踪脚本的运行，就像这样：
#!/bin/bash -x 我要从命令行参数中获得“要生成的单词的字数”和“所有备选字母”，我使用了下面两句代码：
numletters=$1 #要生成的单词所包含的字母个数 numaltletter=$(($#-1)) #所有给定的字母的个数 $1 是在位置1处的变量的值，也就是命令中的那个数字；$# 是所有命令行参数的个数，减去1，就是备选字母的个数。 然后，我把备选字母储存到一个数组中，我使用了如下代码：
for ((i=0; i 运行一次 shift 命令，就会使所有命令行参数向左移动一位，这让我想到了高中生物里学过的蛋白质的合成。 我用 echo ${someletters[i]} 这句代码测试代码有没有正常工作。在程序还小的时候，多测试，很容易发现和定位问题，也能更快的解决问题。测试完成后我把这句代码注释掉了。 我是先在 Visual Studio Code 里把代码写好，再粘贴到远程服务器的 vim 编辑器里。在 vim 的正常模式里，按 gg 再按 dG，可以很快的清除代码。gg 是跳转到代码第一行，dG 是删除当前行到文件末尾的内容。 然后就是，由备选字母生成所有的指定字数的字母组合，再使用 grep 程序与词库匹配单词，输出所有拼写正确的单词。但是我发现，适用于所有字数单词的代码。。。我不会写/汗，绞尽脑汁也没想到。我真该学学算法了。然后我就想着先写一个特殊情况下的，说不定就有灵感了呢，于是我就写了一段只能生成含有3个字母的字母组合的代码，用到了三层嵌套的 for 循环。</description></item><item><title>读 The Linux Command Line</title><link>https://o5o.me/post/justaoyu/the-linux-command-line/</link><pubDate>Sat, 09 Feb 2019 23:56:08 +0800</pubDate><guid>https://o5o.me/post/justaoyu/the-linux-command-line/</guid><description>因为我的博客放在阿里云的轻量应用服务器上，而我自己也是不消停的主，偶尔需要远程连接服务器进行一些操作，但很多 Linux 命令我都已经开始生疏了，所以，再次学习是很有必要的。趁寒假，我把《The Linux Command Line》读了一遍。 我感觉，所有希望入门 Linux 的人，都应该首先阅读这本书。“深入浅出”用来形容这本书再恰当不过了。也许我的感觉会有一些偏差，因为我之前有一定的知识储备。 我读这本书，只是想系统的了解一下 Linux 命令行，知道自己可以用命令行完成什么样的操作、能做到怎样的程度，以后需要用某个命令时能快速找到详细选项、用法。 这应该是我第二次读这本书了，前一次没读完，也忘记读到了哪里，没读完的原因是当时自己对 Linux 的使用并没有什么现实的需求，越到后面感觉越枯燥，遂放弃。 我读的是《The Linux Command Line》的中英对照版，读起来很舒服，中文翻译很贴切，当然也有翻译得马(gou)马(pi)糊(bu)糊(tong)的地方，甚至还有错误，此时英语原文就派上了用场，把中文翻译对应的原文读一遍，作者想表达的意思呼之欲出，也大概可以知道译者为什么要这样翻译，如果还是不理解，先放一边也就是了。链接：https://billie66.github.io/TLCL/index.html 我是从前到后读的这本书，但很惭愧，我并没有把每一章都很认真的读完，第21、22章尤其粗略，而第23章“打印”，我是直接跳过了的。 在所有我尝试学习过的编程语言中，我了解的最多的，非 C语言 莫属，感谢曾经一次次放弃又一次次站起来学习 C语言 的自己，让我在学习其他知识时，不时会有一种心意相通的感觉。编程语言的基本要素是很相似的，有很多语言都借鉴了 C语言 的语法，我在学习 Shell 脚本时，可以与 C语言 的某些相对应的概念进行对比，分析二者的差异，更快的理解书中的内容。 作者在书中的一些观点，我是十分认同的，但原谅我不能列举一二。在读这本书的前期，为了防止自己看到那么多的命令和命令选项不耐烦，我用纸笔对书中涉及的命令做了笔记，到后面就没有做了，同时，因为我是用浏览器在网页上读的电子书，读到精彩处，也没有留下一些标记。 曾经，我也觉得那些 hacker 很酷，并梦想成为其中一员。然而，并没有。</description></item><item><title>[翻译/中英对照] Learn LaTeX in 30 minutes 30分钟入门LaTeX</title><link>https://o5o.me/post/wp/learn-latex-in-30-minutes/</link><pubDate>Fri, 18 Jan 2019 23:05:27 +0800</pubDate><guid>https://o5o.me/post/wp/learn-latex-in-30-minutes/</guid><description>「Learn LaTeX in 30 minutes」文档翻译。
In this guide, we hope to give you your first introduction to LATEX. The guide does not require you to have any prior knowledge of LATEX, but by the time you are finished, you will have written your first LaTeX document, and hopefully will have a good knowledge of some of the basic functions provided by LATEX. 在这份指南中，我们期望带给你 LaTeX 的第一次介绍。这份指南不需要你之前拥有任何 LaTeX 相关的知识，但当你读完后，你会拥有你的第一份 LaTeX 文档，并且有很大可能获得许多有关 LaTeX 基本功能的知识。</description></item><item><title>当时只道是寻常</title><link>https://o5o.me/post/justaoyu/casiofx991cnx/</link><pubDate>Thu, 03 Jan 2019 20:24:33 +0800</pubDate><guid>https://o5o.me/post/justaoyu/casiofx991cnx/</guid><description>在今年的双十一，我买了人生中第一部函数型计算器——卡西欧 fx-991CN X，相见恨晚。然而我在得到它的一个月后就又失去了它。在图书馆不知道被谁给偷偷拿走了。
刚遇见它的时候，即便是我换新手机也没那么高兴。进行矩阵运算(不超过4阶)不仅仅是方便，简直是好用到哭、好用到爆炸。我用很短的一段时间把说明书看了一遍，并把上面的例子挨个敲了一遍。计算器在手，让我有一种踏实的感觉，所有可能出现的情况都是我掌握了的，只要不超过它的能力范围，就不会抛出什么未知的错误。 失去以后才更能想起它的好。 这学期我们有一门课是物理实验，数据处理时要进行很多重复计算，很枯燥，但使用 CALC 就很方便了。使用CALC 可以保存含有变量的表达式，在进行重复计算时，只要把表达式中的变量所指的数据代入就能得到答案，不需要再去重复输入算式。 求矩阵的逆矩阵，是在输入矩阵变量后，再按 x-1（方形按钮3行3列）。我一开始不太熟悉，在功能列表里没找到”逆矩阵”，还以为不能算，去百度上搜也有人说没这个功能。后来我是无意中发现的。其实说明书里已经写了，还举了例子。 计算器说明书写的很清楚，把说明书看一遍就会用了，完全不用再看其他教程浪费时间。说明书可以从这里下载：说明书链接 我又买了一个一模一样的计算器，今天刚收到。</description></item><item><title>扫雷</title><link>https://o5o.me/post/justaoyu/minesweeper/</link><pubDate>Mon, 10 Dec 2018 20:24:53 +0800</pubDate><guid>https://o5o.me/post/justaoyu/minesweeper/</guid><description>我竟然从没玩儿过扫雷/笑哭。 在以前的某个时候，我看到了一份写的乱七八糟的扫雷游戏教程，导致我一直觉得扫雷是一款很难的游戏，今天在玩儿之前也是抱着这样的想法。 今天开始数学实习，机房还是xp系统，网速还异乎寻常地慢，在等待老师上课期间，能玩儿的似乎只有扫雷。 没想到扫雷的游戏规则却是异乎寻常地简单：点开一个方格，它里面的数字就是与它相邻的方格（横向、竖向、斜向）内的炸弹数，把炸弹给找出来。 在机房只玩儿了一小会儿就上课了，意犹未尽。晚上回寝室在自己的电脑上安装了扫雷。界面变的很精美，炸弹也变成了瓢虫，还有闯关游戏。在闯关游戏中，我遇到这样一种情况，两个方格其中之一是炸弹，但我却无法根据周围的数字判断出到底哪个里面有炸弹：
1 3 炸 ？ ？ 炸 1 炸 炸 3 3 炸 1 2 2 1 1 1 找不出来也不影响通关。我认为是无解的。有一个标识出一个雷的位置的道具被我不小心用掉了，可能正确的使用位置是这里。</description></item><item><title>Aoyu 的 2018 新年计划</title><link>https://o5o.me/post/justaoyu/2018-new-year-resolutions/</link><pubDate>Sun, 31 Dec 2017 22:39:04 +0800</pubDate><guid>https://o5o.me/post/justaoyu/2018-new-year-resolutions/</guid><description>2018, 我准备好了.
大学 在 2018 年的 3 月把计算机二级考试中的 “C语言” 和 “Office” 过了, 拿到优秀证书. 参加 2018 年 4 月和 5 月进行的全国大学生英语竞赛初赛和决赛, 至少获得一等奖(各参赛高校初赛人数的5%). 参加 6 月份的大学英语四级考试, 分数至少为 425 分(或 550 分). 参加 9 月份的大学生数学建模竞赛 (重在参与, 不求获奖) 参加 12 月份的大学英语六级考试, 分数至少为 425 分.
口琴 每当学会一首新曲, 发布在博客里.
读书 读完一本书后写一篇读后感
其他 学习 会计 有关基础知识 学习 法律 相关基础知识 2018 年花出的每一笔钱都要记账</description></item><item><title>计算机二级报名</title><link>https://o5o.me/post/justaoyu/ncre-registration/</link><pubDate>Tue, 19 Dec 2017 22:47:04 +0800</pubDate><guid>https://o5o.me/post/justaoyu/ncre-registration/</guid><description>我们学校昨天开放报名, 人很多. 九点开始, 我到 12 点多终于报上了. 我报了 C 语言和 Office. 由于我不知道报名开始的具体时间, 担心 0 点开始, 到了夜里12点多才睡. 睡前定了闹钟, 6点钟就起床了, 左等右等就是看不到考点选择里出现我们学校. 后来听学姐说是 9 点钟开始的. 需要上传证件照, 头像是我自己拍照片扣的, 加了蓝色背景, 还算可以吧. 只是皮肤没我自己认为的那么白, 眼睛也没我自己认为的那么大. 其实本不需要这么麻烦, 教务系统里有照片, 下载下来改个背景就能用, 我是报完名后才想起来的.</description></item><item><title>乐2Pro X625手机刷机</title><link>https://o5o.me/post/justaoyu/lemobile-android-aosp/</link><pubDate>Thu, 07 Sep 2017 15:14:06 +0800</pubDate><guid>https://o5o.me/post/justaoyu/lemobile-android-aosp/</guid><description>我的手机是去年买的 乐2 pro X625，昨天刷了安卓原生系统。 我之前使用的手机是在我刷机时报废的（芯片烧毁的那种报废），因此我对刷机一直避而远之。压垮骆驼的最后一根稻草可能在昨天飘到了骆驼背上。 被某兔一键刷机给坑了。一键刷机？呵呵，我竟然傻傻地相信了。刷完 RECOVERY，停在了安装驱动那一步（不能手动安装，我也不知道安装的什么驱动）。把数据线拔掉，再开机就停在了开机界面那里——变砖了。 最后，我用了 adb sideload 命令才不至于丢人丢到连刷机都能搞砸。 最靠谱的刷机步骤如下：刷入第三方 RECOVERY；下载卡刷包；刷机。 使用 adb 命令时（其他新安装的命令行工具也一样），如果遇到什么未知错误，先考虑是不是端口被占用了，重启电脑试试。 我刷机前，第一次付费加 QQ 群。手机变砖后我尝试去群里求助，一人愿意提供有偿服务，4元钱。感觉那人不靠谱，遂拒绝。 原生安卓系统没有重启按钮（安卓6.0），长按电源键可重启。原生系统也没有通话录音功能，使用第三方应用录的音噪声太大，遂放弃。 我刷入的包默认使用 Arrow 桌面，但让我奇怪的是桌面上只能排列两行图标。是 bug 还是“创意”？我一开始以为是“创意”，但我某次重启后桌面又可以排列多行图标。我以为是我不小心按到了什么选项，找了好几遍，没有。正好手边有一个 OPPO 小手机，安装 Arrow 桌面测试，发现图标排列正常，遂知我遇到了 bug。重启几次后桌面图标排列正常。期间到 QQ 群里提问，没人搭理。 乐2 pro 电池为 3000 毫安时，但我刷入的系统在电池界面却显示 4050 毫安时。该 bug 已向作者反馈。 我的手机处理器为 联发科X25，但我刷的是 X20 的包，所以，我 2100万像素的摄像头在系统自带相机里显示最多为 1600万像素。无所谓了，即便摄像头达到了所谓的 2100万像素也照样拍不出你以为的清晰度的照片。 系统自带 Root 权限，但有的应用依然无法卸载。遂下载 RE 文件管理器到 /system/app 找到相关文件删之。但出现在桌面上的图标不会自动消失，点击后会弹出“程序无法正确运行”的提示。重启手机，世界就清净了。 准备安装谷歌四件套，但某一键安装器提示“system分区未解锁”。如果手动下载，四件套也不容易凑齐，遂放弃。 我对这次刷的系统很满意，准备长期使用。</description></item><item><title>为什么通过指针传递字符串时不在变量名前加”*”？</title><link>https://o5o.me/post/justaoyu/a-silly-question-c/</link><pubDate>Tue, 15 Aug 2017 07:50:42 +0800</pubDate><guid>https://o5o.me/post/justaoyu/a-silly-question-c/</guid><description>今天在图灵读者群问了一个蠢问题。
#include void fortune\_cookie(char msg[]) { printf(&amp;#34;Message reads: %s\n&amp;#34;, msg); } int main() { char quote[] = &amp;#34;Cookies make you fat&amp;#34;; fortune\_cookie(quote); return 0; } 我的问题是：为什么 msg 的前面不加 “*”? C语言中，字符串即是字符数组。在传递字符串时，只能传递数组中第一个元素的地址，然后程序循着这个地址依次向后读取字符，直到遇到”\0″。msg 是一个指针，指向字符串”Cookies make you fat”中的第一个字母”C”。给指针变量加”*”，读取的是指针指向的存储器地址中保存的数据，而我们想要的原是根据字符数组第一个元素的地址读取整个字符串，显然这与我们的期望不符，况且，C语言也不允许这样做。</description></item><item><title>The Truman Show</title><link>https://o5o.me/post/justaoyu/the-truman-show/</link><pubDate>Mon, 14 Aug 2017 10:08:01 +0800</pubDate><guid>https://o5o.me/post/justaoyu/the-truman-show/</guid><description>我生活在楚门的世界里吗？我不确定。如果是真的，那么绝对是由一位比 Christof 更高明的导演执导的。 多希望我能像楚门一样触碰到世界的边界。 数学就很合适。</description></item><item><title>重新阅读“嗨翻C语言”</title><link>https://o5o.me/post/justaoyu/read-headfirstc-again/</link><pubDate>Sun, 13 Aug 2017 04:18:21 +0800</pubDate><guid>https://o5o.me/post/justaoyu/read-headfirstc-again/</guid><description>这本书是我去年暑假买的，看到了“结构、联合、位字段”那一章，往后便读不下去了。这一结果与生物进化假说中的中性突变基因积累的结果类似，那些看似无关紧要的令人略微困惑的小知识点累积下来就最终成为了阅读途中的绊脚石，而且还是不容易跨过的那种。 数次决心读完这本书，可是最终都落得头皮发麻、不知所以然的下场，无功而返。今天停电，我又重新拿起了这本书。 我读完了第一章。记笔记与番茄钟的使用让我很有成就感。记笔记时我使用了网格笔记本与康奈尔笔记法。读完这一章我一共用了三个番茄钟。 这本书真的很适合有一定基础的初学者，可是，以前的我为了追求速度并没有认真对待这些财富，总是想着我先把这本书快速读一遍，以后再认真翻，然而，哪有什么以后…… The end.</description></item><item><title>Hello, world</title><link>https://o5o.me/post/justaoyu/hello-world/</link><pubDate>Sat, 12 Aug 2017 12:55:42 +0800</pubDate><guid>https://o5o.me/post/justaoyu/hello-world/</guid><description>也许是我太过渴望安逸，我越发地怀念当初使用 WordPress 写博客的时光，越发地喜欢那种所有想要的一切都已被安排好的感觉，于是，我来到了这里。 我从 WordPress 到 Typecho，从 Typecho 到 Hexo，再从 Hexo 到 Jekyll，又从 Jekyll 到 Bitcron，最后又回到原点，这样一个过程，像极了我们的人生。 我是一名“数学与应用数学”专业的新生，很高兴认识你。</description></item><item><title>高考前夕</title><link>https://o5o.me/post/justaoyu/the-eve-of-cee/</link><pubDate>Wed, 10 May 2017 10:30:01 +0800</pubDate><guid>https://o5o.me/post/justaoyu/the-eve-of-cee/</guid><description>每年我可以过三个生日，这是今年的最后一个。从今天起，我便再也不能说自己是未成年了。</description></item><item><title>20170203</title><link>https://o5o.me/post/justaoyu/0203/</link><pubDate>Fri, 03 Feb 2017 10:36:06 +0800</pubDate><guid>https://o5o.me/post/justaoyu/0203/</guid><description>唯愿六月八号合上笔盖的那一刻，有着侠客收刀入鞘的骄傲。</description></item></channel></rss>