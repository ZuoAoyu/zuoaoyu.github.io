<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Anki on o5o</title><link>https://o5o.me/tags/anki/</link><description>Recent content in Anki on o5o</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 31 Jan 2023 22:42:21 +0800</lastBuildDate><atom:link href="https://o5o.me/tags/anki/index.xml" rel="self" type="application/rss+xml"/><item><title>Ubuntu自建Anki同步服务</title><link>https://o5o.me/post/anki_self_hosted_sync_server_ubuntu/</link><pubDate>Tue, 31 Jan 2023 22:42:21 +0800</pubDate><guid>https://o5o.me/post/anki_self_hosted_sync_server_ubuntu/</guid><description>Anki更新2.1.57版本后，内置支持自建同步服务。之前都是需要以插件的形式实现，且搭建后往往只适用于旧版本的Anki，选择了自建同步服务就意味着放弃追求新版本和新功能。
只需要几行代码就可以搭建自己的Anki同步服务了：
screen -S anki-aoyu python3 -m venv ~/syncserver ~/syncserver/bin/pip install anki SYNC_USER1=aoyu:123456 ~/syncserver/bin/python -m anki.syncserver 我的系统版本是Ubuntu22.04，安装过程是相当顺畅的。很大概率你需要先运行apt install python3.10-venv，之后才能python3 -m venv ~/syncserver，不过你不需要提前考虑到这一点，报错后会提醒你安装的。
SYNC_USER1后面跟的是账户名和密码，在Anki里用这个账号登录。
你需要在Anki软件设置Self-hosted sync server项里填写http://服务器ip:8080/，之后就可以使用自己的同步服务了。
可以用 Nginx 做一个反代，我能想到的优点有：不让8080端口暴露到网络上；给anki的同步服务绑定一个域名，好记；可以启用https。这里就不写了，懒。
screen命令的使用可参考：SSH远程会话管理工具 - screen使用教程 - VPS侦探 (vpser.net)
安装参考：Sync Server - Anki Manual (ankiweb.net)</description></item><item><title>Roam Research和Anki联用：动作配置</title><link>https://o5o.me/post/rr_km_anki_configuration_tutorial/</link><pubDate>Mon, 02 Jan 2023 01:07:10 +0800</pubDate><guid>https://o5o.me/post/rr_km_anki_configuration_tutorial/</guid><description>Roam Research是一个笔记软件，Anki是一个间隔重复软件。我在RR里写的笔记有复习需求，在Anki里的卡片有编辑、整理需求，所以以前的我就用Keyboard Maestro这个工具写了一个动作（Macro）来帮我将二者联系起来。
RR的笔记可以导出为Anki卡片（卡片仅用于复习、展示，所有的编辑都在笔记上完成），笔记更新，卡片能同步更新，笔记和卡片能相互跳转。
可以按下面的顺序进行配置（所需文件在文章最后），手把手教学请看视频：
【详细配置】Keyboard Maestro动作实现Roam Research笔记和Anki卡片的双向链接、跳转和同步更新，配置指南
Anki模板导入、修改 要改的地方就一处：修改模板里的RR graph名称。不改的话就没办法从Anki跳转回RR了。
KM动作导入、修改 要改的地方也就只有一处：把你的Anki牌组的名字填进去。
Anki插件安装 anki connect，插件代码：2055492159
禁用App Nap 从Mac OS X Mavericks开始，操作系统中引入了名为App Nap的功能。此功能导致某些打开（但不可见）的应用程序处于挂起状态。由于此行为会导致Anki Connect在前台有另一个窗口时停止工作，因此应禁用Anki的App Nap1。
在终端运行下面的命令即可。
1 2 3 defaults write net.ankiweb.dtop NSAppSleepDisabled -bool true defaults write net.ichi2.anki NSAppSleepDisabled -bool true defaults write org.qt-project.Qt.QtWebEngineCore NSAppSleepDisabled -bool true 最后 这就配置完成了，是不是很简单？quicker版的动作配置更简单，除了下载插件，啥都不用配置，自动配置。想想以前真的傻，我给quicker版的这个动作加了批量导入、多种挖空标记、多种方式排列的笔记导入、自动从Anki获取牌组列表、自动添加Anki模板等等功能，这些功能在我现在看来用途很小很小，但当时却花了大量时间去改动作、修bug，浪费了很多时间在完全没必要的事情上。
模板、动作下载链接: 百度网盘，提取码: 3tvu
希望能给看到这里的你带来一些帮助。
Notes for MacOS Users&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>配置Anki同步服务Ankisyncd，并使用Apache2反代实现https加密同步</title><link>https://o5o.me/post/wp/ankisyncd_apache_https_ssl/</link><pubDate>Sun, 24 Jan 2021 14:10:31 +0800</pubDate><guid>https://o5o.me/post/wp/ankisyncd_apache_https_ssl/</guid><description>使用Ankiweb同步卡片在我这里确实是有些慢，所以我自己尝试搭建了自己的Anki同步服务Ankisyncd，搭建好后又发现安卓版的Ankidroid只支持https同步，所以我又用Apache2对同步地址进行了反向代理。
文章前半部分其实还是老生常谈，最精华的，我觉得是反向代理那部分内容。这篇文章全文无图片，只有文字，可以看作是整个实现过程的思路和要点整理，我省去了很多前置步骤，例如许多命令我都是直接拿来用的，而它们在你自己的服务器中可能需要提前安装。 在文章最后会附上我所参考的资料，那里一般有完整、详细的说明，如果想自己搭建类似服务，遇到问题后建议先去浏览这些内容。 文章分成三部分，先介绍在服务器端怎样搭建Ankisyncd，之后介绍电脑版Anki和安卓版Ankidroid怎样配置，在Ankidroid同步失败后又介绍了在服务器端怎样用Apache2实现反向代理。我的服务器是阿里云的学生轻量应用服务器，系统版本是Ubuntu18.04。
服务器端 在服务器安装Ankisyncd[1] 大致过程如下[2]：
git clone https://github.com/tsudoko/anki-sync-server.git /usr/local/anki-sync-server git submodule update --init cd anki-bundled pip3 install -r requirements.txt # 可预先从requirements.txt中删去“pyaudio”，这个不是必装的。 pip3 install webob 修改/usr/local/anki-sync-server下的ankisyncctl.py文件，把开头的#!/usr/bin/env python改为#!/usr/bin/env python3 按教程，这样就算安装好了，但我第二步但那条命令git submodule update --init运行之后一直卡在Cloning into '/usr/local/anki-sync-server/anki-bundled'...这里，原因是github访问速度太慢。我一开始想的办法是把github的仓库文件克隆到gitee（码云），修改 /usr/local/anki-sync-server下的.gitmodules文件，把url改成码云的链接。我也在git里add和commit了，但还是卡在这里。后来我用了一个粗暴的办法，从github下载库文件后，直接上传到vps上，解压缩到anki-bundled文件夹里面。 安装完成。
启动Ankisyncd[3] cd /usr/local/anki-sync-server screen -S anki python3 -m ankisyncd 之后在浏览器里访问“http://你的ip:27701”，浏览器页面上会显示一句“Anki Sync Server”。注意，如果访问不了，可能是需要在阿里云后台开放端口27701。 按Ctrl+A,D，退出会话，Ankisyncd会继续在后台运行。
管理用户 创建用户：
cd /usr/local/anki-sync-server ./ankisyncctl.py adduser 回车后会提示输入密码。 其他操作：
Commands: adduser - add a new user deluser - delete a user lsuser - list users passwd - change password of a user 电脑端Anki配置 从Releases · tsudoko/anki-sync-server · GitHub了解到，Ankisyncd最新版本是2.</description></item><item><title>R语言实现将电子书转换为Anki卡片——以《十天搞定考研词汇》为例</title><link>https://o5o.me/post/wp/r_lang_make_anki_cards_with_ebook/</link><pubDate>Fri, 10 Jul 2020 16:54:28 +0800</pubDate><guid>https://o5o.me/post/wp/r_lang_make_anki_cards_with_ebook/</guid><description>昨天是我背《十天搞定考研词汇》这本书的第十天。过去的十天里我每天都花大量的时间在单词上，虽然并没有像书名所说的“搞定”考研词汇，但也确实收获颇丰。十天过去了，往后我要怎么复习单词呢？我想到了Anki。
以前我也尝试过Anki许多次，但说真的Anki并没有给我带来任何帮助。我认为原因有以下几个：1.制作卡片太浪费时间；2.用别人的卡片不合心意；3.背卡片总感觉不踏实，看不到希望、没有成就感。 这一次应该会好很多。
为什么用R语言 前几天我才开始学R语言[1]，因为写双学位毕业论文可能要用它来处理数据。我其实更倾向于用Matlab，因为帮助文档很完善、例子也很多，用着也顺手，但用R可能会显得更“专业”一点?。我想正好这个问题用R也能处理，那就用R语言吧。但毕竟我对R语言的特性还不很了解，如果代码有可改进之处，欢迎友好指出。
关于epub/azw3电子书 这两种格式的电子书文件，不专业地说，你可以把它们看成zip、rar之类的压缩包（把.epub后缀改成.zip可以直接打开），压缩包里面是一些html格式的网页，书的内容就在这些网页文件里面。既然是网页，那如果你想获取里面的内容的话，是不是可以用“网络爬虫”来抓取呢？
大致思路 因此，通过epub/azw3格式的电子书制作卡片可以大致分成如下几个步骤：1.把电子书文件解压开，获取里面的html文件；2.用爬虫爬取里面需要的信息，并将信息整理汇总成一个“表格”（csv文件）；3.将csv文件导入Anki；4.修理bug、调整细节、美化卡片。
开始 下面以《十天搞定考研词汇》这本书为例。这是一个完整的例子，我写这篇文章的时候也已经制作完成了，因此我想这篇文章对R语言初学者、有相同需求的人来说都是很有借鉴意义的。 接下来将《十天搞定考研词汇》简称为《十天》。
观察这本书 可以看到，这本书一共有20个单词列表，从list1到list20，背单词的任务分成了10天，每天背两个列表，因此，具体到这本书，我们的任务是：1.将电子书文件中的所有单词都导入到anki中；2.在anki中创建一个总记忆库、再创建20个子记忆库，每个子记忆库保存一个列表的单词；3.单词卡片正面是单词，背面是单词的音标、释义和扩展；4.需要把书中高亮的单词也给标注出来。
步骤1：获取html网页文件、观察结构 凭空变出《十天》的epub或azw3格式的电子书文件。我这里用的是azw3格式的。导入Calibre中，在这本书上点鼠标右键选“Edit book”，在打开的页面中可观察到，每一个列表的单词被单独存放在一个html文件中，选择需要的html文件导出。 观察导出的html文件。这里选取一部分：
### List 1 intellect [ˈɪntəlekt] n. 智力；理解力；[总称] 知识分子 派intellectual [ˌɪntəˈlektʃuəl] adj. 智力的；理智的；聪明的 考点搭配intellectual enquiry 知识探索，知识探求 intellectual achievement 知识成就，智力成果 intellectualize [ˌɪntəˈlektʃuəlaɪz] vt. 使…理智化；对…做理性探讨 contempt [kənˈtempt] n. 轻视，轻蔑 派 contemptible [kənˈtemptəbl] adj. 可鄙的；可轻视的 contemptuous [kənˈtemptʃuəs] adj. 轻视的，蔑视的 ultimate [ˈʌltɪmət] adj. 最后的，最终的 yield [jiːld] n. 产量，收获量；收益 v. 出产；屈服 contend [kənˈtend] vi. 竞争，争夺 vt. 坚决主张，声称 如上所示，每一个词条均被包括在一个p标签中，“主单词”的p标签的class属性值为bodytext，“单词扩展”的class属性为content-yinyong。至于p标签内部，可以看到需要修改css样式的部分都被包括在不同的span标签中，也都有不同的class属性，据此我们可以对它们应用css样式，这放到后面anki卡片样式美化那里再说。 因此我们需要做的有： 1.</description></item></channel></rss>