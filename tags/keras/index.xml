<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Keras on 侠客</title><link>https://o5o.me/tags/keras/</link><description>Recent content in Keras on 侠客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 29 Jun 2023 17:44:00 +0800</lastBuildDate><atom:link href="https://o5o.me/tags/keras/index.xml" rel="self" type="application/rss+xml"/><item><title>模仿Keras的进度条</title><link>https://o5o.me/post/keras_training_progress_bar/</link><pubDate>Thu, 29 Jun 2023 17:44:00 +0800</pubDate><guid>https://o5o.me/post/keras_training_progress_bar/</guid><description>挺喜欢 Keras 在模型训练时显示的那个进度条, 打算移植到 PyTorch 的训练代码上.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 import sys import time def print_msg(message, line_break=False): &amp;#34;&amp;#34;&amp;#34;打印消息到标准输出&amp;#34;&amp;#34;&amp;#34; if line_break: sys.stdout.write(&amp;#34;\r&amp;#34; + message + &amp;#34;\n&amp;#34;) else: sys.stdout.write(&amp;#34;\r&amp;#34; + message) sys.stdout.flush() def time_duration_value(): return &amp;#34;6s 12ms/step&amp;#34; def loss_value(): return &amp;#34;loss: 0.0377&amp;#34; def accuracy_value(): return &amp;#34;accuracy: 0.</description></item><item><title>keras回归问题: 房价预测</title><link>https://o5o.me/post/keras_case_regression_house_price_forecast/</link><pubDate>Sat, 06 May 2023 09:50:00 +0800</pubDate><guid>https://o5o.me/post/keras_case_regression_house_price_forecast/</guid><description>所用环境为Colab.
定义任务目标 拿到某地区的一些信息, 如犯罪率, 地方房产税率等, 预测该地区的房价.
数据收集 使用 波士顿房价 数据集.
1 2 3 # 加载数据集(需联网) from tensorflow.keras.datasets import boston_housing (train_data, train_targets), (test_data, test_targets) = boston_housing.load_data() 数据可视化 建立对数据形状的感受.
1 2 3 4 5 6 # 检查数据 train_data.shape, train_targets.shape, test_data.shape, test_targets.shape, train_data.dtype # ((404, 13), (404,), (102, 13), (102,), dtype(&amp;#39;float64&amp;#39;)) type(train_data), type(train_data[0]), train_data.ndim # (numpy.ndarray, numpy.ndarray, 2) 看一下数据集里的数据到底长什么样子, 数据对应的标签是什么.
1 2 3 4 5 train_data[0] # array([ 1.23247, 0. , 8.14 , 0.</description></item><item><title>keras多分类问题: 新闻主题分类</title><link>https://o5o.me/post/keras_case_multi_classify_report_class/</link><pubDate>Fri, 05 May 2023 16:29:00 +0800</pubDate><guid>https://o5o.me/post/keras_case_multi_classify_report_class/</guid><description>所用环境为Colab.
定义任务目标 拿到一些新闻报道, 这些新闻报道都只属于某一个主题, 而不会同时属于多个主题. 把这些新闻报道归类到对应的主题下. 这是一个单标签多分类问题.
数据收集 使用 路透社 数据集.
1 2 3 # 加载数据集(需联网) from tensorflow.keras.datasets import reuters (train_data, train_labels), (test_data, test_labels) = reuters.load_data(num_words=10000) # num_words=10000, 仅保留数据中前10000个最常出现的单词 数据可视化 建立对数据形状的感受.
1 2 3 4 5 6 # 检查数据 train_data.shape, train_labels.shape, test_data.shape, test_labels.shape, train_data.dtype # ((8982,), (8982,), (2246,), (2246,), dtype(&amp;#39;O&amp;#39;)) type(train_data), type(train_data[0]), train_data.ndim # (numpy.ndarray, list, 1) 看一下数据集里的数据到底长什么样子, 数据对应的标签是什么.
1 2 3 4 5 6 7 8 9 10 # 查看第1条新闻的前10个单词, 以及它的标签(所属主题) train_data[0][:10] # 新闻里的单词被转换为一个个数字.</description></item><item><title>keras二分类问题: 影评是正面还是负面的</title><link>https://o5o.me/post/keras_case_two_classify_film_review/</link><pubDate>Fri, 05 May 2023 10:42:00 +0800</pubDate><guid>https://o5o.me/post/keras_case_two_classify_film_review/</guid><description>所用环境为Colab.
定义任务目标 拿到一些对电影的评论, 判断出来哪些评论是正面的, 哪些是负面的.
数据收集 数据收集 使用 IMDB 数据集.
1 2 3 # 加载数据集(需联网) from tensorflow.keras.datasets import imdb (train_data, train_labels), (test_data, test_labels) = imdb.load_data(num_words=10000) # num_words=10000, 仅保留数据中前10000个最常出现的单词 数据可视化 建立对数据形状的感受.
1 2 3 4 5 6 # 检查数据 train_data.shape, train_labels.shape, test_data.shape, test_labels.shape, train_data.dtype # ((25000,), (25000,), (25000,), (25000,), dtype(&amp;#39;O&amp;#39;)) type(train_data), type(train_data[0]), train_data.ndim # (numpy.ndarray, list, 1) 看一下数据集里的数据到底长什么样子, 数据对应的标签是什么.
1 2 3 4 5 6 7 8 9 10 # 查看第1条评论的前10个单词, 以及它的标签(正面还是负面) train_data[0][:10] # 电影评论里的单词被转换为一个个数字.</description></item><item><title>keras实现手写数字识别</title><link>https://o5o.me/post/keras_case_mnist_handwriting_digits_recognition/</link><pubDate>Thu, 04 May 2023 11:11:00 +0800</pubDate><guid>https://o5o.me/post/keras_case_mnist_handwriting_digits_recognition/</guid><description>所用环境为Colab.
定义任务目标 拿到一些手写数字的图片, 每张图片上含有一个手写的数字, 把这些数字识别出来, 划分到10个类别中(从0到9).
数据收集 数据收集 使用 MNIST 数据集.
1 2 3 4 5 6 7 8 9 # 加载数据集(需联网) from tensorflow.keras.datasets import mnist (train_images, train_labels), (test_images, test_labels) = mnist.load_data() # 检查数据 train_images.shape, train_labels.shape, test_images.shape, test_labels.shape, train_images.dtype # ((60000, 28, 28), (60000,), (10000, 28, 28), (10000,), dtype(&amp;#39;uint8&amp;#39;)) train_images.ndim # 训练集张量的轴的个数 数据可视化 看一下数据集里的图片到底长什么样子, 图片对应的标签是什么.
1 2 3 4 5 6 7 8 9 import matplotlib.pyplot as plt # 显示训练集中的第5张图片 digit = train_images[4] plt.</description></item></channel></rss>