<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Django on o5o</title><link>https://o5o.me/tags/django/</link><description>Recent content in Django on o5o</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 24 Feb 2023 13:36:05 +0800</lastBuildDate><atom:link href="https://o5o.me/tags/django/index.xml" rel="self" type="application/rss+xml"/><item><title>如何理解Django路由配置URLConf中的正则表达式</title><link>https://o5o.me/post/django_urlconf_re_path/</link><pubDate>Fri, 24 Feb 2023 13:36:05 +0800</pubDate><guid>https://o5o.me/post/django_urlconf_re_path/</guid><description>在Django中，如果要通过url将参数传递给视图，有两种路由配置方式。如下两种方式等效：
urlpatterns = [ path(&amp;#39;article/&amp;lt;int:id&amp;gt;/&amp;#39;, views.article_detail, name = &amp;#39;article_detail&amp;#39;), re_path(r&amp;#39;^article/(?P&amp;lt;id&amp;gt;\d+)/$&amp;#39;, views.article_detail, name=&amp;#39;article_detail&amp;#39;), ] 都可以匹配：http://.../article/3/。其中的(?P&amp;lt;id&amp;gt;\d+)作何理解？
这是一个命名组，将\d+匹配到的数字记录到名字为id的这个命名组中。
参考：Named Capturing Groups and Backreferences What does P mean in /(?P&amp;lt;topic_id&amp;gt;\d+)$</description></item><item><title>Django添加删除文章功能</title><link>https://o5o.me/post/django_add_function_delete_entry/</link><pubDate>Thu, 09 Feb 2023 20:34:03 +0800</pubDate><guid>https://o5o.me/post/django_add_function_delete_entry/</guid><description>在我写的项目里，称类似文章的文本为entry。我想要在entry编辑页面（edit_entry）上添加一个删除按钮，点击后这条entry会被删除。
添加视图 文件~/应用/views.py
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 from django.shortcuts import render, redirect from django.contrib.auth.decorators import login_required from django.http import Http404 from .models import Entry -- snip -- # 删除entry @login_required def delete_entry(request, entry_id): &amp;#34;&amp;#34;&amp;#34;删除既有条目&amp;#34;&amp;#34;&amp;#34; # 根据id获取需要删除的entry entry = Entry.objects.get(id=entry_id) # 只有该entry的拥有者可以将其删除 check_entry_owner(request, entry) # 调用.delete()方法删除文章 entry.delete() # 完成删除后返回entry列表 return redirect(&amp;#39;aoyu_blog_logs:topic&amp;#39;, topic_id=entry.topic.id) 装饰器@login_required确保只有已登录用户才能删除entry。
调用的函数check_entry_owner()确保只有entry拥有者可以将其删除。代码如下：
1 2 3 4 5 6 7 8 from django.</description></item><item><title>Django给模型字段重命名</title><link>https://o5o.me/post/django_rename_field/</link><pubDate>Thu, 09 Feb 2023 12:54:42 +0800</pubDate><guid>https://o5o.me/post/django_rename_field/</guid><description>在Django中，一个模型就是一个类，模型里的字段就是类的属性，因此本文的标题也可以写作：Django重命名类属性。
如果模型刚写好，还没在数据库中创建表，把代码里所有的旧字段名改为新字段名即可。
如果已经修改了数据库，首先在代码里将旧字段名修改为新字段名；然后需要在数据库里对表列进行重命名。在Django里不用直接操作数据库，在终端里运行命令makemigrations，Django会识别出来你是想给data_added重命名，之后再在终端运行命令migrate即可。
1 2 3 4 5 6 7 8 9 10 11 (/home/aoyu/AoyuCondaEnv/AoyuBlog) aoyu@aoyuSurface:~/AoyuPythonProjects/AoyuBlog$ python manage.py makemigrations aoyu_blog_logs Was topic.data_added renamed to topic.date_added (a DateTimeField)? [y/N] y Migrations for &amp;#39;aoyu_blog_logs&amp;#39;: aoyu_blog_logs/migrations/0004_rename_data_added_topic_date_added.py - Rename field data_added on topic to date_added (/home/aoyu/AoyuCondaEnv/AoyuBlog) aoyu@aoyuSurface:~/AoyuPythonProjects/AoyuBlog$ python manage.py migrate Operations to perform: Apply all migrations: admin, aoyu_blog_logs, auth, contenttypes, sessions Running migrations: Applying aoyu_blog_logs.0004_rename_data_added_topic_date_added... OK</description></item></channel></rss>